/*
 * generated by Xtext 2.10.0
 */
package co.edu.icesi.eketal.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import co.edu.icesi.eketal.eketal.EketalPackage
import org.eclipse.xtext.EcoreUtil2
import co.edu.icesi.eketal.eketal.Step
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.IScope
import co.edu.icesi.eketal.eketal.Rc

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class EketalScopeProvider extends AbstractEketalScopeProvider {
	
//	def IScope scopeReaction(Rc reaction, EReference ref){
//		return Scopes.scopeFor(reaction.automaton.steps)
//	}
	
	override getScope(EObject context, EReference reference) {
		if (context instanceof Rc) {
			if (reference == EketalPackage.Literals.RC__STATE) {
				val candidates = context.automaton.steps
				return Scopes.scopeFor(candidates)
			}
		}
		return super.getScope(context, reference);
	}
	
}

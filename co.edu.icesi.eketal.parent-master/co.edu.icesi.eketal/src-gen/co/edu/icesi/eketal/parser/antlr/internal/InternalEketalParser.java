package co.edu.icesi.eketal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.icesi.eketal.services.EketalGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEketalParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_ANY", "RULE_INT", "RULE_CHARACTER", "RULE_STRING", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "';'", "'eventclass'", "'{'", "'}'", "':'", "'op'", "'('", "','", "')'", "'event'", "'||'", "'&&'", "'!'", "'host'", "'on'", "'if'", "'group'", "'jphost'", "'localhost'", "'.'", "'automaton'", "'->'", "'ltl'", "'until'", "'next'", "'always'", "'eventually'", "'syncex'", "'reaction'", "'import'", "'static'", "'final'", "'...'", "'continue'", "'break'", "'='", "'['", "']'", "'?'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<'", "'>'", "'>='", "'new'", "'class'", "'for'", "'else'", "'while'", "'do'", "'switch'", "'default'", "'case'", "'try'", "'finally'", "'catch'", "'synchronized'", "'=='", "'!='", "'/'", "'%'", "'<<'", "'|'", "'^'", "'&'", "'-'", "'+'", "'~'", "'@'", "'instanceof'", "'++'", "'--'", "'#'", "'extends'", "'extension'", "'super'", "'false'", "'true'", "'null'", "'throw'", "'return'", "'call'", "'execution'", "'state'", "'start'", "'end'", "'before'", "'around'", "'after'"
    };
    public static final int RULE_HEX=9;
    public static final int T__50=50;
    public static final int RULE_CHARACTER=7;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_ANY=5;
    public static final int RULE_INT=6;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=10;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=8;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalEketalParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEketalParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEketalParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEketal.g"; }



     	private EketalGrammarAccess grammarAccess;

        public InternalEketalParser(TokenStream input, EketalGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected EketalGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalEketal.g:65:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalEketal.g:65:46: (iv_ruleModel= ruleModel EOF )
            // InternalEketal.g:66:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalEketal.g:72:1: ruleModel returns [EObject current=null] : ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_typeDeclaration_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:78:2: ( ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) )
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            {
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            {
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==15) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalEketal.g:81:4: otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )?
                    {
                    otherlv_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:85:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalEketal.g:87:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:104:4: ( ( ';' )=>otherlv_2= ';' )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==16) && (synpred1_InternalEketal())) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalEketal.g:105:5: ( ';' )=>otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getModelAccess().getSemicolonKeyword_0_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalEketal.g:112:3: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==45) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    // InternalEketal.g:114:5: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getImportSectionXImportSectionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_3_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:131:3: ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    {
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    // InternalEketal.g:133:5: lv_typeDeclaration_4_0= ruleEventClass
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getTypeDeclarationEventClassParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDeclaration_4_0=ruleEventClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"typeDeclaration",
                      						lv_typeDeclaration_4_0,
                      						"co.edu.icesi.eketal.Eketal.EventClass");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleEventClass"
    // InternalEketal.g:154:1: entryRuleEventClass returns [EObject current=null] : iv_ruleEventClass= ruleEventClass EOF ;
    public final EObject entryRuleEventClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventClass = null;


        try {
            // InternalEketal.g:154:51: (iv_ruleEventClass= ruleEventClass EOF )
            // InternalEketal.g:155:2: iv_ruleEventClass= ruleEventClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventClass=ruleEventClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventClass"


    // $ANTLR start "ruleEventClass"
    // InternalEketal.g:161:1: ruleEventClass returns [EObject current=null] : (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' ) ;
    public final EObject ruleEventClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declarations_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:167:2: ( (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' ) )
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' )
            {
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' )
            // InternalEketal.g:169:3: otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEventClassAccess().getEventclassKeyword_0());
              		
            }
            // InternalEketal.g:173:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:175:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEventClassAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEventClassRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEventClassAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:195:3: ( (lv_declarations_3_0= ruleDecl ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ID||LA5_0==21||LA5_0==25||LA5_0==32||LA5_0==36||LA5_0==38||(LA5_0>=43 && LA5_0<=44)) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalEketal.g:196:4: (lv_declarations_3_0= ruleDecl )
            	    {
            	    // InternalEketal.g:196:4: (lv_declarations_3_0= ruleDecl )
            	    // InternalEketal.g:197:5: lv_declarations_3_0= ruleDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEventClassAccess().getDeclarationsDeclParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_declarations_3_0=ruleDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEventClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"co.edu.icesi.eketal.Eketal.Decl");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEventClassAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventClass"


    // $ANTLR start "entryRuleDecl"
    // InternalEketal.g:222:1: entryRuleDecl returns [EObject current=null] : iv_ruleDecl= ruleDecl EOF ;
    public final EObject entryRuleDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecl = null;


        try {
            // InternalEketal.g:222:45: (iv_ruleDecl= ruleDecl EOF )
            // InternalEketal.g:223:2: iv_ruleDecl= ruleDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecl=ruleDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalEketal.g:229:1: ruleDecl returns [EObject current=null] : (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl ) ;
    public final EObject ruleDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Automaton_0 = null;

        EObject this_Ltl_1 = null;

        EObject this_Rc_2 = null;

        EObject this_MSig_3 = null;

        EObject this_JVarD_4 = null;

        EObject this_Group_5 = null;

        EObject this_EvDecl_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:235:2: ( (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl ) )
            // InternalEketal.g:236:2: (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl )
            {
            // InternalEketal.g:236:2: (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl )
            int alt6=7;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt6=1;
                }
                break;
            case 38:
                {
                alt6=2;
                }
                break;
            case 43:
            case 44:
                {
                alt6=3;
                }
                break;
            case 21:
                {
                alt6=4;
                }
                break;
            case RULE_ID:
                {
                alt6=5;
                }
                break;
            case 32:
                {
                alt6=6;
                }
                break;
            case 25:
                {
                alt6=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalEketal.g:237:3: this_Automaton_0= ruleAutomaton
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getAutomatonParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Automaton_0=ruleAutomaton();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Automaton_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:246:3: this_Ltl_1= ruleLtl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getLtlParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Ltl_1=ruleLtl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Ltl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:255:3: this_Rc_2= ruleRc
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getRcParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Rc_2=ruleRc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Rc_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:264:3: this_MSig_3= ruleMSig
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getMSigParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MSig_3=ruleMSig();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MSig_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:273:3: this_JVarD_4= ruleJVarD
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getJVarDParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JVarD_4=ruleJVarD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JVarD_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:282:3: this_Group_5= ruleGroup
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getGroupParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Group_5=ruleGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Group_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:291:3: this_EvDecl_6= ruleEvDecl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getEvDeclParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EvDecl_6=ruleEvDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EvDecl_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleJVarD"
    // InternalEketal.g:303:1: entryRuleJVarD returns [EObject current=null] : iv_ruleJVarD= ruleJVarD EOF ;
    public final EObject entryRuleJVarD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJVarD = null;


        try {
            // InternalEketal.g:303:46: (iv_ruleJVarD= ruleJVarD EOF )
            // InternalEketal.g:304:2: iv_ruleJVarD= ruleJVarD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJVarDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJVarD=ruleJVarD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJVarD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJVarD"


    // $ANTLR start "ruleJVarD"
    // InternalEketal.g:310:1: ruleJVarD returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJVarD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:316:2: ( ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:317:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:317:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:318:3: ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) )
            {
            // InternalEketal.g:318:3: ( (lv_name_0_0= ruleValidID ) )
            // InternalEketal.g:319:4: (lv_name_0_0= ruleValidID )
            {
            // InternalEketal.g:319:4: (lv_name_0_0= ruleValidID )
            // InternalEketal.g:320:5: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getNameValidIDParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJVarDAccess().getColonKeyword_1());
              		
            }
            // InternalEketal.g:341:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:342:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:342:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:343:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJVarD"


    // $ANTLR start "entryRuleMSig"
    // InternalEketal.g:364:1: entryRuleMSig returns [EObject current=null] : iv_ruleMSig= ruleMSig EOF ;
    public final EObject entryRuleMSig() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMSig = null;


        try {
            // InternalEketal.g:364:45: (iv_ruleMSig= ruleMSig EOF )
            // InternalEketal.g:365:2: iv_ruleMSig= ruleMSig EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMSigRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMSig=ruleMSig();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMSig; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMSig"


    // $ANTLR start "ruleMSig"
    // InternalEketal.g:371:1: ruleMSig returns [EObject current=null] : (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleMSig() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_body_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:377:2: ( (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:378:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:378:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:379:3: otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) )
            {
            otherlv_0=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMSigAccess().getOpKeyword_0());
              		
            }
            // InternalEketal.g:383:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:384:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:384:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:385:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMSigAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:406:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID||LA8_0==47) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalEketal.g:407:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:407:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:408:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:408:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:409:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:426:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==23) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalEketal.g:427:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getMSigAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:431:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:432:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:432:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:433:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMSigRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMSigAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:456:3: (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==20) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalEketal.g:457:4: otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getMSigAccess().getColonKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:461:4: ( (lv_type_8_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:462:5: (lv_type_8_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:462:5: (lv_type_8_0= ruleJvmTypeReference )
                    // InternalEketal.g:463:6: lv_type_8_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getTypeJvmTypeReferenceParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_type_8_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_8_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:481:3: ( (lv_body_9_0= ruleXBlockExpression ) )
            // InternalEketal.g:482:4: (lv_body_9_0= ruleXBlockExpression )
            {
            // InternalEketal.g:482:4: (lv_body_9_0= ruleXBlockExpression )
            // InternalEketal.g:483:5: lv_body_9_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_9_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMSig"


    // $ANTLR start "entryRuleEvDecl"
    // InternalEketal.g:504:1: entryRuleEvDecl returns [EObject current=null] : iv_ruleEvDecl= ruleEvDecl EOF ;
    public final EObject entryRuleEvDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvDecl = null;


        try {
            // InternalEketal.g:504:47: (iv_ruleEvDecl= ruleEvDecl EOF )
            // InternalEketal.g:505:2: iv_ruleEvDecl= ruleEvDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEvDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvDecl=ruleEvDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvDecl"


    // $ANTLR start "ruleEvDecl"
    // InternalEketal.g:511:1: ruleEvDecl returns [EObject current=null] : (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) ;
    public final EObject ruleEvDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_eventos_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:517:2: ( (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) )
            // InternalEketal.g:518:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            {
            // InternalEketal.g:518:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            // InternalEketal.g:519:3: otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEvDeclAccess().getEventKeyword_0());
              		
            }
            // InternalEketal.g:523:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:524:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:524:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:525:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEvDeclAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEvDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEvDeclAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:545:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID||LA11_0==47) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalEketal.g:546:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:546:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:547:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:547:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:548:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEvDeclRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:565:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==23) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalEketal.g:566:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getEvDeclAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:570:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:571:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:571:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:572:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEvDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEvDeclAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,20,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEvDeclAccess().getColonKeyword_5());
              		
            }
            // InternalEketal.g:599:3: ( (lv_eventos_8_0= ruleOrEvent ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==22||(LA12_0>=28 && LA12_0<=31)||(LA12_0>=103 && LA12_0<=104)) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalEketal.g:600:4: (lv_eventos_8_0= ruleOrEvent )
            	    {
            	    // InternalEketal.g:600:4: (lv_eventos_8_0= ruleOrEvent )
            	    // InternalEketal.g:601:5: lv_eventos_8_0= ruleOrEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEvDeclAccess().getEventosOrEventParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_eventos_8_0=ruleOrEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEvDeclRule());
            	      					}
            	      					add(
            	      						current,
            	      						"eventos",
            	      						lv_eventos_8_0,
            	      						"co.edu.icesi.eketal.Eketal.OrEvent");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            otherlv_9=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEvDeclAccess().getSemicolonKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvDecl"


    // $ANTLR start "entryRuleOrEvent"
    // InternalEketal.g:626:1: entryRuleOrEvent returns [EObject current=null] : iv_ruleOrEvent= ruleOrEvent EOF ;
    public final EObject entryRuleOrEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrEvent = null;


        try {
            // InternalEketal.g:626:48: (iv_ruleOrEvent= ruleOrEvent EOF )
            // InternalEketal.g:627:2: iv_ruleOrEvent= ruleOrEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrEvent=ruleOrEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrEvent"


    // $ANTLR start "ruleOrEvent"
    // InternalEketal.g:633:1: ruleOrEvent returns [EObject current=null] : (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) ;
    public final EObject ruleOrEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_AndEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:639:2: ( (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) )
            // InternalEketal.g:640:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            {
            // InternalEketal.g:640:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            // InternalEketal.g:641:3: this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrEventAccess().getAndEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_16);
            this_AndEvent_0=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:649:3: ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==26) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalEketal.g:650:4: () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) )
            	    {
            	    // InternalEketal.g:650:4: ()
            	    // InternalEketal.g:651:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrEventAccess().getOrEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:657:4: ( (lv_op_2_0= '||' ) )
            	    // InternalEketal.g:658:5: (lv_op_2_0= '||' )
            	    {
            	    // InternalEketal.g:658:5: (lv_op_2_0= '||' )
            	    // InternalEketal.g:659:6: lv_op_2_0= '||'
            	    {
            	    lv_op_2_0=(Token)match(input,26,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getOrEventAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getOrEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "||");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:671:4: ( (lv_right_3_0= ruleAndEvent ) )
            	    // InternalEketal.g:672:5: (lv_right_3_0= ruleAndEvent )
            	    {
            	    // InternalEketal.g:672:5: (lv_right_3_0= ruleAndEvent )
            	    // InternalEketal.g:673:6: lv_right_3_0= ruleAndEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrEventAccess().getRightAndEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_right_3_0=ruleAndEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.AndEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrEvent"


    // $ANTLR start "entryRuleAndEvent"
    // InternalEketal.g:695:1: entryRuleAndEvent returns [EObject current=null] : iv_ruleAndEvent= ruleAndEvent EOF ;
    public final EObject entryRuleAndEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndEvent = null;


        try {
            // InternalEketal.g:695:49: (iv_ruleAndEvent= ruleAndEvent EOF )
            // InternalEketal.g:696:2: iv_ruleAndEvent= ruleAndEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndEvent=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndEvent"


    // $ANTLR start "ruleAndEvent"
    // InternalEketal.g:702:1: ruleAndEvent returns [EObject current=null] : (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) ;
    public final EObject ruleAndEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_NotEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:708:2: ( (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) )
            // InternalEketal.g:709:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            {
            // InternalEketal.g:709:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            // InternalEketal.g:710:3: this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndEventAccess().getNotEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            this_NotEvent_0=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:718:3: ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==27) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalEketal.g:719:4: () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) )
            	    {
            	    // InternalEketal.g:719:4: ()
            	    // InternalEketal.g:720:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndEventAccess().getAndEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:726:4: ( (lv_op_2_0= '&&' ) )
            	    // InternalEketal.g:727:5: (lv_op_2_0= '&&' )
            	    {
            	    // InternalEketal.g:727:5: (lv_op_2_0= '&&' )
            	    // InternalEketal.g:728:6: lv_op_2_0= '&&'
            	    {
            	    lv_op_2_0=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getAndEventAccess().getOpAmpersandAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAndEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "&&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:740:4: ( (lv_right_3_0= ruleNotEvent ) )
            	    // InternalEketal.g:741:5: (lv_right_3_0= ruleNotEvent )
            	    {
            	    // InternalEketal.g:741:5: (lv_right_3_0= ruleNotEvent )
            	    // InternalEketal.g:742:6: lv_right_3_0= ruleNotEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndEventAccess().getRightNotEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_right_3_0=ruleNotEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.NotEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndEvent"


    // $ANTLR start "entryRuleNotEvent"
    // InternalEketal.g:764:1: entryRuleNotEvent returns [EObject current=null] : iv_ruleNotEvent= ruleNotEvent EOF ;
    public final EObject entryRuleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotEvent = null;


        try {
            // InternalEketal.g:764:49: (iv_ruleNotEvent= ruleNotEvent EOF )
            // InternalEketal.g:765:2: iv_ruleNotEvent= ruleNotEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNotEvent=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotEvent"


    // $ANTLR start "ruleNotEvent"
    // InternalEketal.g:771:1: ruleNotEvent returns [EObject current=null] : (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) ;
    public final EObject ruleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject this_AtomEvent_0 = null;

        EObject this_UnaryExpresion_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:777:2: ( (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) )
            // InternalEketal.g:778:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            {
            // InternalEketal.g:778:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==22||(LA15_0>=29 && LA15_0<=31)||(LA15_0>=103 && LA15_0<=104)) ) {
                alt15=1;
            }
            else if ( (LA15_0==28) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEketal.g:779:3: this_AtomEvent_0= ruleAtomEvent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getAtomEventParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AtomEvent_0=ruleAtomEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomEvent_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:788:3: this_UnaryExpresion_1= ruleUnaryExpresion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getUnaryExpresionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnaryExpresion_1=ruleUnaryExpresion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnaryExpresion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotEvent"


    // $ANTLR start "entryRuleUnaryExpresion"
    // InternalEketal.g:800:1: entryRuleUnaryExpresion returns [EObject current=null] : iv_ruleUnaryExpresion= ruleUnaryExpresion EOF ;
    public final EObject entryRuleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpresion = null;


        try {
            // InternalEketal.g:800:55: (iv_ruleUnaryExpresion= ruleUnaryExpresion EOF )
            // InternalEketal.g:801:2: iv_ruleUnaryExpresion= ruleUnaryExpresion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpresionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpresion=ruleUnaryExpresion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpresion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpresion"


    // $ANTLR start "ruleUnaryExpresion"
    // InternalEketal.g:807:1: ruleUnaryExpresion returns [EObject current=null] : ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) ;
    public final EObject ruleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:813:2: ( ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) )
            // InternalEketal.g:814:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            {
            // InternalEketal.g:814:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            // InternalEketal.g:815:3: () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) )
            {
            // InternalEketal.g:815:3: ()
            // InternalEketal.g:816:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnaryExpresionAccess().getUnaryEventAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:822:3: ( (lv_op_1_0= '!' ) )
            // InternalEketal.g:823:4: (lv_op_1_0= '!' )
            {
            // InternalEketal.g:823:4: (lv_op_1_0= '!' )
            // InternalEketal.g:824:5: lv_op_1_0= '!'
            {
            lv_op_1_0=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getUnaryExpresionAccess().getOpExclamationMarkKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnaryExpresionRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "!");
              				
            }

            }


            }

            // InternalEketal.g:836:3: ( (lv_expr_2_0= ruleAtomEvent ) )
            // InternalEketal.g:837:4: (lv_expr_2_0= ruleAtomEvent )
            {
            // InternalEketal.g:837:4: (lv_expr_2_0= ruleAtomEvent )
            // InternalEketal.g:838:5: lv_expr_2_0= ruleAtomEvent
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnaryExpresionAccess().getExprAtomEventParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnaryExpresionRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.AtomEvent");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpresion"


    // $ANTLR start "entryRuleAtomEvent"
    // InternalEketal.g:859:1: entryRuleAtomEvent returns [EObject current=null] : iv_ruleAtomEvent= ruleAtomEvent EOF ;
    public final EObject entryRuleAtomEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomEvent = null;


        try {
            // InternalEketal.g:859:50: (iv_ruleAtomEvent= ruleAtomEvent EOF )
            // InternalEketal.g:860:2: iv_ruleAtomEvent= ruleAtomEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAtomEvent=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomEvent"


    // $ANTLR start "ruleAtomEvent"
    // InternalEketal.g:866:1: ruleAtomEvent returns [EObject current=null] : ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) ;
    public final EObject ruleAtomEvent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_tipoEvento_0_0 = null;

        EObject this_OrEvent_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:872:2: ( ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) )
            // InternalEketal.g:873:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            {
            // InternalEketal.g:873:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=29 && LA16_0<=31)||(LA16_0>=103 && LA16_0<=104)) ) {
                alt16=1;
            }
            else if ( (LA16_0==22) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEketal.g:874:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    {
                    // InternalEketal.g:874:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    // InternalEketal.g:875:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    {
                    // InternalEketal.g:875:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    // InternalEketal.g:876:5: lv_tipoEvento_0_0= ruleEventPredicate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAtomEventAccess().getTipoEventoEventPredicateParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tipoEvento_0_0=ruleEventPredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAtomEventRule());
                      					}
                      					set(
                      						current,
                      						"tipoEvento",
                      						lv_tipoEvento_0_0,
                      						"co.edu.icesi.eketal.Eketal.EventPredicate");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:894:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    {
                    // InternalEketal.g:894:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    // InternalEketal.g:895:4: otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomEventAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomEventAccess().getOrEventParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_20);
                    this_OrEvent_2=ruleOrEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OrEvent_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomEventAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomEvent"


    // $ANTLR start "entryRuleEventPredicate"
    // InternalEketal.g:916:1: entryRuleEventPredicate returns [EObject current=null] : iv_ruleEventPredicate= ruleEventPredicate EOF ;
    public final EObject entryRuleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventPredicate = null;


        try {
            // InternalEketal.g:916:55: (iv_ruleEventPredicate= ruleEventPredicate EOF )
            // InternalEketal.g:917:2: iv_ruleEventPredicate= ruleEventPredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventPredicate=ruleEventPredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventPredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventPredicate"


    // $ANTLR start "ruleEventPredicate"
    // InternalEketal.g:923:1: ruleEventPredicate returns [EObject current=null] : (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) ;
    public final EObject ruleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject this_KindAttribute_0 = null;

        EObject this_Trigger_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:929:2: ( (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) )
            // InternalEketal.g:930:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            {
            // InternalEketal.g:930:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=29 && LA17_0<=31)) ) {
                alt17=1;
            }
            else if ( ((LA17_0>=103 && LA17_0<=104)) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEketal.g:931:3: this_KindAttribute_0= ruleKindAttribute
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getKindAttributeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_KindAttribute_0=ruleKindAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KindAttribute_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:940:3: this_Trigger_1= ruleTrigger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getTriggerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Trigger_1=ruleTrigger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Trigger_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventPredicate"


    // $ANTLR start "entryRuleKindAttribute"
    // InternalEketal.g:952:1: entryRuleKindAttribute returns [EObject current=null] : iv_ruleKindAttribute= ruleKindAttribute EOF ;
    public final EObject entryRuleKindAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKindAttribute = null;


        try {
            // InternalEketal.g:952:54: (iv_ruleKindAttribute= ruleKindAttribute EOF )
            // InternalEketal.g:953:2: iv_ruleKindAttribute= ruleKindAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKindAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKindAttribute=ruleKindAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKindAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKindAttribute"


    // $ANTLR start "ruleKindAttribute"
    // InternalEketal.g:959:1: ruleKindAttribute returns [EObject current=null] : ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) ;
    public final EObject ruleKindAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_condition_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:965:2: ( ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) )
            // InternalEketal.g:966:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            {
            // InternalEketal.g:966:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt18=1;
                }
                break;
            case 30:
                {
                alt18=2;
                }
                break;
            case 31:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEketal.g:967:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    {
                    // InternalEketal.g:967:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    // InternalEketal.g:968:4: otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')'
                    {
                    otherlv_0=(Token)match(input,29,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getKindAttributeAccess().getHostKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalEketal.g:976:4: ( (otherlv_2= RULE_ID ) )
                    // InternalEketal.g:977:5: (otherlv_2= RULE_ID )
                    {
                    // InternalEketal.g:977:5: (otherlv_2= RULE_ID )
                    // InternalEketal.g:978:6: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getKindAttributeAccess().getHostgroupGroupCrossReference_0_2_0());
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:995:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    {
                    // InternalEketal.g:995:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    // InternalEketal.g:996:4: otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')'
                    {
                    otherlv_4=(Token)match(input,30,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getKindAttributeAccess().getOnKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalEketal.g:1004:4: ( (otherlv_6= RULE_ID ) )
                    // InternalEketal.g:1005:5: (otherlv_6= RULE_ID )
                    {
                    // InternalEketal.g:1005:5: (otherlv_6= RULE_ID )
                    // InternalEketal.g:1006:6: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_6, grammarAccess.getKindAttributeAccess().getOngroupGroupCrossReference_1_2_0());
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:1023:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    {
                    // InternalEketal.g:1023:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    // InternalEketal.g:1024:4: otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    {
                    otherlv_8=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getKindAttributeAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:1028:4: ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    // InternalEketal.g:1029:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    {
                    // InternalEketal.g:1029:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    // InternalEketal.g:1030:6: lv_condition_9_0= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKindAttributeAccess().getConditionXParenthesizedExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_9_0=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKindAttributeRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XParenthesizedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKindAttribute"


    // $ANTLR start "entryRuleTrigger"
    // InternalEketal.g:1052:1: entryRuleTrigger returns [EObject current=null] : iv_ruleTrigger= ruleTrigger EOF ;
    public final EObject entryRuleTrigger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrigger = null;


        try {
            // InternalEketal.g:1052:48: (iv_ruleTrigger= ruleTrigger EOF )
            // InternalEketal.g:1053:2: iv_ruleTrigger= ruleTrigger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTriggerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTrigger=ruleTrigger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrigger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrigger"


    // $ANTLR start "ruleTrigger"
    // InternalEketal.g:1059:1: ruleTrigger returns [EObject current=null] : ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) ;
    public final EObject ruleTrigger() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Enumerator lv_triggerType_0_0 = null;

        EObject lv_returndef_2_0 = null;

        AntlrDatatypeRuleToken lv_esig_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_params_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1065:2: ( ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) )
            // InternalEketal.g:1066:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            {
            // InternalEketal.g:1066:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            // InternalEketal.g:1067:3: ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')'
            {
            // InternalEketal.g:1067:3: ( (lv_triggerType_0_0= ruleTPrefix ) )
            // InternalEketal.g:1068:4: (lv_triggerType_0_0= ruleTPrefix )
            {
            // InternalEketal.g:1068:4: (lv_triggerType_0_0= ruleTPrefix )
            // InternalEketal.g:1069:5: lv_triggerType_0_0= ruleTPrefix
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getTriggerTypeTPrefixEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_triggerType_0_0=ruleTPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"triggerType",
              						lv_triggerType_0_0,
              						"co.edu.icesi.eketal.Eketal.TPrefix");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,22,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalEketal.g:1090:3: ( (lv_returndef_2_0= ruleTypeReturn ) )?
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalEketal.g:1091:4: (lv_returndef_2_0= ruleTypeReturn )
                    {
                    // InternalEketal.g:1091:4: (lv_returndef_2_0= ruleTypeReturn )
                    // InternalEketal.g:1092:5: lv_returndef_2_0= ruleTypeReturn
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTriggerAccess().getReturndefTypeReturnParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_returndef_2_0=ruleTypeReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTriggerRule());
                      					}
                      					set(
                      						current,
                      						"returndef",
                      						lv_returndef_2_0,
                      						"co.edu.icesi.eketal.Eketal.TypeReturn");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:1109:3: ( (lv_esig_3_0= ruleQualifiedName ) )
            // InternalEketal.g:1110:4: (lv_esig_3_0= ruleQualifiedName )
            {
            // InternalEketal.g:1110:4: (lv_esig_3_0= ruleQualifiedName )
            // InternalEketal.g:1111:5: lv_esig_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getEsigQualifiedNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_esig_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"esig",
              						lv_esig_3_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,22,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:1132:3: ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalEketal.g:1133:4: ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    {
                    // InternalEketal.g:1133:4: ( (lv_params_5_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1134:5: (lv_params_5_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1134:5: (lv_params_5_0= ruleJvmTypeReference )
                    // InternalEketal.g:1135:6: lv_params_5_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_5_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTriggerRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_5_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1152:4: (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==23) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalEketal.g:1153:5: otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    {
                    	    otherlv_6=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1157:5: ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    // InternalEketal.g:1158:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    {
                    	    // InternalEketal.g:1158:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    // InternalEketal.g:1159:7: lv_params_7_0= ruleJvmTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_7_0=ruleJvmTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTriggerRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_7_0,
                    	      								"jbase.Jbase.JvmTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,24,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_9=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrigger"


    // $ANTLR start "entryRuleTypeReturn"
    // InternalEketal.g:1190:1: entryRuleTypeReturn returns [EObject current=null] : iv_ruleTypeReturn= ruleTypeReturn EOF ;
    public final EObject entryRuleTypeReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReturn = null;


        try {
            // InternalEketal.g:1190:51: (iv_ruleTypeReturn= ruleTypeReturn EOF )
            // InternalEketal.g:1191:2: iv_ruleTypeReturn= ruleTypeReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReturnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReturn=ruleTypeReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReturn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReturn"


    // $ANTLR start "ruleTypeReturn"
    // InternalEketal.g:1197:1: ruleTypeReturn returns [EObject current=null] : ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleTypeReturn() throws RecognitionException {
        EObject current = null;

        Token lv_astk_0_0=null;
        EObject lv_jvmRef_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1203:2: ( ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:1204:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:1204:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ANY) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_ID) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEketal.g:1205:3: ( (lv_astk_0_0= RULE_ANY ) )
                    {
                    // InternalEketal.g:1205:3: ( (lv_astk_0_0= RULE_ANY ) )
                    // InternalEketal.g:1206:4: (lv_astk_0_0= RULE_ANY )
                    {
                    // InternalEketal.g:1206:4: (lv_astk_0_0= RULE_ANY )
                    // InternalEketal.g:1207:5: lv_astk_0_0= RULE_ANY
                    {
                    lv_astk_0_0=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_astk_0_0, grammarAccess.getTypeReturnAccess().getAstkANYTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeReturnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"astk",
                      						lv_astk_0_0,
                      						"co.edu.icesi.eketal.Eketal.ANY");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1224:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    {
                    // InternalEketal.g:1224:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1225:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1225:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    // InternalEketal.g:1226:5: lv_jvmRef_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeReturnAccess().getJvmRefJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_jvmRef_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeReturnRule());
                      					}
                      					set(
                      						current,
                      						"jvmRef",
                      						lv_jvmRef_1_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReturn"


    // $ANTLR start "entryRuleGroup"
    // InternalEketal.g:1247:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // InternalEketal.g:1247:46: (iv_ruleGroup= ruleGroup EOF )
            // InternalEketal.g:1248:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroup=ruleGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // InternalEketal.g:1254:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_hosts_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1260:2: ( (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) )
            // InternalEketal.g:1261:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            {
            // InternalEketal.g:1261:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            // InternalEketal.g:1262:3: otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
              		
            }
            // InternalEketal.g:1266:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1267:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1267:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1268:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGroupRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:1288:3: ( (lv_hosts_3_0= ruleHost ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( ((LA23_0>=RULE_ID && LA23_0<=RULE_INT)||(LA23_0>=33 && LA23_0<=34)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalEketal.g:1289:4: (lv_hosts_3_0= ruleHost )
            	    {
            	    // InternalEketal.g:1289:4: (lv_hosts_3_0= ruleHost )
            	    // InternalEketal.g:1290:5: lv_hosts_3_0= ruleHost
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGroupAccess().getHostsHostParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_hosts_3_0=ruleHost();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGroupRule());
            	      					}
            	      					add(
            	      						current,
            	      						"hosts",
            	      						lv_hosts_3_0,
            	      						"co.edu.icesi.eketal.Eketal.Host");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleHost"
    // InternalEketal.g:1315:1: entryRuleHost returns [EObject current=null] : iv_ruleHost= ruleHost EOF ;
    public final EObject entryRuleHost() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHost = null;


        try {
            // InternalEketal.g:1315:45: (iv_ruleHost= ruleHost EOF )
            // InternalEketal.g:1316:2: iv_ruleHost= ruleHost EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHost=ruleHost();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHost; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHost"


    // $ANTLR start "ruleHost"
    // InternalEketal.g:1322:1: ruleHost returns [EObject current=null] : ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleHost() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_ip_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1328:2: ( ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) )
            // InternalEketal.g:1329:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalEketal.g:1329:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_ANY && LA24_0<=RULE_INT)||(LA24_0>=33 && LA24_0<=34)) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_ID) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEketal.g:1330:3: ( (lv_ip_0_0= ruleIp ) )
                    {
                    // InternalEketal.g:1330:3: ( (lv_ip_0_0= ruleIp ) )
                    // InternalEketal.g:1331:4: (lv_ip_0_0= ruleIp )
                    {
                    // InternalEketal.g:1331:4: (lv_ip_0_0= ruleIp )
                    // InternalEketal.g:1332:5: lv_ip_0_0= ruleIp
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHostAccess().getIpIpParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ip_0_0=ruleIp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHostRule());
                      					}
                      					set(
                      						current,
                      						"ip",
                      						lv_ip_0_0,
                      						"co.edu.icesi.eketal.Eketal.Ip");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1350:3: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalEketal.g:1350:3: ( (otherlv_1= RULE_ID ) )
                    // InternalEketal.g:1351:4: (otherlv_1= RULE_ID )
                    {
                    // InternalEketal.g:1351:4: (otherlv_1= RULE_ID )
                    // InternalEketal.g:1352:5: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHostRule());
                      					}
                      				
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getHostAccess().getGroupIdGroupCrossReference_1_0());
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHost"


    // $ANTLR start "entryRuleIp"
    // InternalEketal.g:1367:1: entryRuleIp returns [String current=null] : iv_ruleIp= ruleIp EOF ;
    public final String entryRuleIp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIp = null;


        try {
            // InternalEketal.g:1367:42: (iv_ruleIp= ruleIp EOF )
            // InternalEketal.g:1368:2: iv_ruleIp= ruleIp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIp=ruleIp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIp"


    // $ANTLR start "ruleIp"
    // InternalEketal.g:1374:1: ruleIp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) ) ) ;
    public final AntlrDatatypeRuleToken ruleIp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_INT_6=null;
        Token this_INT_8=null;
        Token this_ANY_9=null;


        	enterRule();

        try {
            // InternalEketal.g:1380:2: ( (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) ) ) )
            // InternalEketal.g:1381:2: (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) ) )
            {
            // InternalEketal.g:1381:2: (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt29=1;
                }
                break;
            case 34:
                {
                alt29=2;
                }
                break;
            case RULE_ANY:
            case RULE_INT:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalEketal.g:1382:3: kw= 'jphost'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getJphostKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:1388:3: kw= 'localhost'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getLocalhostKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:1394:3: ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) )
                    {
                    // InternalEketal.g:1394:3: ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY ) )
                    // InternalEketal.g:1395:4: (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY )
                    {
                    // InternalEketal.g:1395:4: (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_INT) ) {
                        int LA27_1 = input.LA(2);

                        if ( (LA27_1==35) ) {
                            alt27=1;
                        }
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalEketal.g:1396:5: this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )?
                            {
                            this_INT_2=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_2, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_0());
                              				
                            }
                            kw=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_1());
                              				
                            }
                            // InternalEketal.g:1408:5: (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )?
                            int alt26=2;
                            int LA26_0 = input.LA(1);

                            if ( (LA26_0==RULE_INT) ) {
                                int LA26_1 = input.LA(2);

                                if ( (LA26_1==35) ) {
                                    alt26=1;
                                }
                            }
                            switch (alt26) {
                                case 1 :
                                    // InternalEketal.g:1409:6: this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )?
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_2_0());
                                      					
                                    }
                                    kw=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_2_1());
                                      					
                                    }
                                    // InternalEketal.g:1421:6: (this_INT_6= RULE_INT kw= '.' )?
                                    int alt25=2;
                                    int LA25_0 = input.LA(1);

                                    if ( (LA25_0==RULE_INT) ) {
                                        int LA25_1 = input.LA(2);

                                        if ( (LA25_1==35) ) {
                                            alt25=1;
                                        }
                                    }
                                    switch (alt25) {
                                        case 1 :
                                            // InternalEketal.g:1422:7: this_INT_6= RULE_INT kw= '.'
                                            {
                                            this_INT_6=(Token)match(input,RULE_INT,FOLLOW_24); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              							current.merge(this_INT_6);
                                              						
                                            }
                                            if ( state.backtracking==0 ) {

                                              							newLeafNode(this_INT_6, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_2_2_0());
                                              						
                                            }
                                            kw=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              							current.merge(kw);
                                              							newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_2_2_1());
                                              						
                                            }

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalEketal.g:1437:4: (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY )
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==RULE_INT) ) {
                        alt28=1;
                    }
                    else if ( (LA28_0==RULE_ANY) ) {
                        alt28=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 28, 0, input);

                        throw nvae;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalEketal.g:1438:5: this_INT_8= RULE_INT
                            {
                            this_INT_8=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_8);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_8, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalEketal.g:1446:5: this_ANY_9= RULE_ANY
                            {
                            this_ANY_9=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ANY_9);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ANY_9, grammarAccess.getIpAccess().getANYTerminalRuleCall_2_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIp"


    // $ANTLR start "entryRuleAutomaton"
    // InternalEketal.g:1459:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalEketal.g:1459:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalEketal.g:1460:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalEketal.g:1466:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_steps_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1472:2: ( (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) )
            // InternalEketal.g:1473:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            {
            // InternalEketal.g:1473:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            // InternalEketal.g:1474:3: otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalEketal.g:1478:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1479:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1479:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1480:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAutomatonRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAutomatonAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:1500:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_ID||LA31_0==47) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalEketal.g:1501:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:1501:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:1502:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:1502:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:1503:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAutomatonRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1520:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==23) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalEketal.g:1521:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1525:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:1526:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:1526:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:1527:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAutomatonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAutomatonAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,18,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:1554:3: ( (lv_steps_8_0= ruleStep ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_ID||(LA32_0>=105 && LA32_0<=107)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalEketal.g:1555:4: (lv_steps_8_0= ruleStep )
            	    {
            	    // InternalEketal.g:1555:4: (lv_steps_8_0= ruleStep )
            	    // InternalEketal.g:1556:5: lv_steps_8_0= ruleStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAutomatonAccess().getStepsStepParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_steps_8_0=ruleStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"steps",
            	      						lv_steps_8_0,
            	      						"co.edu.icesi.eketal.Eketal.Step");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            otherlv_9=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleStep"
    // InternalEketal.g:1581:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalEketal.g:1581:45: (iv_ruleStep= ruleStep EOF )
            // InternalEketal.g:1582:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalEketal.g:1588:1: ruleStep returns [EObject current=null] : ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Enumerator lv_type_0_0 = null;

        EObject lv_transitions_4_0 = null;

        EObject lv_transitions_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1594:2: ( ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) )
            // InternalEketal.g:1595:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            {
            // InternalEketal.g:1595:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            // InternalEketal.g:1596:3: ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';'
            {
            // InternalEketal.g:1596:3: ( (lv_type_0_0= ruleStateType ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=105 && LA33_0<=107)) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalEketal.g:1597:4: (lv_type_0_0= ruleStateType )
                    {
                    // InternalEketal.g:1597:4: (lv_type_0_0= ruleStateType )
                    // InternalEketal.g:1598:5: lv_type_0_0= ruleStateType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStepAccess().getTypeStateTypeEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_0_0=ruleStateType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStepRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"co.edu.icesi.eketal.Eketal.StateType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:1615:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1616:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1616:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1617:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getStepAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStepRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalEketal.g:1633:3: (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==20) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalEketal.g:1634:4: otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStepAccess().getColonKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalEketal.g:1642:4: ( (lv_transitions_4_0= ruleTransDef ) )
                    // InternalEketal.g:1643:5: (lv_transitions_4_0= ruleTransDef )
                    {
                    // InternalEketal.g:1643:5: (lv_transitions_4_0= ruleTransDef )
                    // InternalEketal.g:1644:6: lv_transitions_4_0= ruleTransDef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_transitions_4_0=ruleTransDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStepRule());
                      						}
                      						add(
                      							current,
                      							"transitions",
                      							lv_transitions_4_0,
                      							"co.edu.icesi.eketal.Eketal.TransDef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,24,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_3());
                      			
                    }
                    // InternalEketal.g:1665:4: (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==26) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalEketal.g:1666:5: otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')'
                    	    {
                    	    otherlv_6=(Token)match(input,26,FOLLOW_10); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getStepAccess().getVerticalLineVerticalLineKeyword_2_4_0());
                    	      				
                    	    }
                    	    otherlv_7=(Token)match(input,22,FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_4_1());
                    	      				
                    	    }
                    	    // InternalEketal.g:1674:5: ( (lv_transitions_8_0= ruleTransDef ) )*
                    	    loop34:
                    	    do {
                    	        int alt34=2;
                    	        int LA34_0 = input.LA(1);

                    	        if ( (LA34_0==RULE_ID) ) {
                    	            alt34=1;
                    	        }


                    	        switch (alt34) {
                    	    	case 1 :
                    	    	    // InternalEketal.g:1675:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    {
                    	    	    // InternalEketal.g:1675:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    // InternalEketal.g:1676:7: lv_transitions_8_0= ruleTransDef
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_4_2_0());
                    	    	      						
                    	    	    }
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_transitions_8_0=ruleTransDef();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							if (current==null) {
                    	    	      								current = createModelElementForParent(grammarAccess.getStepRule());
                    	    	      							}
                    	    	      							add(
                    	    	      								current,
                    	    	      								"transitions",
                    	    	      								lv_transitions_8_0,
                    	    	      								"co.edu.icesi.eketal.Eketal.TransDef");
                    	    	      							afterParserOrEnumRuleCall();
                    	    	      						
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop34;
                    	        }
                    	    } while (true);

                    	    otherlv_9=(Token)match(input,24,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStepAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "entryRuleTransDef"
    // InternalEketal.g:1707:1: entryRuleTransDef returns [EObject current=null] : iv_ruleTransDef= ruleTransDef EOF ;
    public final EObject entryRuleTransDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransDef = null;


        try {
            // InternalEketal.g:1707:49: (iv_ruleTransDef= ruleTransDef EOF )
            // InternalEketal.g:1708:2: iv_ruleTransDef= ruleTransDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransDef=ruleTransDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransDef"


    // $ANTLR start "ruleTransDef"
    // InternalEketal.g:1714:1: ruleTransDef returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleTransDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalEketal.g:1720:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalEketal.g:1721:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalEketal.g:1721:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            // InternalEketal.g:1722:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) )
            {
            // InternalEketal.g:1722:3: ( (otherlv_0= RULE_ID ) )
            // InternalEketal.g:1723:4: (otherlv_0= RULE_ID )
            {
            // InternalEketal.g:1723:4: (otherlv_0= RULE_ID )
            // InternalEketal.g:1724:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getTransDefAccess().getEventEvDeclCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTransDefAccess().getHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalEketal.g:1739:3: ( (otherlv_2= RULE_ID ) )
            // InternalEketal.g:1740:4: (otherlv_2= RULE_ID )
            {
            // InternalEketal.g:1740:4: (otherlv_2= RULE_ID )
            // InternalEketal.g:1741:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getTransDefAccess().getTargetStepCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransDef"


    // $ANTLR start "entryRuleLtl"
    // InternalEketal.g:1756:1: entryRuleLtl returns [EObject current=null] : iv_ruleLtl= ruleLtl EOF ;
    public final EObject entryRuleLtl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtl = null;


        try {
            // InternalEketal.g:1756:44: (iv_ruleLtl= ruleLtl EOF )
            // InternalEketal.g:1757:2: iv_ruleLtl= ruleLtl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtl=ruleLtl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtl"


    // $ANTLR start "ruleLtl"
    // InternalEketal.g:1763:1: ruleLtl returns [EObject current=null] : (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlOr ) ) otherlv_9= '}' ) ;
    public final EObject ruleLtl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_predicate_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1769:2: ( (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlOr ) ) otherlv_9= '}' ) )
            // InternalEketal.g:1770:2: (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlOr ) ) otherlv_9= '}' )
            {
            // InternalEketal.g:1770:2: (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlOr ) ) otherlv_9= '}' )
            // InternalEketal.g:1771:3: otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlOr ) ) otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLtlAccess().getLtlKeyword_0());
              		
            }
            // InternalEketal.g:1775:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1776:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1776:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1777:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLtlAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLtlAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:1797:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_ID||LA38_0==47) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalEketal.g:1798:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:1798:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:1799:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:1799:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:1800:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLtlAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLtlRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1817:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==23) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalEketal.g:1818:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLtlAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1822:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:1823:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:1823:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:1824:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLtlAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLtlRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getLtlAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,18,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getLtlAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:1851:3: ( (lv_predicate_8_0= ruleLtlOr ) )
            // InternalEketal.g:1852:4: (lv_predicate_8_0= ruleLtlOr )
            {
            // InternalEketal.g:1852:4: (lv_predicate_8_0= ruleLtlOr )
            // InternalEketal.g:1853:5: lv_predicate_8_0= ruleLtlOr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlAccess().getPredicateLtlOrParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_predicate_8_0=ruleLtlOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_8_0,
              						"co.edu.icesi.eketal.Eketal.LtlOr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLtlAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtl"


    // $ANTLR start "entryRuleLtlOr"
    // InternalEketal.g:1878:1: entryRuleLtlOr returns [EObject current=null] : iv_ruleLtlOr= ruleLtlOr EOF ;
    public final EObject entryRuleLtlOr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlOr = null;


        try {
            // InternalEketal.g:1878:46: (iv_ruleLtlOr= ruleLtlOr EOF )
            // InternalEketal.g:1879:2: iv_ruleLtlOr= ruleLtlOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlOr=ruleLtlOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlOr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlOr"


    // $ANTLR start "ruleLtlOr"
    // InternalEketal.g:1885:1: ruleLtlOr returns [EObject current=null] : (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* ) ;
    public final EObject ruleLtlOr() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlAnd_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1891:2: ( (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* ) )
            // InternalEketal.g:1892:2: (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* )
            {
            // InternalEketal.g:1892:2: (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* )
            // InternalEketal.g:1893:3: this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlOrAccess().getLtlAndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_16);
            this_LtlAnd_0=ruleLtlAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlAnd_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:1901:3: ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==26) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalEketal.g:1902:4: () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) )
            	    {
            	    // InternalEketal.g:1902:4: ()
            	    // InternalEketal.g:1903:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlOrAccess().getLtlOrLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:1909:4: ( (lv_op_2_0= '||' ) )
            	    // InternalEketal.g:1910:5: (lv_op_2_0= '||' )
            	    {
            	    // InternalEketal.g:1910:5: (lv_op_2_0= '||' )
            	    // InternalEketal.g:1911:6: lv_op_2_0= '||'
            	    {
            	    lv_op_2_0=(Token)match(input,26,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlOrRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "||");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:1923:4: ( (lv_right_3_0= ruleLtlAnd ) )
            	    // InternalEketal.g:1924:5: (lv_right_3_0= ruleLtlAnd )
            	    {
            	    // InternalEketal.g:1924:5: (lv_right_3_0= ruleLtlAnd )
            	    // InternalEketal.g:1925:6: lv_right_3_0= ruleLtlAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlOrAccess().getRightLtlAndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_right_3_0=ruleLtlAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlOrRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlOr"


    // $ANTLR start "entryRuleLtlAnd"
    // InternalEketal.g:1947:1: entryRuleLtlAnd returns [EObject current=null] : iv_ruleLtlAnd= ruleLtlAnd EOF ;
    public final EObject entryRuleLtlAnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAnd = null;


        try {
            // InternalEketal.g:1947:47: (iv_ruleLtlAnd= ruleLtlAnd EOF )
            // InternalEketal.g:1948:2: iv_ruleLtlAnd= ruleLtlAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAnd=ruleLtlAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAnd"


    // $ANTLR start "ruleLtlAnd"
    // InternalEketal.g:1954:1: ruleLtlAnd returns [EObject current=null] : (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* ) ;
    public final EObject ruleLtlAnd() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlUntil_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1960:2: ( (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* ) )
            // InternalEketal.g:1961:2: (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* )
            {
            // InternalEketal.g:1961:2: (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* )
            // InternalEketal.g:1962:3: this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlAndAccess().getLtlUntilParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            this_LtlUntil_0=ruleLtlUntil();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlUntil_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:1970:3: ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==27) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalEketal.g:1971:4: () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) )
            	    {
            	    // InternalEketal.g:1971:4: ()
            	    // InternalEketal.g:1972:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlAndAccess().getLtlAndLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:1978:4: ( (lv_op_2_0= '&&' ) )
            	    // InternalEketal.g:1979:5: (lv_op_2_0= '&&' )
            	    {
            	    // InternalEketal.g:1979:5: (lv_op_2_0= '&&' )
            	    // InternalEketal.g:1980:6: lv_op_2_0= '&&'
            	    {
            	    lv_op_2_0=(Token)match(input,27,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlAndAccess().getOpAmpersandAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlAndRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "&&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:1992:4: ( (lv_right_3_0= ruleLtlUntil ) )
            	    // InternalEketal.g:1993:5: (lv_right_3_0= ruleLtlUntil )
            	    {
            	    // InternalEketal.g:1993:5: (lv_right_3_0= ruleLtlUntil )
            	    // InternalEketal.g:1994:6: lv_right_3_0= ruleLtlUntil
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlAndAccess().getRightLtlUntilParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_right_3_0=ruleLtlUntil();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlAndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlUntil");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAnd"


    // $ANTLR start "entryRuleLtlUntil"
    // InternalEketal.g:2016:1: entryRuleLtlUntil returns [EObject current=null] : iv_ruleLtlUntil= ruleLtlUntil EOF ;
    public final EObject entryRuleLtlUntil() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlUntil = null;


        try {
            // InternalEketal.g:2016:49: (iv_ruleLtlUntil= ruleLtlUntil EOF )
            // InternalEketal.g:2017:2: iv_ruleLtlUntil= ruleLtlUntil EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlUntilRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlUntil=ruleLtlUntil();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlUntil; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlUntil"


    // $ANTLR start "ruleLtlUntil"
    // InternalEketal.g:2023:1: ruleLtlUntil returns [EObject current=null] : (this_LtlThen_0= ruleLtlThen ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )* ) ;
    public final EObject ruleLtlUntil() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlThen_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2029:2: ( (this_LtlThen_0= ruleLtlThen ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )* ) )
            // InternalEketal.g:2030:2: (this_LtlThen_0= ruleLtlThen ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )* )
            {
            // InternalEketal.g:2030:2: (this_LtlThen_0= ruleLtlThen ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )* )
            // InternalEketal.g:2031:3: this_LtlThen_0= ruleLtlThen ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlUntilAccess().getLtlThenParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_32);
            this_LtlThen_0=ruleLtlThen();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlThen_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2039:3: ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==39) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalEketal.g:2040:4: () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlThen ) )
            	    {
            	    // InternalEketal.g:2040:4: ()
            	    // InternalEketal.g:2041:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlUntilAccess().getLtlUntilLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2047:4: ( (lv_op_2_0= 'until' ) )
            	    // InternalEketal.g:2048:5: (lv_op_2_0= 'until' )
            	    {
            	    // InternalEketal.g:2048:5: (lv_op_2_0= 'until' )
            	    // InternalEketal.g:2049:6: lv_op_2_0= 'until'
            	    {
            	    lv_op_2_0=(Token)match(input,39,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlUntilAccess().getOpUntilKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlUntilRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "until");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2061:4: ( (lv_right_3_0= ruleLtlThen ) )
            	    // InternalEketal.g:2062:5: (lv_right_3_0= ruleLtlThen )
            	    {
            	    // InternalEketal.g:2062:5: (lv_right_3_0= ruleLtlThen )
            	    // InternalEketal.g:2063:6: lv_right_3_0= ruleLtlThen
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlUntilAccess().getRightLtlThenParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_right_3_0=ruleLtlThen();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlUntilRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlThen");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlUntil"


    // $ANTLR start "entryRuleLtlThen"
    // InternalEketal.g:2085:1: entryRuleLtlThen returns [EObject current=null] : iv_ruleLtlThen= ruleLtlThen EOF ;
    public final EObject entryRuleLtlThen() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlThen = null;


        try {
            // InternalEketal.g:2085:48: (iv_ruleLtlThen= ruleLtlThen EOF )
            // InternalEketal.g:2086:2: iv_ruleLtlThen= ruleLtlThen EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlThenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlThen=ruleLtlThen();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlThen; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlThen"


    // $ANTLR start "ruleLtlThen"
    // InternalEketal.g:2092:1: ruleLtlThen returns [EObject current=null] : (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* ) ;
    public final EObject ruleLtlThen() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlUnary_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2098:2: ( (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* ) )
            // InternalEketal.g:2099:2: (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* )
            {
            // InternalEketal.g:2099:2: (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* )
            // InternalEketal.g:2100:3: this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlThenAccess().getLtlUnaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_33);
            this_LtlUnary_0=ruleLtlUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlUnary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2108:3: ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==37) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalEketal.g:2109:4: () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlUnary ) )
            	    {
            	    // InternalEketal.g:2109:4: ()
            	    // InternalEketal.g:2110:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlThenAccess().getLtlThenLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2116:4: ( (lv_op_2_0= '->' ) )
            	    // InternalEketal.g:2117:5: (lv_op_2_0= '->' )
            	    {
            	    // InternalEketal.g:2117:5: (lv_op_2_0= '->' )
            	    // InternalEketal.g:2118:6: lv_op_2_0= '->'
            	    {
            	    lv_op_2_0=(Token)match(input,37,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlThenAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlThenRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2130:4: ( (lv_right_3_0= ruleLtlUnary ) )
            	    // InternalEketal.g:2131:5: (lv_right_3_0= ruleLtlUnary )
            	    {
            	    // InternalEketal.g:2131:5: (lv_right_3_0= ruleLtlUnary )
            	    // InternalEketal.g:2132:6: lv_right_3_0= ruleLtlUnary
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlThenAccess().getRightLtlUnaryParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_33);
            	    lv_right_3_0=ruleLtlUnary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlThenRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlUnary");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlThen"


    // $ANTLR start "entryRuleLtlUnary"
    // InternalEketal.g:2154:1: entryRuleLtlUnary returns [EObject current=null] : iv_ruleLtlUnary= ruleLtlUnary EOF ;
    public final EObject entryRuleLtlUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlUnary = null;


        try {
            // InternalEketal.g:2154:49: (iv_ruleLtlUnary= ruleLtlUnary EOF )
            // InternalEketal.g:2155:2: iv_ruleLtlUnary= ruleLtlUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlUnary=ruleLtlUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlUnary"


    // $ANTLR start "ruleLtlUnary"
    // InternalEketal.g:2161:1: ruleLtlUnary returns [EObject current=null] : (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot ) ;
    public final EObject ruleLtlUnary() throws RecognitionException {
        EObject current = null;

        EObject this_LtlAtom_0 = null;

        EObject this_LtlAlways_1 = null;

        EObject this_LtlNext_2 = null;

        EObject this_LtlEventually_3 = null;

        EObject this_LtlNot_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:2167:2: ( (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot ) )
            // InternalEketal.g:2168:2: (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot )
            {
            // InternalEketal.g:2168:2: (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot )
            int alt43=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 22:
                {
                alt43=1;
                }
                break;
            case 41:
                {
                alt43=2;
                }
                break;
            case 40:
                {
                alt43=3;
                }
                break;
            case 42:
                {
                alt43=4;
                }
                break;
            case 28:
                {
                alt43=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalEketal.g:2169:3: this_LtlAtom_0= ruleLtlAtom
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlAtomParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlAtom_0=ruleLtlAtom();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlAtom_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:2178:3: this_LtlAlways_1= ruleLtlAlways
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlAlwaysParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlAlways_1=ruleLtlAlways();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlAlways_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:2187:3: this_LtlNext_2= ruleLtlNext
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlNextParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlNext_2=ruleLtlNext();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlNext_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:2196:3: this_LtlEventually_3= ruleLtlEventually
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlEventuallyParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlEventually_3=ruleLtlEventually();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlEventually_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:2205:3: this_LtlNot_4= ruleLtlNot
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlNotParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlNot_4=ruleLtlNot();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlNot_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlUnary"


    // $ANTLR start "entryRuleLtlNext"
    // InternalEketal.g:2217:1: entryRuleLtlNext returns [EObject current=null] : iv_ruleLtlNext= ruleLtlNext EOF ;
    public final EObject entryRuleLtlNext() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlNext = null;


        try {
            // InternalEketal.g:2217:48: (iv_ruleLtlNext= ruleLtlNext EOF )
            // InternalEketal.g:2218:2: iv_ruleLtlNext= ruleLtlNext EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlNextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlNext=ruleLtlNext();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlNext; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlNext"


    // $ANTLR start "ruleLtlNext"
    // InternalEketal.g:2224:1: ruleLtlNext returns [EObject current=null] : ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlNext() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2230:2: ( ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2231:2: ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2231:2: ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2232:3: () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2232:3: ()
            // InternalEketal.g:2233:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlNextAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2239:3: ( (lv_op_1_0= 'next' ) )
            // InternalEketal.g:2240:4: (lv_op_1_0= 'next' )
            {
            // InternalEketal.g:2240:4: (lv_op_1_0= 'next' )
            // InternalEketal.g:2241:5: lv_op_1_0= 'next'
            {
            lv_op_1_0=(Token)match(input,40,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlNextAccess().getOpNextKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlNextRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "next");
              				
            }

            }


            }

            // InternalEketal.g:2253:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2254:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2254:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2255:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlNextAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlNextRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlNext"


    // $ANTLR start "entryRuleLtlAlways"
    // InternalEketal.g:2276:1: entryRuleLtlAlways returns [EObject current=null] : iv_ruleLtlAlways= ruleLtlAlways EOF ;
    public final EObject entryRuleLtlAlways() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAlways = null;


        try {
            // InternalEketal.g:2276:50: (iv_ruleLtlAlways= ruleLtlAlways EOF )
            // InternalEketal.g:2277:2: iv_ruleLtlAlways= ruleLtlAlways EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAlwaysRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAlways=ruleLtlAlways();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAlways; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAlways"


    // $ANTLR start "ruleLtlAlways"
    // InternalEketal.g:2283:1: ruleLtlAlways returns [EObject current=null] : ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlAlways() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2289:2: ( ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2290:2: ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2290:2: ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2291:3: () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2291:3: ()
            // InternalEketal.g:2292:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlAlwaysAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2298:3: ( (lv_op_1_0= 'always' ) )
            // InternalEketal.g:2299:4: (lv_op_1_0= 'always' )
            {
            // InternalEketal.g:2299:4: (lv_op_1_0= 'always' )
            // InternalEketal.g:2300:5: lv_op_1_0= 'always'
            {
            lv_op_1_0=(Token)match(input,41,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlAlwaysAccess().getOpAlwaysKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlAlwaysRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "always");
              				
            }

            }


            }

            // InternalEketal.g:2312:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2313:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2313:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2314:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlAlwaysAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlAlwaysRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAlways"


    // $ANTLR start "entryRuleLtlEventually"
    // InternalEketal.g:2335:1: entryRuleLtlEventually returns [EObject current=null] : iv_ruleLtlEventually= ruleLtlEventually EOF ;
    public final EObject entryRuleLtlEventually() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlEventually = null;


        try {
            // InternalEketal.g:2335:54: (iv_ruleLtlEventually= ruleLtlEventually EOF )
            // InternalEketal.g:2336:2: iv_ruleLtlEventually= ruleLtlEventually EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlEventuallyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlEventually=ruleLtlEventually();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlEventually; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlEventually"


    // $ANTLR start "ruleLtlEventually"
    // InternalEketal.g:2342:1: ruleLtlEventually returns [EObject current=null] : ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlEventually() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2348:2: ( ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2349:2: ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2349:2: ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2350:3: () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2350:3: ()
            // InternalEketal.g:2351:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlEventuallyAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2357:3: ( (lv_op_1_0= 'eventually' ) )
            // InternalEketal.g:2358:4: (lv_op_1_0= 'eventually' )
            {
            // InternalEketal.g:2358:4: (lv_op_1_0= 'eventually' )
            // InternalEketal.g:2359:5: lv_op_1_0= 'eventually'
            {
            lv_op_1_0=(Token)match(input,42,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlEventuallyAccess().getOpEventuallyKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlEventuallyRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "eventually");
              				
            }

            }


            }

            // InternalEketal.g:2371:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2372:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2372:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2373:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlEventuallyAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlEventuallyRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlEventually"


    // $ANTLR start "entryRuleLtlNot"
    // InternalEketal.g:2394:1: entryRuleLtlNot returns [EObject current=null] : iv_ruleLtlNot= ruleLtlNot EOF ;
    public final EObject entryRuleLtlNot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlNot = null;


        try {
            // InternalEketal.g:2394:47: (iv_ruleLtlNot= ruleLtlNot EOF )
            // InternalEketal.g:2395:2: iv_ruleLtlNot= ruleLtlNot EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlNotRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlNot=ruleLtlNot();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlNot; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlNot"


    // $ANTLR start "ruleLtlNot"
    // InternalEketal.g:2401:1: ruleLtlNot returns [EObject current=null] : ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlNot() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2407:2: ( ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2408:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2408:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2409:3: () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2409:3: ()
            // InternalEketal.g:2410:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlNotAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2416:3: ( (lv_op_1_0= '!' ) )
            // InternalEketal.g:2417:4: (lv_op_1_0= '!' )
            {
            // InternalEketal.g:2417:4: (lv_op_1_0= '!' )
            // InternalEketal.g:2418:5: lv_op_1_0= '!'
            {
            lv_op_1_0=(Token)match(input,28,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlNotAccess().getOpExclamationMarkKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlNotRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "!");
              				
            }

            }


            }

            // InternalEketal.g:2430:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2431:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2431:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2432:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlNotAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlNotRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlNot"


    // $ANTLR start "entryRuleLtlAtom"
    // InternalEketal.g:2453:1: entryRuleLtlAtom returns [EObject current=null] : iv_ruleLtlAtom= ruleLtlAtom EOF ;
    public final EObject entryRuleLtlAtom() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAtom = null;


        try {
            // InternalEketal.g:2453:48: (iv_ruleLtlAtom= ruleLtlAtom EOF )
            // InternalEketal.g:2454:2: iv_ruleLtlAtom= ruleLtlAtom EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAtomRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAtom=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAtom; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAtom"


    // $ANTLR start "ruleLtlAtom"
    // InternalEketal.g:2460:1: ruleLtlAtom returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' ) ) ;
    public final EObject ruleLtlAtom() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_LtlOr_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:2466:2: ( ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' ) ) )
            // InternalEketal.g:2467:2: ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' ) )
            {
            // InternalEketal.g:2467:2: ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_ID) ) {
                alt44=1;
            }
            else if ( (LA44_0==22) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalEketal.g:2468:3: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalEketal.g:2468:3: ( (otherlv_0= RULE_ID ) )
                    // InternalEketal.g:2469:4: (otherlv_0= RULE_ID )
                    {
                    // InternalEketal.g:2469:4: (otherlv_0= RULE_ID )
                    // InternalEketal.g:2470:5: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLtlAtomRule());
                      					}
                      				
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getLtlAtomAccess().getEventEvDeclCrossReference_0_0());
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2482:3: (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' )
                    {
                    // InternalEketal.g:2482:3: (otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')' )
                    // InternalEketal.g:2483:4: otherlv_1= '(' this_LtlOr_2= ruleLtlOr otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLtlAtomAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getLtlAtomAccess().getLtlOrParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_20);
                    this_LtlOr_2=ruleLtlOr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LtlOr_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLtlAtomAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAtom"


    // $ANTLR start "entryRuleRc"
    // InternalEketal.g:2504:1: entryRuleRc returns [EObject current=null] : iv_ruleRc= ruleRc EOF ;
    public final EObject entryRuleRc() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRc = null;


        try {
            // InternalEketal.g:2504:43: (iv_ruleRc= ruleRc EOF )
            // InternalEketal.g:2505:2: iv_ruleRc= ruleRc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRcRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRc=ruleRc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRc"


    // $ANTLR start "ruleRc"
    // InternalEketal.g:2511:1: ruleRc returns [EObject current=null] : ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) ;
    public final EObject ruleRc() throws RecognitionException {
        EObject current = null;

        Token lv_syncex_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Enumerator lv_pos_2_0 = null;

        EObject lv_body_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2517:2: ( ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) )
            // InternalEketal.g:2518:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            {
            // InternalEketal.g:2518:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            // InternalEketal.g:2519:3: ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) )
            {
            // InternalEketal.g:2519:3: ( (lv_syncex_0_0= 'syncex' ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==43) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalEketal.g:2520:4: (lv_syncex_0_0= 'syncex' )
                    {
                    // InternalEketal.g:2520:4: (lv_syncex_0_0= 'syncex' )
                    // InternalEketal.g:2521:5: lv_syncex_0_0= 'syncex'
                    {
                    lv_syncex_0_0=(Token)match(input,43,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_syncex_0_0, grammarAccess.getRcAccess().getSyncexSyncexKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRcRule());
                      					}
                      					setWithLastConsumed(current, "syncex", lv_syncex_0_0, "syncex");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,44,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRcAccess().getReactionKeyword_1());
              		
            }
            // InternalEketal.g:2537:3: ( (lv_pos_2_0= rulePos ) )
            // InternalEketal.g:2538:4: (lv_pos_2_0= rulePos )
            {
            // InternalEketal.g:2538:4: (lv_pos_2_0= rulePos )
            // InternalEketal.g:2539:5: lv_pos_2_0= rulePos
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getPosPosEnumRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_pos_2_0=rulePos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"pos",
              						lv_pos_2_0,
              						"co.edu.icesi.eketal.Eketal.Pos");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:2556:3: ( (otherlv_3= RULE_ID ) )
            // InternalEketal.g:2557:4: (otherlv_3= RULE_ID )
            {
            // InternalEketal.g:2557:4: (otherlv_3= RULE_ID )
            // InternalEketal.g:2558:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getRcAccess().getAutomatonAutomatonCrossReference_3_0());
              				
            }

            }


            }

            otherlv_4=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRcAccess().getFullStopKeyword_4());
              		
            }
            // InternalEketal.g:2573:3: ( (otherlv_5= RULE_ID ) )
            // InternalEketal.g:2574:4: (otherlv_5= RULE_ID )
            {
            // InternalEketal.g:2574:4: (otherlv_5= RULE_ID )
            // InternalEketal.g:2575:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getRcAccess().getStateStepCrossReference_5_0());
              				
            }

            }


            }

            // InternalEketal.g:2586:3: ( (lv_body_6_0= ruleBody ) )
            // InternalEketal.g:2587:4: (lv_body_6_0= ruleBody )
            {
            // InternalEketal.g:2587:4: (lv_body_6_0= ruleBody )
            // InternalEketal.g:2588:5: lv_body_6_0= ruleBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getBodyBodyParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_6_0,
              						"co.edu.icesi.eketal.Eketal.Body");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRc"


    // $ANTLR start "entryRuleBody"
    // InternalEketal.g:2609:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalEketal.g:2609:45: (iv_ruleBody= ruleBody EOF )
            // InternalEketal.g:2610:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalEketal.g:2616:1: ruleBody returns [EObject current=null] : ( (lv_body_0_0= ruleXBlockExpression ) ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        EObject lv_body_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2622:2: ( ( (lv_body_0_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:2623:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:2623:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            // InternalEketal.g:2624:3: (lv_body_0_0= ruleXBlockExpression )
            {
            // InternalEketal.g:2624:3: (lv_body_0_0= ruleXBlockExpression )
            // InternalEketal.g:2625:4: lv_body_0_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyAccess().getBodyXBlockExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyRule());
              				}
              				set(
              					current,
              					"body",
              					lv_body_0_0,
              					"jbase.Jbase.XBlockExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleXJStatementOrBlock"
    // InternalEketal.g:2645:1: entryRuleXJStatementOrBlock returns [EObject current=null] : iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF ;
    public final EObject entryRuleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJStatementOrBlock = null;


        try {
            // InternalEketal.g:2645:59: (iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF )
            // InternalEketal.g:2646:2: iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJStatementOrBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJStatementOrBlock=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJStatementOrBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJStatementOrBlock"


    // $ANTLR start "ruleXJStatementOrBlock"
    // InternalEketal.g:2652:1: ruleXJStatementOrBlock returns [EObject current=null] : ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) ;
    public final EObject ruleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject this_XBlockExpression_0 = null;

        EObject this_XJSingleStatement_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:2658:2: ( ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) )
            // InternalEketal.g:2659:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            {
            // InternalEketal.g:2659:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            int alt46=2;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // InternalEketal.g:2660:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:2660:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    // InternalEketal.g:2661:4: ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXBlockExpressionParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XBlockExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2672:3: this_XJSingleStatement_1= ruleXJSingleStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXJSingleStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSingleStatement_1=ruleXJSingleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSingleStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJStatementOrBlock"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalEketal.g:2684:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalEketal.g:2684:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalEketal.g:2685:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalEketal.g:2691:1: ruleXImportDeclaration returns [EObject current=null] : ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_wildcard_3_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_memberName_4_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2697:2: ( ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) )
            // InternalEketal.g:2698:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            {
            // InternalEketal.g:2698:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            // InternalEketal.g:2699:3: ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )*
            {
            // InternalEketal.g:2699:3: ( ( 'import' )=>otherlv_0= 'import' )
            // InternalEketal.g:2700:4: ( 'import' )=>otherlv_0= 'import'
            {
            otherlv_0=(Token)match(input,45,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              			
            }

            }

            // InternalEketal.g:2706:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )
            int alt48=3;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalEketal.g:2707:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    {
                    // InternalEketal.g:2707:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    // InternalEketal.g:2708:5: ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    {
                    // InternalEketal.g:2708:5: ( (lv_static_1_0= 'static' ) )
                    // InternalEketal.g:2709:6: (lv_static_1_0= 'static' )
                    {
                    // InternalEketal.g:2709:6: (lv_static_1_0= 'static' )
                    // InternalEketal.g:2710:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,46,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalEketal.g:2722:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalEketal.g:2723:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalEketal.g:2723:6: ( ruleQualifiedNameInStaticImport )
                    // InternalEketal.g:2724:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:2738:5: ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==RULE_ANY) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==RULE_ID) ) {
                        alt47=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalEketal.g:2739:6: ( (lv_wildcard_3_0= '*' ) )
                            {
                            // InternalEketal.g:2739:6: ( (lv_wildcard_3_0= '*' ) )
                            // InternalEketal.g:2740:7: (lv_wildcard_3_0= '*' )
                            {
                            // InternalEketal.g:2740:7: (lv_wildcard_3_0= '*' )
                            // InternalEketal.g:2741:8: lv_wildcard_3_0= '*'
                            {
                            lv_wildcard_3_0=(Token)match(input,RULE_ANY,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_3_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:2754:6: ( (lv_memberName_4_0= ruleValidID ) )
                            {
                            // InternalEketal.g:2754:6: ( (lv_memberName_4_0= ruleValidID ) )
                            // InternalEketal.g:2755:7: (lv_memberName_4_0= ruleValidID )
                            {
                            // InternalEketal.g:2755:7: (lv_memberName_4_0= ruleValidID )
                            // InternalEketal.g:2756:8: lv_memberName_4_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_2_1_0());
                              							
                            }
                            pushFollow(FOLLOW_38);
                            lv_memberName_4_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_4_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2776:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalEketal.g:2776:4: ( ( ruleQualifiedName ) )
                    // InternalEketal.g:2777:5: ( ruleQualifiedName )
                    {
                    // InternalEketal.g:2777:5: ( ruleQualifiedName )
                    // InternalEketal.g:2778:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:2793:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalEketal.g:2793:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    // InternalEketal.g:2794:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalEketal.g:2794:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    // InternalEketal.g:2795:6: lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_importedNamespace_6_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:2813:3: ( ( ';' )=>otherlv_7= ';' )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==16) && (synpred4_InternalEketal())) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalEketal.g:2814:4: ( ';' )=>otherlv_7= ';'
            	    {
            	    otherlv_7=(Token)match(input,16,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalEketal.g:2824:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalEketal.g:2824:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalEketal.g:2825:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalEketal.g:2831:1: ruleJvmTypeReference returns [EObject current=null] : (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2837:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) )
            // InternalEketal.g:2838:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            {
            // InternalEketal.g:2838:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            // InternalEketal.g:2839:3: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_39);
            this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_JvmParameterizedTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2847:3: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==52) ) {
                    int LA50_2 = input.LA(2);

                    if ( (LA50_2==53) ) {
                        int LA50_3 = input.LA(3);

                        if ( (synpred5_InternalEketal()) ) {
                            alt50=1;
                        }


                    }


                }


                switch (alt50) {
            	case 1 :
            	    // InternalEketal.g:2848:4: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
            	    {
            	    // InternalEketal.g:2854:4: ( () ruleArrayBrackets )
            	    // InternalEketal.g:2855:5: () ruleArrayBrackets
            	    {
            	    // InternalEketal.g:2855:5: ()
            	    // InternalEketal.g:2856:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_1_0_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalEketal.g:2875:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalEketal.g:2875:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalEketal.g:2876:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalEketal.g:2882:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token lv_varArgs_3_0=null;
        EObject lv_parameterType_2_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2888:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) )
            // InternalEketal.g:2889:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            {
            // InternalEketal.g:2889:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            // InternalEketal.g:2890:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) )
            {
            // InternalEketal.g:2890:3: ()
            // InternalEketal.g:2891:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFullJvmFormalParameterAccess().getXJJvmFormalParameterAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2897:3: ( (lv_final_1_0= 'final' ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==47) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalEketal.g:2898:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:2898:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:2899:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,47,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getFullJvmFormalParameterAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:2911:3: ( (lv_parameterType_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:2912:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:2912:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            // InternalEketal.g:2913:5: lv_parameterType_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_parameterType_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:2930:3: ( (lv_varArgs_3_0= '...' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==48) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEketal.g:2931:4: (lv_varArgs_3_0= '...' )
                    {
                    // InternalEketal.g:2931:4: (lv_varArgs_3_0= '...' )
                    // InternalEketal.g:2932:5: lv_varArgs_3_0= '...'
                    {
                    lv_varArgs_3_0=(Token)match(input,48,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_varArgs_3_0, grammarAccess.getFullJvmFormalParameterAccess().getVarArgsFullStopFullStopFullStopKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "varArgs", true, "...");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:2944:3: ( (lv_name_4_0= ruleValidID ) )
            // InternalEketal.g:2945:4: (lv_name_4_0= ruleValidID )
            {
            // InternalEketal.g:2945:4: (lv_name_4_0= ruleValidID )
            // InternalEketal.g:2946:5: lv_name_4_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_4_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXJSingleStatement"
    // InternalEketal.g:2967:1: entryRuleXJSingleStatement returns [EObject current=null] : iv_ruleXJSingleStatement= ruleXJSingleStatement EOF ;
    public final EObject entryRuleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSingleStatement = null;


        try {
            // InternalEketal.g:2967:58: (iv_ruleXJSingleStatement= ruleXJSingleStatement EOF )
            // InternalEketal.g:2968:2: iv_ruleXJSingleStatement= ruleXJSingleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSingleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSingleStatement=ruleXJSingleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSingleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSingleStatement"


    // $ANTLR start "ruleXJSingleStatement"
    // InternalEketal.g:2974:1: ruleXJSingleStatement returns [EObject current=null] : (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) ;
    public final EObject ruleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_XJSemicolonStatement_0 = null;

        EObject this_XSwitchExpression_1 = null;

        EObject this_XIfExpression_2 = null;

        EObject this_XForLoopExpression_3 = null;

        EObject this_XBasicForLoopExpression_4 = null;

        EObject this_XWhileExpression_5 = null;

        EObject this_XJTryWithResourcesStatement_6 = null;

        EObject this_XTryCatchFinallyExpression_7 = null;

        EObject this_XSynchronizedExpression_8 = null;

        EObject this_XJEmptyStatement_9 = null;



        	enterRule();

        try {
            // InternalEketal.g:2980:2: ( (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) )
            // InternalEketal.g:2981:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            {
            // InternalEketal.g:2981:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            int alt53=10;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalEketal.g:2982:3: this_XJSemicolonStatement_0= ruleXJSemicolonStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJSemicolonStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSemicolonStatement_0=ruleXJSemicolonStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSemicolonStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:2991:3: this_XSwitchExpression_1= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSwitchExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_1=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3000:3: this_XIfExpression_2= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXIfExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_2=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3009:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    {
                    // InternalEketal.g:3009:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    // InternalEketal.g:3010:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXForLoopExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_3=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEketal.g:3033:3: this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXBasicForLoopExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_4=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:3042:3: this_XWhileExpression_5= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXWhileExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_5=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:3051:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    {
                    // InternalEketal.g:3051:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    // InternalEketal.g:3052:4: ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJTryWithResourcesStatementParserRuleCall_6());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJTryWithResourcesStatement_6=ruleXJTryWithResourcesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJTryWithResourcesStatement_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEketal.g:3073:3: this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXTryCatchFinallyExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_7=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:3082:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    {
                    // InternalEketal.g:3082:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    // InternalEketal.g:3083:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSynchronizedExpressionParserRuleCall_8());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_8=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:3100:3: this_XJEmptyStatement_9= ruleXJEmptyStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJEmptyStatementParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJEmptyStatement_9=ruleXJEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJEmptyStatement_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSingleStatement"


    // $ANTLR start "entryRuleXJSemicolonStatement"
    // InternalEketal.g:3112:1: entryRuleXJSemicolonStatement returns [EObject current=null] : iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF ;
    public final EObject entryRuleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSemicolonStatement = null;


        try {
            // InternalEketal.g:3112:61: (iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF )
            // InternalEketal.g:3113:2: iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSemicolonStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSemicolonStatement=ruleXJSemicolonStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSemicolonStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSemicolonStatement"


    // $ANTLR start "ruleXJSemicolonStatement"
    // InternalEketal.g:3119:1: ruleXJSemicolonStatement returns [EObject current=null] : ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) ;
    public final EObject ruleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_2_0=null;
        EObject lv_expression_1_1 = null;

        EObject lv_expression_1_2 = null;

        EObject lv_expression_1_3 = null;

        EObject lv_expression_1_4 = null;

        EObject lv_expression_1_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:3125:2: ( ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) )
            // InternalEketal.g:3126:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            {
            // InternalEketal.g:3126:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            // InternalEketal.g:3127:3: () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            {
            // InternalEketal.g:3127:3: ()
            // InternalEketal.g:3128:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSemicolonStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3134:3: ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) )
            // InternalEketal.g:3135:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            {
            // InternalEketal.g:3135:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            // InternalEketal.g:3136:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            {
            // InternalEketal.g:3136:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            int alt54=5;
            switch ( input.LA(1) ) {
            case 49:
            case 50:
                {
                alt54=1;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_CHARACTER:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 18:
            case 22:
            case 28:
            case 45:
            case 46:
            case 47:
            case 66:
            case 87:
            case 88:
            case 89:
            case 92:
            case 93:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
                {
                alt54=2;
                }
                break;
            case 71:
                {
                alt54=3;
                }
                break;
            case 102:
                {
                alt54=4;
                }
                break;
            case 101:
                {
                alt54=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalEketal.g:3137:6: lv_expression_1_1= ruleXJBranchingStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXJBranchingStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_expression_1_1=ruleXJBranchingStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_1,
                      							"jbase.Jbase.XJBranchingStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:3153:6: lv_expression_1_2= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXExpressionOrVarDeclarationParserRuleCall_1_0_1());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_expression_1_2=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_2,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3169:6: lv_expression_1_3= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXDoWhileExpressionParserRuleCall_1_0_2());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_expression_1_3=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_3,
                      							"jbase.Jbase.XDoWhileExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3185:6: lv_expression_1_4= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXReturnExpressionParserRuleCall_1_0_3());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_expression_1_4=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_4,
                      							"org.eclipse.xtext.xbase.Xbase.XReturnExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:3201:6: lv_expression_1_5= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXThrowExpressionParserRuleCall_1_0_4());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_expression_1_5=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_5,
                      							"org.eclipse.xtext.xbase.Xbase.XThrowExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalEketal.g:3219:3: ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==16) ) {
                int LA55_1 = input.LA(2);

                if ( (synpred9_InternalEketal()) ) {
                    alt55=1;
                }
            }
            switch (alt55) {
                case 1 :
                    // InternalEketal.g:3220:4: ( ';' )=> (lv_semicolon_2_0= ';' )
                    {
                    // InternalEketal.g:3221:4: (lv_semicolon_2_0= ';' )
                    // InternalEketal.g:3222:5: lv_semicolon_2_0= ';'
                    {
                    lv_semicolon_2_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_2_0, grammarAccess.getXJSemicolonStatementAccess().getSemicolonSemicolonKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJSemicolonStatementRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_2_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSemicolonStatement"


    // $ANTLR start "entryRuleXJEmptyStatement"
    // InternalEketal.g:3238:1: entryRuleXJEmptyStatement returns [EObject current=null] : iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF ;
    public final EObject entryRuleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJEmptyStatement = null;


        try {
            // InternalEketal.g:3238:57: (iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF )
            // InternalEketal.g:3239:2: iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJEmptyStatement=ruleXJEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJEmptyStatement"


    // $ANTLR start "ruleXJEmptyStatement"
    // InternalEketal.g:3245:1: ruleXJEmptyStatement returns [EObject current=null] : ( () ( (lv_semicolon_1_0= ';' ) ) ) ;
    public final EObject ruleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:3251:2: ( ( () ( (lv_semicolon_1_0= ';' ) ) ) )
            // InternalEketal.g:3252:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            {
            // InternalEketal.g:3252:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            // InternalEketal.g:3253:3: () ( (lv_semicolon_1_0= ';' ) )
            {
            // InternalEketal.g:3253:3: ()
            // InternalEketal.g:3254:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJEmptyStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3260:3: ( (lv_semicolon_1_0= ';' ) )
            // InternalEketal.g:3261:4: (lv_semicolon_1_0= ';' )
            {
            // InternalEketal.g:3261:4: (lv_semicolon_1_0= ';' )
            // InternalEketal.g:3262:5: lv_semicolon_1_0= ';'
            {
            lv_semicolon_1_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_semicolon_1_0, grammarAccess.getXJEmptyStatementAccess().getSemicolonSemicolonKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXJEmptyStatementRule());
              					}
              					setWithLastConsumed(current, "semicolon", lv_semicolon_1_0, ";");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJEmptyStatement"


    // $ANTLR start "entryRuleXJBranchingStatement"
    // InternalEketal.g:3278:1: entryRuleXJBranchingStatement returns [EObject current=null] : iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF ;
    public final EObject entryRuleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJBranchingStatement = null;


        try {
            // InternalEketal.g:3278:61: (iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF )
            // InternalEketal.g:3279:2: iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJBranchingStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJBranchingStatement=ruleXJBranchingStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJBranchingStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJBranchingStatement"


    // $ANTLR start "ruleXJBranchingStatement"
    // InternalEketal.g:3285:1: ruleXJBranchingStatement returns [EObject current=null] : ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) ;
    public final EObject ruleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalEketal.g:3291:2: ( ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) )
            // InternalEketal.g:3292:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            {
            // InternalEketal.g:3292:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==49) ) {
                alt56=1;
            }
            else if ( (LA56_0==50) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalEketal.g:3293:3: ( () otherlv_1= 'continue' )
                    {
                    // InternalEketal.g:3293:3: ( () otherlv_1= 'continue' )
                    // InternalEketal.g:3294:4: () otherlv_1= 'continue'
                    {
                    // InternalEketal.g:3294:4: ()
                    // InternalEketal.g:3295:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJContinueStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXJBranchingStatementAccess().getContinueKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:3307:3: ( () otherlv_3= 'break' )
                    {
                    // InternalEketal.g:3307:3: ( () otherlv_3= 'break' )
                    // InternalEketal.g:3308:4: () otherlv_3= 'break'
                    {
                    // InternalEketal.g:3308:4: ()
                    // InternalEketal.g:3309:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJBreakStatementAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getXJBranchingStatementAccess().getBreakKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJBranchingStatement"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalEketal.g:3324:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalEketal.g:3324:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalEketal.g:3325:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalEketal.g:3331:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3337:2: ( ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) )
            // InternalEketal.g:3338:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            {
            // InternalEketal.g:3338:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            // InternalEketal.g:3339:3: () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}'
            {
            // InternalEketal.g:3339:3: ()
            // InternalEketal.g:3340:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:3350:3: ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_ID||(LA57_0>=RULE_INT && LA57_0<=RULE_DECIMAL)||LA57_0==16||LA57_0==18||LA57_0==22||LA57_0==28||LA57_0==31||(LA57_0>=45 && LA57_0<=47)||(LA57_0>=49 && LA57_0<=50)||LA57_0==66||LA57_0==68||(LA57_0>=70 && LA57_0<=72)||LA57_0==75||LA57_0==78||(LA57_0>=87 && LA57_0<=89)||(LA57_0>=92 && LA57_0<=93)||(LA57_0>=95 && LA57_0<=102)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalEketal.g:3351:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:3351:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:3352:5: lv_expressions_2_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXJStatementOrBlockParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_41);
            	    lv_expressions_2_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_2_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalEketal.g:3377:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalEketal.g:3377:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalEketal.g:3378:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalEketal.g:3384:1: ruleXVariableDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;

        EObject lv_additionalVariables_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3390:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) )
            // InternalEketal.g:3391:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            {
            // InternalEketal.g:3391:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            // InternalEketal.g:3392:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            {
            // InternalEketal.g:3392:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) )
            // InternalEketal.g:3393:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            {
            // InternalEketal.g:3413:4: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            // InternalEketal.g:3414:5: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) )
            {
            // InternalEketal.g:3414:5: ()
            // InternalEketal.g:3415:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXVariableDeclarationAccess().getXJVariableDeclarationAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalEketal.g:3421:5: ( (lv_final_1_0= 'final' ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==47) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEketal.g:3422:6: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:3422:6: (lv_final_1_0= 'final' )
                    // InternalEketal.g:3423:7: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,47,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_final_1_0, grammarAccess.getXVariableDeclarationAccess().getFinalFinalKeyword_0_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "final", true, "final");
                      						
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:3435:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:3436:6: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:3436:6: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:3437:7: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"type",
              								lv_type_2_0,
              								"jbase.Jbase.JvmTypeReference");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:3454:5: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:3455:6: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:3455:6: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:3456:7: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_42);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"name",
              								lv_name_3_0,
              								"org.eclipse.xtext.xbase.Xtype.ValidID");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:3475:3: (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==51) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalEketal.g:3476:4: otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,51,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalEketal.g:3480:4: ( (lv_right_5_0= ruleXExpression ) )
                    // InternalEketal.g:3481:5: (lv_right_5_0= ruleXExpression )
                    {
                    // InternalEketal.g:3481:5: (lv_right_5_0= ruleXExpression )
                    // InternalEketal.g:3482:6: lv_right_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_right_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_5_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:3500:3: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==23) ) {
                    int LA60_2 = input.LA(2);

                    if ( (LA60_2==RULE_ID) ) {
                        int LA60_3 = input.LA(3);

                        if ( (synpred11_InternalEketal()) ) {
                            alt60=1;
                        }


                    }


                }


                switch (alt60) {
            	case 1 :
            	    // InternalEketal.g:3501:4: ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    {
            	    // InternalEketal.g:3501:4: ( ( ',' )=>otherlv_6= ',' )
            	    // InternalEketal.g:3502:5: ( ',' )=>otherlv_6= ','
            	    {
            	    otherlv_6=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getCommaKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalEketal.g:3508:4: ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    // InternalEketal.g:3509:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    {
            	    // InternalEketal.g:3509:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    // InternalEketal.g:3510:6: lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getAdditionalVariablesXJAdditionalXVariableDeclarationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_additionalVariables_7_0=ruleXJAdditionalXVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"additionalVariables",
            	      							lv_additionalVariables_7_0,
            	      							"jbase.Jbase.XJAdditionalXVariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:3532:1: entryRuleXJAdditionalXVariableDeclaration returns [EObject current=null] : iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF ;
    public final EObject entryRuleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJAdditionalXVariableDeclaration = null;


        try {
            // InternalEketal.g:3532:73: (iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF )
            // InternalEketal.g:3533:2: iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJAdditionalXVariableDeclaration=ruleXJAdditionalXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJAdditionalXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJAdditionalXVariableDeclaration"


    // $ANTLR start "ruleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:3539:1: ruleXJAdditionalXVariableDeclaration returns [EObject current=null] : ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3545:2: ( ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) )
            // InternalEketal.g:3546:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            {
            // InternalEketal.g:3546:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            // InternalEketal.g:3547:3: () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            {
            // InternalEketal.g:3547:3: ()
            // InternalEketal.g:3548:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJAdditionalXVariableDeclarationAccess().getXJAdditionalXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3554:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:3555:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:3555:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:3556:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:3573:3: (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==51) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalEketal.g:3574:4: otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,51,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXJAdditionalXVariableDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:3578:4: ( (lv_right_3_0= ruleXExpression ) )
                    // InternalEketal.g:3579:5: (lv_right_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:3579:5: (lv_right_3_0= ruleXExpression )
                    // InternalEketal.g:3580:6: lv_right_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getRightXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJAdditionalXVariableDeclaration"


    // $ANTLR start "entryRuleXAssignment"
    // InternalEketal.g:3602:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalEketal.g:3602:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalEketal.g:3603:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalEketal.g:3609:1: ruleXAssignment returns [EObject current=null] : ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_value_13_0 = null;

        EObject this_XOrExpression_14 = null;

        EObject lv_then_17_0 = null;

        EObject lv_else_19_0 = null;

        EObject lv_rightOperand_22_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3615:2: ( ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) )
            // InternalEketal.g:3616:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            {
            // InternalEketal.g:3616:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            int alt64=3;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalEketal.g:3617:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:3617:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    // InternalEketal.g:3618:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:3618:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) )
                    // InternalEketal.g:3619:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    {
                    // InternalEketal.g:3646:5: ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    // InternalEketal.g:3647:6: () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign
                    {
                    // InternalEketal.g:3647:6: ()
                    // InternalEketal.g:3648:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXJAssignmentAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:3654:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:3655:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:3655:7: ( ruleFeatureCallID )
                    // InternalEketal.g:3656:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_46);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_2());
                      					
                    }
                    // InternalEketal.g:3674:6: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:3675:7: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:3675:7: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:3676:8: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_3_0());
                      							
                    }
                    pushFollow(FOLLOW_47);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      								}
                      								add(
                      									current,
                      									"indexes",
                      									lv_indexes_3_0,
                      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,53,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_4());
                      					
                    }
                    // InternalEketal.g:3697:6: (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop62:
                    do {
                        int alt62=2;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==52) ) {
                            alt62=1;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalEketal.g:3698:7: otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_5_0());
                    	      						
                    	    }
                    	    // InternalEketal.g:3702:7: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:3703:8: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:3703:8: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:3704:9: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_5_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"indexes",
                    	      										lv_indexes_6_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,53,FOLLOW_48); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_5_2());
                    	      						
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_0_0_6());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3735:4: ( (lv_value_9_0= ruleXAssignment ) )
                    // InternalEketal.g:3736:5: (lv_value_9_0= ruleXAssignment )
                    {
                    // InternalEketal.g:3736:5: (lv_value_9_0= ruleXAssignment )
                    // InternalEketal.g:3737:6: lv_value_9_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_9_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_9_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:3756:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:3756:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    // InternalEketal.g:3757:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:3757:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
                    // InternalEketal.g:3758:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    {
                    // InternalEketal.g:3769:5: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    // InternalEketal.g:3770:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
                    {
                    // InternalEketal.g:3770:6: ()
                    // InternalEketal.g:3771:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXAssignmentAction_1_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:3777:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:3778:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:3778:7: ( ruleFeatureCallID )
                    // InternalEketal.g:3779:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_48);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_1_0_0_2());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3802:4: ( (lv_value_13_0= ruleXAssignment ) )
                    // InternalEketal.g:3803:5: (lv_value_13_0= ruleXAssignment )
                    {
                    // InternalEketal.g:3803:5: (lv_value_13_0= ruleXAssignment )
                    // InternalEketal.g:3804:6: lv_value_13_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_13_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_13_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:3823:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    {
                    // InternalEketal.g:3823:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    // InternalEketal.g:3824:4: this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_49);
                    this_XOrExpression_14=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:3832:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    int alt63=3;
                    alt63 = dfa63.predict(input);
                    switch (alt63) {
                        case 1 :
                            // InternalEketal.g:3833:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            {
                            // InternalEketal.g:3833:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            // InternalEketal.g:3834:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) )
                            {
                            // InternalEketal.g:3834:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) )
                            // InternalEketal.g:3835:7: ( ( () '?' ) )=> ( () otherlv_16= '?' )
                            {
                            // InternalEketal.g:3841:7: ( () otherlv_16= '?' )
                            // InternalEketal.g:3842:8: () otherlv_16= '?'
                            {
                            // InternalEketal.g:3842:8: ()
                            // InternalEketal.g:3843:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXJConditionalExpressionIfAction_2_1_0_0_0_0(),
                              										current);
                              								
                            }

                            }

                            otherlv_16=(Token)match(input,54,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_16, grammarAccess.getXAssignmentAccess().getQuestionMarkKeyword_2_1_0_0_0_1());
                              							
                            }

                            }


                            }

                            // InternalEketal.g:3855:6: ( (lv_then_17_0= ruleXExpression ) )
                            // InternalEketal.g:3856:7: (lv_then_17_0= ruleXExpression )
                            {
                            // InternalEketal.g:3856:7: (lv_then_17_0= ruleXExpression )
                            // InternalEketal.g:3857:8: lv_then_17_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getThenXExpressionParserRuleCall_2_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_9);
                            lv_then_17_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"then",
                              									lv_then_17_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_18=(Token)match(input,20,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getXAssignmentAccess().getColonKeyword_2_1_0_2());
                              					
                            }
                            // InternalEketal.g:3878:6: ( (lv_else_19_0= ruleXExpression ) )
                            // InternalEketal.g:3879:7: (lv_else_19_0= ruleXExpression )
                            {
                            // InternalEketal.g:3879:7: (lv_else_19_0= ruleXExpression )
                            // InternalEketal.g:3880:8: lv_else_19_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getElseXExpressionParserRuleCall_2_1_0_3_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_19_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"else",
                              									lv_else_19_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:3899:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            {
                            // InternalEketal.g:3899:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            // InternalEketal.g:3900:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            {
                            // InternalEketal.g:3900:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalEketal.g:3901:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalEketal.g:3911:7: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalEketal.g:3912:8: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalEketal.g:3912:8: ()
                            // InternalEketal.g:3913:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_2_1_1_0_0_0(),
                              										current);
                              								
                            }

                            }

                            // InternalEketal.g:3919:8: ( ( ruleOpMultiAssign ) )
                            // InternalEketal.g:3920:9: ( ruleOpMultiAssign )
                            {
                            // InternalEketal.g:3920:9: ( ruleOpMultiAssign )
                            // InternalEketal.g:3921:10: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              										if (current==null) {
                              											current = createModelElement(grammarAccess.getXAssignmentRule());
                              										}
                              									
                            }
                            if ( state.backtracking==0 ) {

                              										newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_2_1_1_0_0_1_0());
                              									
                            }
                            pushFollow(FOLLOW_43);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										afterParserOrEnumRuleCall();
                              									
                            }

                            }


                            }


                            }


                            }

                            // InternalEketal.g:3937:6: ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            // InternalEketal.g:3938:7: (lv_rightOperand_22_0= ruleXAssignment )
                            {
                            // InternalEketal.g:3938:7: (lv_rightOperand_22_0= ruleXAssignment )
                            // InternalEketal.g:3939:8: lv_rightOperand_22_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_22_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"rightOperand",
                              									lv_rightOperand_22_0,
                              									"jbase.Jbase.XAssignment");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalEketal.g:3963:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalEketal.g:3963:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalEketal.g:3964:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalEketal.g:3970:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:3976:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalEketal.g:3977:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalEketal.g:3977:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt66=10;
            switch ( input.LA(1) ) {
            case 55:
                {
                alt66=1;
                }
                break;
            case 56:
                {
                alt66=2;
                }
                break;
            case 57:
                {
                alt66=3;
                }
                break;
            case 58:
                {
                alt66=4;
                }
                break;
            case 59:
                {
                alt66=5;
                }
                break;
            case 60:
                {
                alt66=6;
                }
                break;
            case 61:
                {
                alt66=7;
                }
                break;
            case 62:
                {
                alt66=8;
                }
                break;
            case 63:
                {
                alt66=9;
                }
                break;
            case 64:
                {
                alt66=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalEketal.g:3978:3: kw= '+='
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:3984:3: kw= '-='
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3990:3: kw= '*='
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3996:3: kw= '/='
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:4002:3: kw= '%='
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:4008:3: kw= '&='
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:4014:3: kw= '|='
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalEketal.g:4020:3: kw= '^='
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:4026:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:4026:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalEketal.g:4027:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,63,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_0());
                      			
                    }
                    kw=(Token)match(input,63,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_1());
                      			
                    }
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_8_2());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:4044:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalEketal.g:4044:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalEketal.g:4045:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,64,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_0());
                      			
                    }
                    // InternalEketal.g:4050:4: (kw= '>' )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==64) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalEketal.g:4051:5: kw= '>'
                            {
                            kw=(Token)match(input,64,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:4067:1: entryRuleXJFeatureCallWithArrayAccess returns [EObject current=null] : iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF ;
    public final EObject entryRuleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJFeatureCallWithArrayAccess = null;


        try {
            // InternalEketal.g:4067:69: (iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF )
            // InternalEketal.g:4068:2: iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJFeatureCallWithArrayAccess=ruleXJFeatureCallWithArrayAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJFeatureCallWithArrayAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJFeatureCallWithArrayAccess"


    // $ANTLR start "ruleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:4074:1: ruleXJFeatureCallWithArrayAccess returns [EObject current=null] : (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) ;
    public final EObject ruleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_XFeatureCall_0 = null;

        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4080:2: ( (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) )
            // InternalEketal.g:4081:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            {
            // InternalEketal.g:4081:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            // InternalEketal.g:4082:3: this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_39);
            this_XFeatureCall_0=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:4090:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalEketal.g:4091:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    {
                    // InternalEketal.g:4115:4: ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    // InternalEketal.g:4116:5: () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    {
                    // InternalEketal.g:4116:5: ()
                    // InternalEketal.g:4117:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXJArrayAccessExpressionArrayAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_2=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_1());
                      				
                    }
                    // InternalEketal.g:4127:5: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:4128:6: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:4128:6: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:4129:7: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                      							}
                      							add(
                      								current,
                      								"indexes",
                      								lv_indexes_3_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,53,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_3());
                      				
                    }
                    // InternalEketal.g:4150:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop67:
                    do {
                        int alt67=2;
                        alt67 = dfa67.predict(input);
                        switch (alt67) {
                    	case 1 :
                    	    // InternalEketal.g:4151:6: ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    // InternalEketal.g:4151:6: ( ( '[' )=>otherlv_5= '[' )
                    	    // InternalEketal.g:4152:7: ( '[' )=>otherlv_5= '['
                    	    {
                    	    otherlv_5=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_4_0());
                    	      						
                    	    }

                    	    }

                    	    // InternalEketal.g:4158:6: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:4159:7: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:4159:7: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:4160:8: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"indexes",
                    	      									lv_indexes_6_0,
                    	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,53,FOLLOW_39); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_4_2());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJFeatureCallWithArrayAccess"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalEketal.g:4188:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalEketal.g:4188:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalEketal.g:4189:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalEketal.g:4195:1: ruleXFeatureCall returns [EObject current=null] : ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token lv_explicitOperationCall_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_featureCallArguments_3_0 = null;

        EObject lv_featureCallArguments_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4201:2: ( ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) )
            // InternalEketal.g:4202:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            {
            // InternalEketal.g:4202:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            // InternalEketal.g:4203:3: () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            {
            // InternalEketal.g:4203:3: ()
            // InternalEketal.g:4204:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:4210:3: ( ( ruleIdOrSuper ) )
            // InternalEketal.g:4211:4: ( ruleIdOrSuper )
            {
            // InternalEketal.g:4211:4: ( ruleIdOrSuper )
            // InternalEketal.g:4212:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_54);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:4226:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalEketal.g:4227:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')'
                    {
                    // InternalEketal.g:4227:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) )
                    // InternalEketal.g:4228:5: ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' )
                    {
                    // InternalEketal.g:4232:5: (lv_explicitOperationCall_2_0= '(' )
                    // InternalEketal.g:4233:6: lv_explicitOperationCall_2_0= '('
                    {
                    lv_explicitOperationCall_2_0=(Token)match(input,22,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_2_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4245:4: ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==RULE_ID||(LA70_0>=RULE_INT && LA70_0<=RULE_DECIMAL)||LA70_0==18||LA70_0==22||LA70_0==28||(LA70_0>=45 && LA70_0<=46)||LA70_0==66||(LA70_0>=87 && LA70_0<=89)||(LA70_0>=92 && LA70_0<=93)||(LA70_0>=95 && LA70_0<=100)) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalEketal.g:4246:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:4246:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) )
                            // InternalEketal.g:4247:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            {
                            // InternalEketal.g:4247:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            // InternalEketal.g:4248:7: lv_featureCallArguments_3_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_12);
                            lv_featureCallArguments_3_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_3_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4265:5: (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            loop69:
                            do {
                                int alt69=2;
                                int LA69_0 = input.LA(1);

                                if ( (LA69_0==23) ) {
                                    alt69=1;
                                }


                                switch (alt69) {
                            	case 1 :
                            	    // InternalEketal.g:4266:6: otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4270:6: ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    // InternalEketal.g:4271:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4271:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    // InternalEketal.g:4272:8: lv_featureCallArguments_5_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_featureCallArguments_5_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"featureCallArguments",
                            	      									lv_featureCallArguments_5_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop69;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalEketal.g:4300:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalEketal.g:4300:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalEketal.g:4301:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalEketal.g:4307:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_explicitTypeArguments_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4313:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) )
            // InternalEketal.g:4314:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            {
            // InternalEketal.g:4314:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            // InternalEketal.g:4315:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            {
            // InternalEketal.g:4315:3: ()
            // InternalEketal.g:4316:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXJConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,66,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalEketal.g:4326:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:4327:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:4327:4: ( ruleQualifiedName )
            // InternalEketal.g:4328:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_56);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:4342:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalEketal.g:4343:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>'
                    {
                    // InternalEketal.g:4343:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) )
                    // InternalEketal.g:4344:5: ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' )
                    {
                    // InternalEketal.g:4348:5: (lv_explicitTypeArguments_3_0= '<' )
                    // InternalEketal.g:4349:6: lv_explicitTypeArguments_3_0= '<'
                    {
                    lv_explicitTypeArguments_3_0=(Token)match(input,63,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitTypeArguments_3_0, grammarAccess.getXConstructorCallAccess().getExplicitTypeArgumentsLessThanSignKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitTypeArguments", true, "<");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4361:4: ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==RULE_ID||LA73_0==54) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalEketal.g:4362:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            {
                            // InternalEketal.g:4362:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                            // InternalEketal.g:4363:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            {
                            // InternalEketal.g:4363:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            // InternalEketal.g:4364:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_58);
                            lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"typeArguments",
                              								lv_typeArguments_4_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4381:5: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==23) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    // InternalEketal.g:4382:6: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    {
                            	    otherlv_5=(Token)match(input,23,FOLLOW_59); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4386:6: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    // InternalEketal.g:4387:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    {
                            	    // InternalEketal.g:4387:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    // InternalEketal.g:4388:8: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_58);
                            	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"typeArguments",
                            	      									lv_typeArguments_6_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,64,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalEketal.g:4412:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalEketal.g:4413:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')'
                    {
                    // InternalEketal.g:4413:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalEketal.g:4414:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalEketal.g:4418:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalEketal.g:4419:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,22,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4431:4: ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==RULE_ID||(LA76_0>=RULE_INT && LA76_0<=RULE_DECIMAL)||LA76_0==18||LA76_0==22||LA76_0==28||(LA76_0>=45 && LA76_0<=46)||LA76_0==66||(LA76_0>=87 && LA76_0<=89)||(LA76_0>=92 && LA76_0<=93)||(LA76_0>=95 && LA76_0<=100)) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalEketal.g:4432:5: ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:4432:5: ( (lv_arguments_9_0= ruleXExpression ) )
                            // InternalEketal.g:4433:6: (lv_arguments_9_0= ruleXExpression )
                            {
                            // InternalEketal.g:4433:6: (lv_arguments_9_0= ruleXExpression )
                            // InternalEketal.g:4434:7: lv_arguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_12);
                            lv_arguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4451:5: (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( (LA75_0==23) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    // InternalEketal.g:4452:6: otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_10, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4456:6: ( (lv_arguments_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:4457:7: (lv_arguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4457:7: (lv_arguments_11_0= ruleXExpression )
                            	    // InternalEketal.g:4458:8: lv_arguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_arguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"arguments",
                            	      									lv_arguments_11_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXJArrayConstructorCall"
    // InternalEketal.g:4486:1: entryRuleXJArrayConstructorCall returns [EObject current=null] : iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF ;
    public final EObject entryRuleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayConstructorCall = null;


        try {
            // InternalEketal.g:4486:63: (iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF )
            // InternalEketal.g:4487:2: iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayConstructorCall=ruleXJArrayConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayConstructorCall"


    // $ANTLR start "ruleXJArrayConstructorCall"
    // InternalEketal.g:4493:1: ruleXJArrayConstructorCall returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) ;
    public final EObject ruleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_dimensions_3_0 = null;

        EObject lv_indexes_4_0 = null;

        EObject lv_dimensions_6_0 = null;

        EObject lv_indexes_7_0 = null;

        EObject lv_arrayLiteral_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4499:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) )
            // InternalEketal.g:4500:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            {
            // InternalEketal.g:4500:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            // InternalEketal.g:4501:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            {
            // InternalEketal.g:4501:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) )
            // InternalEketal.g:4502:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            {
            // InternalEketal.g:4518:4: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            // InternalEketal.g:4519:5: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            {
            // InternalEketal.g:4519:5: ()
            // InternalEketal.g:4520:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJArrayConstructorCallAccess().getXJArrayConstructorCallAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,66,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJArrayConstructorCallAccess().getNewKeyword_0_0_1());
              				
            }
            // InternalEketal.g:4530:5: ( ( ruleQualifiedName ) )
            // InternalEketal.g:4531:6: ( ruleQualifiedName )
            {
            // InternalEketal.g:4531:6: ( ruleQualifiedName )
            // InternalEketal.g:4532:7: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJArrayConstructorCallRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getTypeJvmTypeCrossReference_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_46);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:4546:5: ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            // InternalEketal.g:4547:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            {
            // InternalEketal.g:4547:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            // InternalEketal.g:4548:7: lv_dimensions_3_0= ruleXJArrayDimension
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_60);
            lv_dimensions_3_0=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
              							}
              							add(
              								current,
              								"dimensions",
              								lv_dimensions_3_0,
              								"jbase.Jbase.XJArrayDimension");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:4567:3: ( (lv_indexes_4_0= ruleXExpression ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID||(LA78_0>=RULE_INT && LA78_0<=RULE_DECIMAL)||LA78_0==18||LA78_0==22||LA78_0==28||(LA78_0>=45 && LA78_0<=46)||LA78_0==66||(LA78_0>=87 && LA78_0<=89)||(LA78_0>=92 && LA78_0<=93)||(LA78_0>=95 && LA78_0<=100)) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalEketal.g:4568:4: (lv_indexes_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:4568:4: (lv_indexes_4_0= ruleXExpression )
                    // InternalEketal.g:4569:5: lv_indexes_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_47);
                    lv_indexes_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"indexes",
                      						lv_indexes_4_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,53,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:4590:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*
            loop80:
            do {
                int alt80=2;
                alt80 = dfa80.predict(input);
                switch (alt80) {
            	case 1 :
            	    // InternalEketal.g:4591:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']'
            	    {
            	    // InternalEketal.g:4591:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) )
            	    // InternalEketal.g:4592:5: ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension )
            	    {
            	    // InternalEketal.g:4596:5: (lv_dimensions_6_0= ruleXJArrayDimension )
            	    // InternalEketal.g:4597:6: lv_dimensions_6_0= ruleXJArrayDimension
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_dimensions_6_0=ruleXJArrayDimension();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"dimensions",
            	      							lv_dimensions_6_0,
            	      							"jbase.Jbase.XJArrayDimension");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:4614:4: ( (lv_indexes_7_0= ruleXExpression ) )?
            	    int alt79=2;
            	    int LA79_0 = input.LA(1);

            	    if ( (LA79_0==RULE_ID||(LA79_0>=RULE_INT && LA79_0<=RULE_DECIMAL)||LA79_0==18||LA79_0==22||LA79_0==28||(LA79_0>=45 && LA79_0<=46)||LA79_0==66||(LA79_0>=87 && LA79_0<=89)||(LA79_0>=92 && LA79_0<=93)||(LA79_0>=95 && LA79_0<=100)) ) {
            	        alt79=1;
            	    }
            	    switch (alt79) {
            	        case 1 :
            	            // InternalEketal.g:4615:5: (lv_indexes_7_0= ruleXExpression )
            	            {
            	            // InternalEketal.g:4615:5: (lv_indexes_7_0= ruleXExpression )
            	            // InternalEketal.g:4616:6: lv_indexes_7_0= ruleXExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_3_1_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_47);
            	            lv_indexes_7_0=ruleXExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	              						}
            	              						add(
            	              							current,
            	              							"indexes",
            	              							lv_indexes_7_0,
            	              							"org.eclipse.xtext.xbase.Xbase.XExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_8=(Token)match(input,53,FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            // InternalEketal.g:4638:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalEketal.g:4639:4: ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    {
                    // InternalEketal.g:4643:4: (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    // InternalEketal.g:4644:5: lv_arrayLiteral_9_0= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getArrayLiteralXJArrayLiteralParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arrayLiteral_9_0=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					set(
                      						current,
                      						"arrayLiteral",
                      						lv_arrayLiteral_9_0,
                      						"jbase.Jbase.XJArrayLiteral");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayConstructorCall"


    // $ANTLR start "entryRuleXJArrayDimension"
    // InternalEketal.g:4665:1: entryRuleXJArrayDimension returns [EObject current=null] : iv_ruleXJArrayDimension= ruleXJArrayDimension EOF ;
    public final EObject entryRuleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayDimension = null;


        try {
            // InternalEketal.g:4665:57: (iv_ruleXJArrayDimension= ruleXJArrayDimension EOF )
            // InternalEketal.g:4666:2: iv_ruleXJArrayDimension= ruleXJArrayDimension EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayDimensionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayDimension=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayDimension; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayDimension"


    // $ANTLR start "ruleXJArrayDimension"
    // InternalEketal.g:4672:1: ruleXJArrayDimension returns [EObject current=null] : ( () otherlv_1= '[' ) ;
    public final EObject ruleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:4678:2: ( ( () otherlv_1= '[' ) )
            // InternalEketal.g:4679:2: ( () otherlv_1= '[' )
            {
            // InternalEketal.g:4679:2: ( () otherlv_1= '[' )
            // InternalEketal.g:4680:3: () otherlv_1= '['
            {
            // InternalEketal.g:4680:3: ()
            // InternalEketal.g:4681:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayDimensionAccess().getXJArrayDimensionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayDimensionAccess().getLeftSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayDimension"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalEketal.g:4695:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalEketal.g:4695:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalEketal.g:4696:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalEketal.g:4702:1: ruleXCastedExpression returns [EObject current=null] : ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_target_4_0 = null;

        EObject this_XPostfixOperation_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:4708:2: ( ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) )
            // InternalEketal.g:4709:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            {
            // InternalEketal.g:4709:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalEketal.g:4710:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    {
                    // InternalEketal.g:4710:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    // InternalEketal.g:4711:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    {
                    // InternalEketal.g:4728:4: ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    // InternalEketal.g:4729:5: () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) )
                    {
                    // InternalEketal.g:4729:5: ()
                    // InternalEketal.g:4730:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getXCastedExpressionAccess().getXCastedExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getXCastedExpressionAccess().getLeftParenthesisKeyword_0_0_1());
                      				
                    }
                    // InternalEketal.g:4740:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:4741:6: (lv_type_2_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:4741:6: (lv_type_2_0= ruleJvmTypeReference )
                    // InternalEketal.g:4742:7: lv_type_2_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_type_2_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"jbase.Jbase.JvmTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,24,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXCastedExpressionAccess().getRightParenthesisKeyword_0_0_3());
                      				
                    }
                    // InternalEketal.g:4763:5: ( (lv_target_4_0= ruleXExpression ) )
                    // InternalEketal.g:4764:6: (lv_target_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:4764:6: (lv_target_4_0= ruleXExpression )
                    // InternalEketal.g:4765:7: lv_target_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTargetXExpressionParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"target",
                      								lv_target_4_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:4785:3: this_XPostfixOperation_5= ruleXPostfixOperation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XPostfixOperation_5=ruleXPostfixOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XPostfixOperation_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalEketal.g:4797:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalEketal.g:4797:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalEketal.g:4798:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalEketal.g:4804:1: ruleXPostfixOperation returns [EObject current=null] : ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_operand_2_0 = null;

        EObject this_XMemberFeatureCall_3 = null;

        EObject lv_indexes_8_0 = null;

        EObject lv_indexes_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4810:2: ( ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) )
            // InternalEketal.g:4811:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            {
            // InternalEketal.g:4811:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==92) && (synpred26_InternalEketal())) {
                alt85=1;
            }
            else if ( (LA85_0==93) && (synpred26_InternalEketal())) {
                alt85=1;
            }
            else if ( (LA85_0==RULE_ID||(LA85_0>=RULE_INT && LA85_0<=RULE_DECIMAL)||LA85_0==18||LA85_0==22||(LA85_0>=45 && LA85_0<=46)||LA85_0==66||(LA85_0>=95 && LA85_0<=100)) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalEketal.g:4812:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    {
                    // InternalEketal.g:4812:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    // InternalEketal.g:4813:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    {
                    // InternalEketal.g:4813:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                    // InternalEketal.g:4814:5: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalEketal.g:4824:5: ( () ( ( ruleOpPostfix ) ) )
                    // InternalEketal.g:4825:6: () ( ( ruleOpPostfix ) )
                    {
                    // InternalEketal.g:4825:6: ()
                    // InternalEketal.g:4826:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXPostfixOperationAccess().getXJPrefixOperationAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:4832:6: ( ( ruleOpPostfix ) )
                    // InternalEketal.g:4833:7: ( ruleOpPostfix )
                    {
                    // InternalEketal.g:4833:7: ( ruleOpPostfix )
                    // InternalEketal.g:4834:8: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalEketal.g:4850:4: ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    // InternalEketal.g:4851:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    {
                    // InternalEketal.g:4851:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    // InternalEketal.g:4852:6: lv_operand_2_0= ruleXMemberFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXPostfixOperationAccess().getOperandXMemberFeatureCallParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"jbase.Jbase.XMemberFeatureCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:4871:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    {
                    // InternalEketal.g:4871:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    // InternalEketal.g:4872:4: this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_62);
                    this_XMemberFeatureCall_3=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XMemberFeatureCall_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:4880:4: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    int alt84=3;
                    switch ( input.LA(1) ) {
                        case 92:
                            {
                            int LA84_1 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt84=1;
                            }
                            }
                            break;
                        case 93:
                            {
                            int LA84_2 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt84=1;
                            }
                            }
                            break;
                        case 52:
                            {
                            int LA84_3 = input.LA(2);

                            if ( (synpred29_InternalEketal()) ) {
                                alt84=2;
                            }
                            }
                            break;
                    }

                    switch (alt84) {
                        case 1 :
                            // InternalEketal.g:4881:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            {
                            // InternalEketal.g:4881:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            // InternalEketal.g:4882:6: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                            {
                            // InternalEketal.g:4892:6: ( () ( ( ruleOpPostfix ) ) )
                            // InternalEketal.g:4893:7: () ( ( ruleOpPostfix ) )
                            {
                            // InternalEketal.g:4893:7: ()
                            // InternalEketal.g:4894:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalEketal.g:4900:7: ( ( ruleOpPostfix ) )
                            // InternalEketal.g:4901:8: ( ruleOpPostfix )
                            {
                            // InternalEketal.g:4901:8: ( ruleOpPostfix )
                            // InternalEketal.g:4902:9: ruleOpPostfix
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXPostfixOperationRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            ruleOpPostfix();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:4919:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            {
                            // InternalEketal.g:4919:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            // InternalEketal.g:4920:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            {
                            // InternalEketal.g:4944:6: ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            // InternalEketal.g:4945:7: () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            {
                            // InternalEketal.g:4945:7: ()
                            // InternalEketal.g:4946:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXJArrayAccessExpressionArrayAction_1_1_1_0_0(),
                              									current);
                              							
                            }

                            }

                            otherlv_7=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_7, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_1());
                              						
                            }
                            // InternalEketal.g:4956:7: ( (lv_indexes_8_0= ruleXExpression ) )
                            // InternalEketal.g:4957:8: (lv_indexes_8_0= ruleXExpression )
                            {
                            // InternalEketal.g:4957:8: (lv_indexes_8_0= ruleXExpression )
                            // InternalEketal.g:4958:9: lv_indexes_8_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_2_0());
                              								
                            }
                            pushFollow(FOLLOW_47);
                            lv_indexes_8_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                              									}
                              									add(
                              										current,
                              										"indexes",
                              										lv_indexes_8_0,
                              										"org.eclipse.xtext.xbase.Xbase.XExpression");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_9=(Token)match(input,53,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_3());
                              						
                            }
                            // InternalEketal.g:4979:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            loop83:
                            do {
                                int alt83=2;
                                alt83 = dfa83.predict(input);
                                switch (alt83) {
                            	case 1 :
                            	    // InternalEketal.g:4980:8: ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']'
                            	    {
                            	    // InternalEketal.g:4980:8: ( ( '[' )=>otherlv_10= '[' )
                            	    // InternalEketal.g:4981:9: ( '[' )=>otherlv_10= '['
                            	    {
                            	    otherlv_10=(Token)match(input,52,FOLLOW_43); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_10, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_4_0());
                            	      								
                            	    }

                            	    }

                            	    // InternalEketal.g:4987:8: ( (lv_indexes_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:4988:9: (lv_indexes_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4988:9: (lv_indexes_11_0= ruleXExpression )
                            	    // InternalEketal.g:4989:10: lv_indexes_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_4_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_47);
                            	    lv_indexes_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"indexes",
                            	      											lv_indexes_11_0,
                            	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }

                            	    otherlv_12=(Token)match(input,53,FOLLOW_39); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								newLeafNode(otherlv_12, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_4_2());
                            	      							
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalEketal.g:5019:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalEketal.g:5019:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalEketal.g:5020:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalEketal.g:5026:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token lv_explicitOperationCall_13_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject this_XPrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_arrayDimensions_2_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_memberCallArguments_14_0 = null;

        EObject lv_memberCallArguments_16_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5032:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) )
            // InternalEketal.g:5033:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            {
            // InternalEketal.g:5033:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            // InternalEketal.g:5034:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_63);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:5042:3: ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            loop90:
            do {
                int alt90=4;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==52) ) {
                    int LA90_2 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt90=1;
                    }


                }
                else if ( (LA90_0==35) ) {
                    int LA90_3 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt90=1;
                    }
                    else if ( (synpred32_InternalEketal()) ) {
                        alt90=2;
                    }
                    else if ( (synpred33_InternalEketal()) ) {
                        alt90=3;
                    }


                }


                switch (alt90) {
            	case 1 :
            	    // InternalEketal.g:5043:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    {
            	    // InternalEketal.g:5043:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    // InternalEketal.g:5044:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    {
            	    // InternalEketal.g:5056:5: ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    // InternalEketal.g:5057:6: () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class'
            	    {
            	    // InternalEketal.g:5057:6: ()
            	    // InternalEketal.g:5058:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMemberFeatureCallAccess().getXJClassObjectTypeExpressionAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:5064:6: ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )*
            	    loop86:
            	    do {
            	        int alt86=2;
            	        int LA86_0 = input.LA(1);

            	        if ( (LA86_0==52) ) {
            	            alt86=1;
            	        }


            	        switch (alt86) {
            	    	case 1 :
            	    	    // InternalEketal.g:5065:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    {
            	    	    // InternalEketal.g:5065:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    // InternalEketal.g:5066:8: lv_arrayDimensions_2_0= ruleArrayBrackets
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArrayDimensionsArrayBracketsParserRuleCall_1_0_0_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FOLLOW_64);
            	    	    lv_arrayDimensions_2_0=ruleArrayBrackets();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"arrayDimensions",
            	    	      									lv_arrayDimensions_2_0,
            	    	      									"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop86;
            	        }
            	    } while (true);

            	    otherlv_3=(Token)match(input,35,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_3, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_2());
            	      					
            	    }
            	    otherlv_4=(Token)match(input,67,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_4, grammarAccess.getXMemberFeatureCallAccess().getClassKeyword_1_0_0_3());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:5094:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    {
            	    // InternalEketal.g:5094:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    // InternalEketal.g:5095:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
            	    {
            	    // InternalEketal.g:5095:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalEketal.g:5096:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalEketal.g:5108:6: ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalEketal.g:5109:7: () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalEketal.g:5109:7: ()
            	    // InternalEketal.g:5110:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_6=(Token)match(input,35,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_6, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1());
            	      						
            	    }
            	    // InternalEketal.g:5120:7: ( ( ruleFeatureCallID ) )
            	    // InternalEketal.g:5121:8: ( ruleFeatureCallID )
            	    {
            	    // InternalEketal.g:5121:8: ( ruleFeatureCallID )
            	    // InternalEketal.g:5122:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_48);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5145:5: ( (lv_value_9_0= ruleXAssignment ) )
            	    // InternalEketal.g:5146:6: (lv_value_9_0= ruleXAssignment )
            	    {
            	    // InternalEketal.g:5146:6: (lv_value_9_0= ruleXAssignment )
            	    // InternalEketal.g:5147:7: lv_value_9_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_value_9_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_9_0,
            	      								"jbase.Jbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalEketal.g:5166:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    {
            	    // InternalEketal.g:5166:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    // InternalEketal.g:5167:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    {
            	    // InternalEketal.g:5167:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) )
            	    // InternalEketal.g:5168:6: ( ( () '.' ) )=> ( () otherlv_11= '.' )
            	    {
            	    // InternalEketal.g:5174:6: ( () otherlv_11= '.' )
            	    // InternalEketal.g:5175:7: () otherlv_11= '.'
            	    {
            	    // InternalEketal.g:5175:7: ()
            	    // InternalEketal.g:5176:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_2_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_11=(Token)match(input,35,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5188:5: ( ( ruleIdOrSuper ) )
            	    // InternalEketal.g:5189:6: ( ruleIdOrSuper )
            	    {
            	    // InternalEketal.g:5189:6: ( ruleIdOrSuper )
            	    // InternalEketal.g:5190:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_68);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5204:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    int alt89=2;
            	    alt89 = dfa89.predict(input);
            	    switch (alt89) {
            	        case 1 :
            	            // InternalEketal.g:5205:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')'
            	            {
            	            // InternalEketal.g:5205:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) )
            	            // InternalEketal.g:5206:7: ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' )
            	            {
            	            // InternalEketal.g:5210:7: (lv_explicitOperationCall_13_0= '(' )
            	            // InternalEketal.g:5211:8: lv_explicitOperationCall_13_0= '('
            	            {
            	            lv_explicitOperationCall_13_0=(Token)match(input,22,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_13_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalEketal.g:5223:6: ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )?
            	            int alt88=2;
            	            int LA88_0 = input.LA(1);

            	            if ( (LA88_0==RULE_ID||(LA88_0>=RULE_INT && LA88_0<=RULE_DECIMAL)||LA88_0==18||LA88_0==22||LA88_0==28||(LA88_0>=45 && LA88_0<=46)||LA88_0==66||(LA88_0>=87 && LA88_0<=89)||(LA88_0>=92 && LA88_0<=93)||(LA88_0>=95 && LA88_0<=100)) ) {
            	                alt88=1;
            	            }
            	            switch (alt88) {
            	                case 1 :
            	                    // InternalEketal.g:5224:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalEketal.g:5224:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) )
            	                    // InternalEketal.g:5225:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    {
            	                    // InternalEketal.g:5225:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    // InternalEketal.g:5226:9: lv_memberCallArguments_14_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_12);
            	                    lv_memberCallArguments_14_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_14_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }

            	                    // InternalEketal.g:5243:7: (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    loop87:
            	                    do {
            	                        int alt87=2;
            	                        int LA87_0 = input.LA(1);

            	                        if ( (LA87_0==23) ) {
            	                            alt87=1;
            	                        }


            	                        switch (alt87) {
            	                    	case 1 :
            	                    	    // InternalEketal.g:5244:8: otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_15=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      								newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_2_2_1_1_0());
            	                    	      							
            	                    	    }
            	                    	    // InternalEketal.g:5248:8: ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    // InternalEketal.g:5249:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalEketal.g:5249:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    // InternalEketal.g:5250:10: lv_memberCallArguments_16_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_1_1_0());
            	                    	      									
            	                    	    }
            	                    	    pushFollow(FOLLOW_12);
            	                    	    lv_memberCallArguments_16_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										if (current==null) {
            	                    	      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      										}
            	                    	      										add(
            	                    	      											current,
            	                    	      											"memberCallArguments",
            	                    	      											lv_memberCallArguments_16_0,
            	                    	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      										afterParserOrEnumRuleCall();
            	                    	      									
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop87;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            otherlv_17=(Token)match(input,24,FOLLOW_63); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_17, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_2_2());
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalEketal.g:5280:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalEketal.g:5280:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalEketal.g:5281:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalEketal.g:5287:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5293:2: ( ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5294:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5294:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5295:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5295:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalEketal.g:5296:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalEketal.g:5309:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalEketal.g:5310:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalEketal.g:5310:5: ()
            // InternalEketal.g:5311:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,68,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalEketal.g:5325:5: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:5326:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:5326:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:5327:7: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_9);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"jbase.Jbase.FullJvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,20,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalEketal.g:5350:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalEketal.g:5351:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalEketal.g:5351:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalEketal.g:5352:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5373:3: ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5374:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5374:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5375:5: lv_eachExpression_7_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalEketal.g:5396:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalEketal.g:5396:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalEketal.g:5397:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalEketal.g:5403:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5409:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5410:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5410:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5411:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5411:3: ()
            // InternalEketal.g:5412:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,68,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5426:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_ID||(LA92_0>=RULE_INT && LA92_0<=RULE_DECIMAL)||LA92_0==18||LA92_0==22||LA92_0==28||(LA92_0>=45 && LA92_0<=47)||LA92_0==66||(LA92_0>=87 && LA92_0<=89)||(LA92_0>=92 && LA92_0<=93)||(LA92_0>=95 && LA92_0<=100)) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalEketal.g:5427:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalEketal.g:5427:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalEketal.g:5428:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalEketal.g:5428:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalEketal.g:5429:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:5446:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==23) ) {
                            alt91=1;
                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalEketal.g:5447:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:5451:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalEketal.g:5452:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalEketal.g:5452:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalEketal.g:5453:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_71);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop91;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,16,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalEketal.g:5476:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==RULE_ID||(LA93_0>=RULE_INT && LA93_0<=RULE_DECIMAL)||LA93_0==18||LA93_0==22||LA93_0==28||(LA93_0>=45 && LA93_0<=46)||LA93_0==66||(LA93_0>=87 && LA93_0<=89)||(LA93_0>=92 && LA93_0<=93)||(LA93_0>=95 && LA93_0<=100)) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalEketal.g:5477:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalEketal.g:5477:4: (lv_expression_7_0= ruleXExpression )
                    // InternalEketal.g:5478:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_72);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,16,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalEketal.g:5499:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==RULE_ID||(LA95_0>=RULE_INT && LA95_0<=RULE_DECIMAL)||LA95_0==18||LA95_0==22||LA95_0==28||(LA95_0>=45 && LA95_0<=46)||LA95_0==66||(LA95_0>=87 && LA95_0<=89)||(LA95_0>=92 && LA95_0<=93)||(LA95_0>=95 && LA95_0<=100)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalEketal.g:5500:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:5500:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalEketal.g:5501:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalEketal.g:5501:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalEketal.g:5502:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:5519:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==23) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // InternalEketal.g:5520:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:5524:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalEketal.g:5525:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:5525:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalEketal.g:5526:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,24,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalEketal.g:5549:3: ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5550:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5550:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5551:5: lv_eachExpression_13_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalEketal.g:5572:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalEketal.g:5572:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalEketal.g:5573:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalEketal.g:5579:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5585:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) )
            // InternalEketal.g:5586:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            {
            // InternalEketal.g:5586:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            // InternalEketal.g:5587:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            {
            // InternalEketal.g:5587:3: ()
            // InternalEketal.g:5588:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5602:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalEketal.g:5603:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalEketal.g:5603:4: (lv_if_3_0= ruleXExpression )
            // InternalEketal.g:5604:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5625:3: ( (lv_then_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5626:4: (lv_then_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5626:4: (lv_then_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5627:5: lv_then_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_73);
            lv_then_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5644:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==69) ) {
                int LA96_1 = input.LA(2);

                if ( (synpred36_InternalEketal()) ) {
                    alt96=1;
                }
            }
            switch (alt96) {
                case 1 :
                    // InternalEketal.g:5645:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    {
                    // InternalEketal.g:5645:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalEketal.g:5646:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,69,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalEketal.g:5652:4: ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    // InternalEketal.g:5653:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    {
                    // InternalEketal.g:5653:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    // InternalEketal.g:5654:6: lv_else_7_0= ruleXJStatementOrBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXJStatementOrBlockParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXJStatementOrBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"jbase.Jbase.XJStatementOrBlock");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalEketal.g:5676:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalEketal.g:5676:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalEketal.g:5677:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalEketal.g:5683:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5689:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5690:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5690:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5691:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5691:3: ()
            // InternalEketal.g:5692:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5706:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalEketal.g:5707:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalEketal.g:5707:4: (lv_predicate_3_0= ruleXExpression )
            // InternalEketal.g:5708:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5729:3: ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5730:4: (lv_body_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5730:4: (lv_body_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5731:5: lv_body_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalEketal.g:5752:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalEketal.g:5752:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalEketal.g:5753:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalEketal.g:5759:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5765:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalEketal.g:5766:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalEketal.g:5766:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalEketal.g:5767:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalEketal.g:5767:3: ()
            // InternalEketal.g:5768:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalEketal.g:5778:3: ( (lv_body_2_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5779:4: (lv_body_2_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5779:4: (lv_body_2_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5780:5: lv_body_2_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_74);
            lv_body_2_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5805:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalEketal.g:5806:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalEketal.g:5806:4: (lv_predicate_5_0= ruleXExpression )
            // InternalEketal.g:5807:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalEketal.g:5832:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalEketal.g:5832:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalEketal.g:5833:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalEketal.g:5839:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_switch_3_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_default_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5845:2: ( ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) )
            // InternalEketal.g:5846:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            {
            // InternalEketal.g:5846:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            // InternalEketal.g:5847:3: () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}'
            {
            // InternalEketal.g:5847:3: ()
            // InternalEketal.g:5848:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5862:3: ( (lv_switch_3_0= ruleXExpression ) )
            // InternalEketal.g:5863:4: (lv_switch_3_0= ruleXExpression )
            {
            // InternalEketal.g:5863:4: (lv_switch_3_0= ruleXExpression )
            // InternalEketal.g:5864:5: lv_switch_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_switch_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
              					}
              					set(
              						current,
              						"switch",
              						lv_switch_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_5=(Token)match(input,18,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:5889:3: ( (lv_cases_6_0= ruleXCasePart ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==74) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalEketal.g:5890:4: (lv_cases_6_0= ruleXCasePart )
            	    {
            	    // InternalEketal.g:5890:4: (lv_cases_6_0= ruleXCasePart )
            	    // InternalEketal.g:5891:5: lv_cases_6_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_75);
            	    lv_cases_6_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_6_0,
            	      						"jbase.Jbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            // InternalEketal.g:5908:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==73) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalEketal.g:5909:4: otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    {
                    otherlv_7=(Token)match(input,73,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_7_0());
                      			
                    }
                    otherlv_8=(Token)match(input,20,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_7_1());
                      			
                    }
                    // InternalEketal.g:5917:4: ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    // InternalEketal.g:5918:5: (lv_default_9_0= ruleXJSwitchStatements )
                    {
                    // InternalEketal.g:5918:5: (lv_default_9_0= ruleXJSwitchStatements )
                    // InternalEketal.g:5919:6: lv_default_9_0= ruleXJSwitchStatements
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXJSwitchStatementsParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_default_9_0=ruleXJSwitchStatements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_9_0,
                      							"jbase.Jbase.XJSwitchStatements");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalEketal.g:5945:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalEketal.g:5945:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalEketal.g:5946:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalEketal.g:5952:1: ruleXCasePart returns [EObject current=null] : ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_case_2_0 = null;

        EObject lv_then_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5958:2: ( ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) )
            // InternalEketal.g:5959:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            {
            // InternalEketal.g:5959:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            // InternalEketal.g:5960:3: () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) )
            {
            // InternalEketal.g:5960:3: ()
            // InternalEketal.g:5961:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1());
              		
            }
            // InternalEketal.g:5971:3: ( (lv_case_2_0= ruleXExpression ) )
            // InternalEketal.g:5972:4: (lv_case_2_0= ruleXExpression )
            {
            // InternalEketal.g:5972:4: (lv_case_2_0= ruleXExpression )
            // InternalEketal.g:5973:5: lv_case_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_case_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"case",
              						lv_case_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_3());
              		
            }
            // InternalEketal.g:5994:3: ( (lv_then_4_0= ruleXJSwitchStatements ) )
            // InternalEketal.g:5995:4: (lv_then_4_0= ruleXJSwitchStatements )
            {
            // InternalEketal.g:5995:4: (lv_then_4_0= ruleXJSwitchStatements )
            // InternalEketal.g:5996:5: lv_then_4_0= ruleXJSwitchStatements
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getThenXJSwitchStatementsParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_then_4_0=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"jbase.Jbase.XJSwitchStatements");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXJSwitchStatements"
    // InternalEketal.g:6017:1: entryRuleXJSwitchStatements returns [EObject current=null] : iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF ;
    public final EObject entryRuleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSwitchStatements = null;


        try {
            // InternalEketal.g:6017:59: (iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF )
            // InternalEketal.g:6018:2: iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSwitchStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSwitchStatements=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSwitchStatements; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSwitchStatements"


    // $ANTLR start "ruleXJSwitchStatements"
    // InternalEketal.g:6024:1: ruleXJSwitchStatements returns [EObject current=null] : ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) ;
    public final EObject ruleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6030:2: ( ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) )
            // InternalEketal.g:6031:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            {
            // InternalEketal.g:6031:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            // InternalEketal.g:6032:3: () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            {
            // InternalEketal.g:6032:3: ()
            // InternalEketal.g:6033:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSwitchStatementsAccess().getXJSwitchStatementsAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6039:3: ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_ID||(LA99_0>=RULE_INT && LA99_0<=RULE_DECIMAL)||LA99_0==16||LA99_0==18||LA99_0==22||LA99_0==28||LA99_0==31||(LA99_0>=45 && LA99_0<=47)||(LA99_0>=49 && LA99_0<=50)||LA99_0==66||LA99_0==68||(LA99_0>=70 && LA99_0<=72)||LA99_0==75||LA99_0==78||(LA99_0>=87 && LA99_0<=89)||(LA99_0>=92 && LA99_0<=93)||(LA99_0>=95 && LA99_0<=102)) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalEketal.g:6040:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:6040:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:6041:5: lv_expressions_1_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJSwitchStatementsAccess().getExpressionsXJStatementOrBlockParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_76);
            	    lv_expressions_1_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJSwitchStatementsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_1_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSwitchStatements"


    // $ANTLR start "entryRuleXJTryWithResourcesStatement"
    // InternalEketal.g:6062:1: entryRuleXJTryWithResourcesStatement returns [EObject current=null] : iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF ;
    public final EObject entryRuleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesStatement = null;


        try {
            // InternalEketal.g:6062:68: (iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF )
            // InternalEketal.g:6063:2: iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesStatement=ruleXJTryWithResourcesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesStatement"


    // $ANTLR start "ruleXJTryWithResourcesStatement"
    // InternalEketal.g:6069:1: ruleXJTryWithResourcesStatement returns [EObject current=null] : ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) ;
    public final EObject ruleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_openParenthesis_2_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_resourceDeclarations_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_catchClauses_6_0 = null;

        EObject lv_finallyExpression_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6075:2: ( ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) )
            // InternalEketal.g:6076:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            {
            // InternalEketal.g:6076:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            // InternalEketal.g:6077:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            {
            // InternalEketal.g:6077:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) )
            // InternalEketal.g:6078:4: ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            {
            // InternalEketal.g:6089:4: ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            // InternalEketal.g:6090:5: () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) )
            {
            // InternalEketal.g:6090:5: ()
            // InternalEketal.g:6091:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJTryWithResourcesStatementAccess().getXJTryWithResourcesStatementAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJTryWithResourcesStatementAccess().getTryKeyword_0_0_1());
              				
            }
            // InternalEketal.g:6101:5: ( (lv_openParenthesis_2_0= '(' ) )
            // InternalEketal.g:6102:6: (lv_openParenthesis_2_0= '(' )
            {
            // InternalEketal.g:6102:6: (lv_openParenthesis_2_0= '(' )
            // InternalEketal.g:6103:7: lv_openParenthesis_2_0= '('
            {
            lv_openParenthesis_2_0=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_openParenthesis_2_0, grammarAccess.getXJTryWithResourcesStatementAccess().getOpenParenthesisLeftParenthesisKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJTryWithResourcesStatementRule());
              							}
              							setWithLastConsumed(current, "openParenthesis", true, "(");
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:6117:3: ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==RULE_ID||LA100_0==47) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalEketal.g:6118:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    {
            	    // InternalEketal.g:6118:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    // InternalEketal.g:6119:5: lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getResourceDeclarationsXJTryWithResourcesVariableDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_resourceDeclarations_3_0=ruleXJTryWithResourcesVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"resourceDeclarations",
            	      						lv_resourceDeclarations_3_0,
            	      						"jbase.Jbase.XJTryWithResourcesVariableDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesStatementAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6140:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6141:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6141:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6142:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_77);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6159:3: ( (lv_catchClauses_6_0= ruleXCatchClause ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==77) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalEketal.g:6160:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    {
            	    // InternalEketal.g:6160:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    // InternalEketal.g:6161:5: lv_catchClauses_6_0= ruleXCatchClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getCatchClausesXCatchClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_catchClauses_6_0=ruleXCatchClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"catchClauses",
            	      						lv_catchClauses_6_0,
            	      						"jbase.Jbase.XCatchClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            // InternalEketal.g:6178:3: (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==76) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalEketal.g:6179:4: otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    {
                    otherlv_7=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:6183:4: ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    // InternalEketal.g:6184:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:6184:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    // InternalEketal.g:6185:6: lv_finallyExpression_8_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyExpressionXBlockExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_8_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
                      						}
                      						set(
                      							current,
                      							"finallyExpression",
                      							lv_finallyExpression_8_0,
                      							"jbase.Jbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesStatement"


    // $ANTLR start "entryRuleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:6207:1: entryRuleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF ;
    public final EObject entryRuleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesVariableDeclaration = null;


        try {
            // InternalEketal.g:6207:78: (iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF )
            // InternalEketal.g:6208:2: iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesVariableDeclaration=ruleXJTryWithResourcesVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "ruleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:6214:1: ruleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6220:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalEketal.g:6221:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalEketal.g:6221:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            // InternalEketal.g:6222:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalEketal.g:6222:3: ()
            // InternalEketal.g:6223:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getXJTryWithResourcesVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6229:3: ( (lv_final_1_0= 'final' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==47) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalEketal.g:6230:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:6230:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:6231:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,47,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:6243:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:6244:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:6244:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:6245:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6262:3: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:6263:4: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:6263:4: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:6264:5: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getNameValidIDParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,51,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getEqualsSignKeyword_4());
              		
            }
            // InternalEketal.g:6285:3: ( (lv_right_5_0= ruleXExpression ) )
            // InternalEketal.g:6286:4: (lv_right_5_0= ruleXExpression )
            {
            // InternalEketal.g:6286:4: (lv_right_5_0= ruleXExpression )
            // InternalEketal.g:6287:5: lv_right_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getRightXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_right_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"right",
              						lv_right_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6304:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==16) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalEketal.g:6305:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalEketal.g:6305:4: (lv_semicolon_6_0= ';' )
                    // InternalEketal.g:6306:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getSemicolonSemicolonKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_6_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalEketal.g:6322:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalEketal.g:6322:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalEketal.g:6323:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalEketal.g:6329:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6335:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) )
            // InternalEketal.g:6336:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            {
            // InternalEketal.g:6336:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            // InternalEketal.g:6337:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            {
            // InternalEketal.g:6337:3: ()
            // InternalEketal.g:6338:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalEketal.g:6348:3: ( (lv_expression_2_0= ruleXBlockExpression ) )
            // InternalEketal.g:6349:4: (lv_expression_2_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6349:4: (lv_expression_2_0= ruleXBlockExpression )
            // InternalEketal.g:6350:5: lv_expression_2_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXBlockExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_78);
            lv_expression_2_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6367:3: ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==77) ) {
                alt107=1;
            }
            else if ( (LA107_0==76) ) {
                alt107=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // InternalEketal.g:6368:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    {
                    // InternalEketal.g:6368:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    // InternalEketal.g:6369:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    {
                    // InternalEketal.g:6369:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt105=0;
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==77) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalEketal.g:6370:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalEketal.g:6370:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalEketal.g:6371:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_77);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"jbase.Jbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt105 >= 1 ) break loop105;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(105, input);
                                throw eee;
                        }
                        cnt105++;
                    } while (true);

                    // InternalEketal.g:6388:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==76) && (synpred38_InternalEketal())) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // InternalEketal.g:6389:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            {
                            // InternalEketal.g:6389:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalEketal.g:6390:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalEketal.g:6396:6: ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            // InternalEketal.g:6397:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            {
                            // InternalEketal.g:6397:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            // InternalEketal.g:6398:8: lv_finallyExpression_5_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"jbase.Jbase.XBlockExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6418:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    {
                    // InternalEketal.g:6418:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    // InternalEketal.g:6419:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    {
                    otherlv_6=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalEketal.g:6423:5: ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    // InternalEketal.g:6424:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:6424:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    // InternalEketal.g:6425:7: lv_finallyExpression_7_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"jbase.Jbase.XBlockExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalEketal.g:6448:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalEketal.g:6448:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalEketal.g:6449:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalEketal.g:6455:1: ruleXCatchClause returns [EObject current=null] : ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6461:2: ( ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:6462:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:6462:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:6463:3: () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:6463:3: ()
            // InternalEketal.g:6464:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCatchClauseAccess().getXCatchClauseAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6470:3: ( ( 'catch' )=>otherlv_1= 'catch' )
            // InternalEketal.g:6471:4: ( 'catch' )=>otherlv_1= 'catch'
            {
            otherlv_1=(Token)match(input,77,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getCatchKeyword_1());
              			
            }

            }

            otherlv_2=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6481:3: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:6482:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:6482:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:6483:5: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_3_0,
              						"jbase.Jbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:6504:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6505:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6505:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6506:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXBlockExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalEketal.g:6527:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalEketal.g:6527:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalEketal.g:6528:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalEketal.g:6534:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6540:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:6541:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:6541:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:6542:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:6542:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalEketal.g:6543:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalEketal.g:6550:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalEketal.g:6551:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalEketal.g:6551:5: ()
            // InternalEketal.g:6552:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalEketal.g:6568:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalEketal.g:6569:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalEketal.g:6569:4: (lv_param_3_0= ruleXExpression )
            // InternalEketal.g:6570:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6591:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6592:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6592:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6593:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalEketal.g:6614:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalEketal.g:6614:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalEketal.g:6615:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalEketal.g:6621:1: ruleXPrimaryExpression returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XJArrayConstructorCall_0 = null;

        EObject this_XConstructorCall_1 = null;

        EObject this_XJFeatureCallWithArrayAccess_2 = null;

        EObject this_XLiteral_3 = null;

        EObject this_XParenthesizedExpression_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:6627:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) )
            // InternalEketal.g:6628:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            {
            // InternalEketal.g:6628:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            int alt108=5;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // InternalEketal.g:6629:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    {
                    // InternalEketal.g:6629:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    // InternalEketal.g:6630:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJArrayConstructorCallParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayConstructorCall_0=ruleXJArrayConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJArrayConstructorCall_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6656:3: this_XConstructorCall_1= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_1=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6665:3: this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJFeatureCallWithArrayAccessParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJFeatureCallWithArrayAccess_2=ruleXJFeatureCallWithArrayAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJFeatureCallWithArrayAccess_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:6674:3: this_XLiteral_3= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_3=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:6683:3: this_XParenthesizedExpression_4= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_4=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalEketal.g:6695:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalEketal.g:6695:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalEketal.g:6696:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalEketal.g:6702:1: ruleXLiteral returns [EObject current=null] : (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XBooleanLiteral_0 = null;

        EObject this_XNumberLiteral_1 = null;

        EObject this_XNullLiteral_2 = null;

        EObject this_XCharLiteral_3 = null;

        EObject this_XStringLiteral_4 = null;

        EObject this_XJArrayLiteral_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:6708:2: ( (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) )
            // InternalEketal.g:6709:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            {
            // InternalEketal.g:6709:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            int alt109=6;
            switch ( input.LA(1) ) {
            case 98:
            case 99:
                {
                alt109=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
                {
                alt109=2;
                }
                break;
            case 100:
                {
                alt109=3;
                }
                break;
            case RULE_CHARACTER:
                {
                alt109=4;
                }
                break;
            case RULE_STRING:
                {
                alt109=5;
                }
                break;
            case 18:
                {
                alt109=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalEketal.g:6710:3: this_XBooleanLiteral_0= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_0=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6719:3: this_XNumberLiteral_1= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_1=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6728:3: this_XNullLiteral_2= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_2=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:6737:3: this_XCharLiteral_3= ruleXCharLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCharLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCharLiteral_3=ruleXCharLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCharLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:6746:3: this_XStringLiteral_4= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_4=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:6755:3: this_XJArrayLiteral_5= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXJArrayLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayLiteral_5=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJArrayLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXJArrayLiteral"
    // InternalEketal.g:6767:1: entryRuleXJArrayLiteral returns [EObject current=null] : iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF ;
    public final EObject entryRuleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayLiteral = null;


        try {
            // InternalEketal.g:6767:55: (iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF )
            // InternalEketal.g:6768:2: iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayLiteral=ruleXJArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayLiteral"


    // $ANTLR start "ruleXJArrayLiteral"
    // InternalEketal.g:6774:1: ruleXJArrayLiteral returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6780:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalEketal.g:6781:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalEketal.g:6781:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            // InternalEketal.g:6782:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalEketal.g:6782:3: ()
            // InternalEketal.g:6783:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayLiteralAccess().getXJArrayLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayLiteralAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:6793:3: ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_ID||(LA111_0>=RULE_INT && LA111_0<=RULE_DECIMAL)||LA111_0==18||LA111_0==22||LA111_0==28||(LA111_0>=45 && LA111_0<=46)||LA111_0==66||(LA111_0>=87 && LA111_0<=89)||(LA111_0>=92 && LA111_0<=93)||(LA111_0>=95 && LA111_0<=100)) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalEketal.g:6794:4: ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:6794:4: ( (lv_elements_2_0= ruleXExpression ) )
                    // InternalEketal.g:6795:5: (lv_elements_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:6795:5: (lv_elements_2_0= ruleXExpression )
                    // InternalEketal.g:6796:6: lv_elements_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_elements_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:6813:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==23) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // InternalEketal.g:6814:5: otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXJArrayLiteralAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:6818:5: ( (lv_elements_4_0= ruleXExpression ) )
                    	    // InternalEketal.g:6819:6: (lv_elements_4_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:6819:6: (lv_elements_4_0= ruleXExpression )
                    	    // InternalEketal.g:6820:7: lv_elements_4_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_elements_4_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayLiteralAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayLiteral"


    // $ANTLR start "entryRuleXCharLiteral"
    // InternalEketal.g:6847:1: entryRuleXCharLiteral returns [EObject current=null] : iv_ruleXCharLiteral= ruleXCharLiteral EOF ;
    public final EObject entryRuleXCharLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCharLiteral = null;


        try {
            // InternalEketal.g:6847:53: (iv_ruleXCharLiteral= ruleXCharLiteral EOF )
            // InternalEketal.g:6848:2: iv_ruleXCharLiteral= ruleXCharLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCharLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCharLiteral=ruleXCharLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCharLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCharLiteral"


    // $ANTLR start "ruleXCharLiteral"
    // InternalEketal.g:6854:1: ruleXCharLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) ;
    public final EObject ruleXCharLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6860:2: ( ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) )
            // InternalEketal.g:6861:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            {
            // InternalEketal.g:6861:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            // InternalEketal.g:6862:3: () ( (lv_value_1_0= RULE_CHARACTER ) )
            {
            // InternalEketal.g:6862:3: ()
            // InternalEketal.g:6863:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCharLiteralAccess().getXJCharLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6869:3: ( (lv_value_1_0= RULE_CHARACTER ) )
            // InternalEketal.g:6870:4: (lv_value_1_0= RULE_CHARACTER )
            {
            // InternalEketal.g:6870:4: (lv_value_1_0= RULE_CHARACTER )
            // InternalEketal.g:6871:5: lv_value_1_0= RULE_CHARACTER
            {
            lv_value_1_0=(Token)match(input,RULE_CHARACTER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXCharLiteralAccess().getValueCHARACTERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXCharLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.CHARACTER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCharLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalEketal.g:6891:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalEketal.g:6891:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalEketal.g:6892:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalEketal.g:6898:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6904:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalEketal.g:6905:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalEketal.g:6905:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalEketal.g:6906:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalEketal.g:6906:3: ()
            // InternalEketal.g:6907:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6913:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalEketal.g:6914:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalEketal.g:6914:4: (lv_value_1_0= RULE_STRING )
            // InternalEketal.g:6915:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleOpEquality"
    // InternalEketal.g:6935:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalEketal.g:6935:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalEketal.g:6936:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalEketal.g:6942:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6948:2: ( (kw= '==' | kw= '!=' ) )
            // InternalEketal.g:6949:2: (kw= '==' | kw= '!=' )
            {
            // InternalEketal.g:6949:2: (kw= '==' | kw= '!=' )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==79) ) {
                alt112=1;
            }
            else if ( (LA112_0==80) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalEketal.g:6950:3: kw= '=='
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6956:3: kw= '!='
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleOpMulti"
    // InternalEketal.g:6965:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalEketal.g:6965:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalEketal.g:6966:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalEketal.g:6972:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6978:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalEketal.g:6979:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalEketal.g:6979:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt113=3;
            switch ( input.LA(1) ) {
            case RULE_ANY:
                {
                alt113=1;
                }
                break;
            case 81:
                {
                alt113=2;
                }
                break;
            case 82:
                {
                alt113=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }

            switch (alt113) {
                case 1 :
                    // InternalEketal.g:6980:3: kw= '*'
                    {
                    kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6986:3: kw= '/'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6992:3: kw= '%'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleOpOther"
    // InternalEketal.g:7001:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalEketal.g:7001:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalEketal.g:7002:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalEketal.g:7008:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7014:2: ( ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) )
            // InternalEketal.g:7015:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            {
            // InternalEketal.g:7015:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==64) ) {
                alt115=1;
            }
            else if ( (LA115_0==83) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalEketal.g:7016:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalEketal.g:7016:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalEketal.g:7017:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,64,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:7022:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==64) ) {
                        int LA114_1 = input.LA(2);

                        if ( (LA114_1==EOF||LA114_1==RULE_ID||(LA114_1>=RULE_INT && LA114_1<=RULE_DECIMAL)||LA114_1==18||LA114_1==22||LA114_1==28||(LA114_1>=45 && LA114_1<=46)||LA114_1==66||(LA114_1>=87 && LA114_1<=89)||(LA114_1>=92 && LA114_1<=93)||(LA114_1>=95 && LA114_1<=100)) ) {
                            alt114=2;
                        }
                        else if ( (LA114_1==64) && (synpred42_InternalEketal())) {
                            alt114=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 114, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 114, 0, input);

                        throw nvae;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalEketal.g:7023:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalEketal.g:7023:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalEketal.g:7024:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalEketal.g:7029:6: (kw= '>' kw= '>' )
                            // InternalEketal.g:7030:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,64,FOLLOW_81); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:7043:5: kw= '>'
                            {
                            kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7051:3: kw= '<<'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalEketal.g:7060:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalEketal.g:7060:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalEketal.g:7061:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalEketal.g:7067:1: ruleXAndExpression returns [EObject current=null] : (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseInclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7073:2: ( (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:7074:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:7074:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            // InternalEketal.g:7075:3: this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXBitwiseInclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            this_XBitwiseInclusiveOrExpression_0=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseInclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7083:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==27) ) {
                    int LA116_2 = input.LA(2);

                    if ( (synpred43_InternalEketal()) ) {
                        alt116=1;
                    }


                }


                switch (alt116) {
            	case 1 :
            	    // InternalEketal.g:7084:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:7084:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalEketal.g:7085:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalEketal.g:7095:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalEketal.g:7096:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalEketal.g:7096:6: ()
            	    // InternalEketal.g:7097:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7103:6: ( ( ruleOpAnd ) )
            	    // InternalEketal.g:7104:7: ( ruleOpAnd )
            	    {
            	    // InternalEketal.g:7104:7: ( ruleOpAnd )
            	    // InternalEketal.g:7105:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7121:4: ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    // InternalEketal.g:7122:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    {
            	    // InternalEketal.g:7122:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    // InternalEketal.g:7123:6: lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXBitwiseInclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_rightOperand_3_0=ruleXBitwiseInclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseInclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:7145:1: entryRuleXBitwiseInclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseInclusiveOrExpression = null;


        try {
            // InternalEketal.g:7145:70: (iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF )
            // InternalEketal.g:7146:2: iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseInclusiveOrExpression=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseInclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseInclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:7152:1: ruleXBitwiseInclusiveOrExpression returns [EObject current=null] : (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseExclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7158:2: ( (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:7159:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:7159:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            // InternalEketal.g:7160:3: this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBitwiseExclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_82);
            this_XBitwiseExclusiveOrExpression_0=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseExclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7168:3: ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==84) ) {
                    int LA117_2 = input.LA(2);

                    if ( (synpred44_InternalEketal()) ) {
                        alt117=1;
                    }


                }


                switch (alt117) {
            	case 1 :
            	    // InternalEketal.g:7169:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:7169:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) )
            	    // InternalEketal.g:7170:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:7180:5: ( () ( ( ruleOpInclusiveOr ) ) )
            	    // InternalEketal.g:7181:6: () ( ( ruleOpInclusiveOr ) )
            	    {
            	    // InternalEketal.g:7181:6: ()
            	    // InternalEketal.g:7182:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7188:6: ( ( ruleOpInclusiveOr ) )
            	    // InternalEketal.g:7189:7: ( ruleOpInclusiveOr )
            	    {
            	    // InternalEketal.g:7189:7: ( ruleOpInclusiveOr )
            	    // InternalEketal.g:7190:8: ruleOpInclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpInclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7206:4: ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    // InternalEketal.g:7207:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    {
            	    // InternalEketal.g:7207:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    // InternalEketal.g:7208:6: lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getRightOperandXBitwiseExclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_82);
            	    lv_rightOperand_3_0=ruleXBitwiseExclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseExclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseInclusiveOrExpression"


    // $ANTLR start "entryRuleOpInclusiveOr"
    // InternalEketal.g:7230:1: entryRuleOpInclusiveOr returns [String current=null] : iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF ;
    public final String entryRuleOpInclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpInclusiveOr = null;


        try {
            // InternalEketal.g:7230:53: (iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF )
            // InternalEketal.g:7231:2: iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpInclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpInclusiveOr=ruleOpInclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpInclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpInclusiveOr"


    // $ANTLR start "ruleOpInclusiveOr"
    // InternalEketal.g:7237:1: ruleOpInclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOpInclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7243:2: (kw= '|' )
            // InternalEketal.g:7244:2: kw= '|'
            {
            kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpInclusiveOrAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpInclusiveOr"


    // $ANTLR start "entryRuleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:7252:1: entryRuleXBitwiseExclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseExclusiveOrExpression = null;


        try {
            // InternalEketal.g:7252:70: (iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF )
            // InternalEketal.g:7253:2: iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseExclusiveOrExpression=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseExclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseExclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:7259:1: ruleXBitwiseExclusiveOrExpression returns [EObject current=null] : (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) ;
    public final EObject ruleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7265:2: ( (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) )
            // InternalEketal.g:7266:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            {
            // InternalEketal.g:7266:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            // InternalEketal.g:7267:3: this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_83);
            this_XBitwiseAndExpression_0=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7275:3: ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==85) ) {
                    int LA118_2 = input.LA(2);

                    if ( (synpred45_InternalEketal()) ) {
                        alt118=1;
                    }


                }


                switch (alt118) {
            	case 1 :
            	    // InternalEketal.g:7276:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    {
            	    // InternalEketal.g:7276:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) )
            	    // InternalEketal.g:7277:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:7287:5: ( () ( ( ruleOpExclusiveOr ) ) )
            	    // InternalEketal.g:7288:6: () ( ( ruleOpExclusiveOr ) )
            	    {
            	    // InternalEketal.g:7288:6: ()
            	    // InternalEketal.g:7289:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7295:6: ( ( ruleOpExclusiveOr ) )
            	    // InternalEketal.g:7296:7: ( ruleOpExclusiveOr )
            	    {
            	    // InternalEketal.g:7296:7: ( ruleOpExclusiveOr )
            	    // InternalEketal.g:7297:8: ruleOpExclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpExclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7313:4: ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    // InternalEketal.g:7314:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    {
            	    // InternalEketal.g:7314:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    // InternalEketal.g:7315:6: lv_rightOperand_3_0= ruleXBitwiseAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getRightOperandXBitwiseAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_rightOperand_3_0=ruleXBitwiseAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseExclusiveOrExpression"


    // $ANTLR start "entryRuleOpExclusiveOr"
    // InternalEketal.g:7337:1: entryRuleOpExclusiveOr returns [String current=null] : iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF ;
    public final String entryRuleOpExclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpExclusiveOr = null;


        try {
            // InternalEketal.g:7337:53: (iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF )
            // InternalEketal.g:7338:2: iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpExclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpExclusiveOr=ruleOpExclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpExclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpExclusiveOr"


    // $ANTLR start "ruleOpExclusiveOr"
    // InternalEketal.g:7344:1: ruleOpExclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '^' ;
    public final AntlrDatatypeRuleToken ruleOpExclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7350:2: (kw= '^' )
            // InternalEketal.g:7351:2: kw= '^'
            {
            kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpExclusiveOrAccess().getCircumflexAccentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpExclusiveOr"


    // $ANTLR start "entryRuleXBitwiseAndExpression"
    // InternalEketal.g:7359:1: entryRuleXBitwiseAndExpression returns [EObject current=null] : iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF ;
    public final EObject entryRuleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseAndExpression = null;


        try {
            // InternalEketal.g:7359:62: (iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF )
            // InternalEketal.g:7360:2: iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseAndExpression=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseAndExpression"


    // $ANTLR start "ruleXBitwiseAndExpression"
    // InternalEketal.g:7366:1: ruleXBitwiseAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7372:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalEketal.g:7373:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalEketal.g:7373:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalEketal.g:7374:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_84);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7382:3: ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==86) ) {
                    int LA119_2 = input.LA(2);

                    if ( (synpred46_InternalEketal()) ) {
                        alt119=1;
                    }


                }


                switch (alt119) {
            	case 1 :
            	    // InternalEketal.g:7383:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalEketal.g:7383:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) )
            	    // InternalEketal.g:7384:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) )
            	    {
            	    // InternalEketal.g:7394:5: ( () ( ( ruleOpBitwiseAnd ) ) )
            	    // InternalEketal.g:7395:6: () ( ( ruleOpBitwiseAnd ) )
            	    {
            	    // InternalEketal.g:7395:6: ()
            	    // InternalEketal.g:7396:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7402:6: ( ( ruleOpBitwiseAnd ) )
            	    // InternalEketal.g:7403:7: ( ruleOpBitwiseAnd )
            	    {
            	    // InternalEketal.g:7403:7: ( ruleOpBitwiseAnd )
            	    // InternalEketal.g:7404:8: ruleOpBitwiseAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpBitwiseAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7420:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalEketal.g:7421:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalEketal.g:7421:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalEketal.g:7422:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseAndExpression"


    // $ANTLR start "entryRuleOpBitwiseAnd"
    // InternalEketal.g:7444:1: entryRuleOpBitwiseAnd returns [String current=null] : iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF ;
    public final String entryRuleOpBitwiseAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpBitwiseAnd = null;


        try {
            // InternalEketal.g:7444:52: (iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF )
            // InternalEketal.g:7445:2: iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpBitwiseAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpBitwiseAnd=ruleOpBitwiseAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpBitwiseAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpBitwiseAnd"


    // $ANTLR start "ruleOpBitwiseAnd"
    // InternalEketal.g:7451:1: ruleOpBitwiseAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleOpBitwiseAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7457:2: (kw= '&' )
            // InternalEketal.g:7458:2: kw= '&'
            {
            kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpBitwiseAndAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpBitwiseAnd"


    // $ANTLR start "entryRuleOpUnary"
    // InternalEketal.g:7466:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalEketal.g:7466:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalEketal.g:7467:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalEketal.g:7473:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7479:2: ( (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) )
            // InternalEketal.g:7480:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            {
            // InternalEketal.g:7480:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            int alt120=4;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt120=1;
                }
                break;
            case 87:
                {
                alt120=2;
                }
                break;
            case 88:
                {
                alt120=3;
                }
                break;
            case 89:
                {
                alt120=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalEketal.g:7481:3: kw= '!'
                    {
                    kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7487:3: kw= '-'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:7493:3: kw= '+'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:7499:3: kw= '~'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:7508:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalEketal.g:7508:75: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalEketal.g:7509:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:7515:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:7521:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:7522:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:7522:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt123=2;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // InternalEketal.g:7523:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:7523:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:7524:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:7524:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:7525:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:7531:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:7532:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:7532:6: ()
                    // InternalEketal.g:7533:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:7545:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==RULE_ID||(LA122_0>=RULE_INT && LA122_0<=RULE_DECIMAL)||LA122_0==18||LA122_0==22||LA122_0==28||(LA122_0>=45 && LA122_0<=46)||LA122_0==66||(LA122_0>=87 && LA122_0<=90)||(LA122_0>=92 && LA122_0<=93)||(LA122_0>=95 && LA122_0<=100)) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalEketal.g:7546:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:7546:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:7547:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:7547:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:7548:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_80);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:7565:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop121:
                            do {
                                int alt121=2;
                                int LA121_0 = input.LA(1);

                                if ( (LA121_0==23) ) {
                                    alt121=1;
                                }


                                switch (alt121) {
                            	case 1 :
                            	    // InternalEketal.g:7566:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,23,FOLLOW_86); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:7570:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:7571:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:7571:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:7572:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop121;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7597:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalEketal.g:7609:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalEketal.g:7609:64: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalEketal.g:7610:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalEketal.g:7616:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:7622:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:7623:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:7623:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt126=2;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // InternalEketal.g:7624:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:7624:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:7625:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:7625:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:7626:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:7632:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:7633:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:7633:6: ()
                    // InternalEketal.g:7634:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:7646:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==RULE_ID||(LA125_0>=RULE_INT && LA125_0<=RULE_DECIMAL)||LA125_0==18||LA125_0==22||LA125_0==28||(LA125_0>=45 && LA125_0<=46)||LA125_0==66||(LA125_0>=87 && LA125_0<=90)||(LA125_0>=92 && LA125_0<=93)||(LA125_0>=95 && LA125_0<=100)) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // InternalEketal.g:7647:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:7647:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:7648:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:7648:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:7649:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_80);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:7666:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop124:
                            do {
                                int alt124=2;
                                int LA124_0 = input.LA(1);

                                if ( (LA124_0==23) ) {
                                    alt124=1;
                                }


                                switch (alt124) {
                            	case 1 :
                            	    // InternalEketal.g:7667:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,23,FOLLOW_86); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:7671:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:7672:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:7672:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:7673:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop124;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7698:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalEketal.g:7710:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalEketal.g:7710:52: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalEketal.g:7711:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalEketal.g:7717:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7723:2: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // InternalEketal.g:7724:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // InternalEketal.g:7724:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // InternalEketal.g:7725:3: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // InternalEketal.g:7725:3: ()
            // InternalEketal.g:7726:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,90,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
              		
            }
            // InternalEketal.g:7736:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:7737:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:7737:4: ( ruleQualifiedName )
            // InternalEketal.g:7738:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXAnnotationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_54);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:7752:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==22) && (synpred49_InternalEketal())) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalEketal.g:7753:4: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // InternalEketal.g:7753:4: ( ( '(' )=>otherlv_3= '(' )
                    // InternalEketal.g:7754:5: ( '(' )=>otherlv_3= '('
                    {
                    otherlv_3=(Token)match(input,22,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                      				
                    }

                    }

                    // InternalEketal.g:7760:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt128=3;
                    alt128 = dfa128.predict(input);
                    switch (alt128) {
                        case 1 :
                            // InternalEketal.g:7761:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalEketal.g:7761:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalEketal.g:7762:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalEketal.g:7762:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalEketal.g:7763:7: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalEketal.g:7772:7: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalEketal.g:7773:8: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              								}
                              								add(
                              									current,
                              									"elementValuePairs",
                              									lv_elementValuePairs_4_0,
                              									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalEketal.g:7790:6: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop127:
                            do {
                                int alt127=2;
                                int LA127_0 = input.LA(1);

                                if ( (LA127_0==23) ) {
                                    alt127=1;
                                }


                                switch (alt127) {
                            	case 1 :
                            	    // InternalEketal.g:7791:7: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	      						
                            	    }
                            	    // InternalEketal.g:7795:7: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalEketal.g:7796:8: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalEketal.g:7805:8: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalEketal.g:7806:9: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"elementValuePairs",
                            	      										lv_elementValuePairs_6_0,
                            	      										"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop127;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:7826:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalEketal.g:7826:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalEketal.g:7827:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalEketal.g:7827:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalEketal.g:7828:7: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_20);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_7_0,
                              								"jbase.Jbase.XAnnotationElementValueOrCommaList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalEketal.g:7855:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalEketal.g:7855:68: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalEketal.g:7856:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalEketal.g:7862:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7868:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalEketal.g:7869:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalEketal.g:7869:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalEketal.g:7870:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalEketal.g:7870:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // InternalEketal.g:7871:4: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // InternalEketal.g:7880:4: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // InternalEketal.g:7881:5: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // InternalEketal.g:7881:5: ( ( ruleValidID ) )
            // InternalEketal.g:7882:6: ( ruleValidID )
            {
            // InternalEketal.g:7882:6: ( ruleValidID )
            // InternalEketal.g:7883:7: ruleValidID
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0());
              						
            }
            pushFollow(FOLLOW_51);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_1=(Token)match(input,51,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
              				
            }

            }


            }

            // InternalEketal.g:7903:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalEketal.g:7904:4: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalEketal.g:7904:4: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalEketal.g:7905:5: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"jbase.Jbase.XAnnotationElementValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalEketal.g:7926:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalEketal.g:7926:64: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalEketal.g:7927:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalEketal.g:7933:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:7939:2: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:7940:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:7940:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==90) ) {
                alt130=1;
            }
            else if ( (LA130_0==RULE_ID||(LA130_0>=RULE_INT && LA130_0<=RULE_DECIMAL)||LA130_0==18||LA130_0==22||LA130_0==28||(LA130_0>=45 && LA130_0<=46)||LA130_0==66||(LA130_0>=87 && LA130_0<=89)||(LA130_0>=92 && LA130_0<=93)||(LA130_0>=95 && LA130_0<=100)) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalEketal.g:7941:3: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7950:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalEketal.g:7962:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalEketal.g:7962:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalEketal.g:7963:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalEketal.g:7969:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7975:2: (this_XAssignment_0= ruleXAssignment )
            // InternalEketal.g:7976:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalEketal.g:7987:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalEketal.g:7987:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalEketal.g:7988:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalEketal.g:7994:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8000:2: (kw= '=' )
            // InternalEketal.g:8001:2: kw= '='
            {
            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalEketal.g:8009:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalEketal.g:8009:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalEketal.g:8010:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalEketal.g:8016:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8022:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalEketal.g:8023:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalEketal.g:8023:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalEketal.g:8024:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_16);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8032:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==26) ) {
                    int LA131_2 = input.LA(2);

                    if ( (synpred53_InternalEketal()) ) {
                        alt131=1;
                    }


                }


                switch (alt131) {
            	case 1 :
            	    // InternalEketal.g:8033:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalEketal.g:8033:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalEketal.g:8034:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalEketal.g:8044:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalEketal.g:8045:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalEketal.g:8045:6: ()
            	    // InternalEketal.g:8046:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8052:6: ( ( ruleOpOr ) )
            	    // InternalEketal.g:8053:7: ( ruleOpOr )
            	    {
            	    // InternalEketal.g:8053:7: ( ruleOpOr )
            	    // InternalEketal.g:8054:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8070:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalEketal.g:8071:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalEketal.g:8071:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalEketal.g:8072:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalEketal.g:8094:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalEketal.g:8094:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalEketal.g:8095:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalEketal.g:8101:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8107:2: (kw= '||' )
            // InternalEketal.g:8108:2: kw= '||'
            {
            kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleOpAnd"
    // InternalEketal.g:8116:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalEketal.g:8116:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalEketal.g:8117:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalEketal.g:8123:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8129:2: (kw= '&&' )
            // InternalEketal.g:8130:2: kw= '&&'
            {
            kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalEketal.g:8138:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalEketal.g:8138:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalEketal.g:8139:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalEketal.g:8145:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8151:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalEketal.g:8152:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalEketal.g:8152:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalEketal.g:8153:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8161:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==79) ) {
                    int LA132_2 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt132=1;
                    }


                }
                else if ( (LA132_0==80) ) {
                    int LA132_3 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt132=1;
                    }


                }


                switch (alt132) {
            	case 1 :
            	    // InternalEketal.g:8162:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalEketal.g:8162:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalEketal.g:8163:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalEketal.g:8173:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalEketal.g:8174:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalEketal.g:8174:6: ()
            	    // InternalEketal.g:8175:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8181:6: ( ( ruleOpEquality ) )
            	    // InternalEketal.g:8182:7: ( ruleOpEquality )
            	    {
            	    // InternalEketal.g:8182:7: ( ruleOpEquality )
            	    // InternalEketal.g:8183:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8199:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalEketal.g:8200:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalEketal.g:8200:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalEketal.g:8201:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalEketal.g:8223:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalEketal.g:8223:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalEketal.g:8224:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalEketal.g:8230:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8236:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalEketal.g:8237:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalEketal.g:8237:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalEketal.g:8238:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_89);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8246:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop133:
            do {
                int alt133=3;
                switch ( input.LA(1) ) {
                case 63:
                    {
                    int LA133_2 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt133=2;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA133_3 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt133=2;
                    }


                    }
                    break;
                case 91:
                    {
                    int LA133_4 = input.LA(2);

                    if ( (synpred55_InternalEketal()) ) {
                        alt133=1;
                    }


                    }
                    break;
                case 65:
                    {
                    int LA133_5 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt133=2;
                    }


                    }
                    break;

                }

                switch (alt133) {
            	case 1 :
            	    // InternalEketal.g:8247:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalEketal.g:8247:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalEketal.g:8248:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalEketal.g:8248:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalEketal.g:8249:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalEketal.g:8255:6: ( () otherlv_2= 'instanceof' )
            	    // InternalEketal.g:8256:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalEketal.g:8256:7: ()
            	    // InternalEketal.g:8257:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,91,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:8269:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalEketal.g:8270:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalEketal.g:8270:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalEketal.g:8271:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"jbase.Jbase.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:8290:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalEketal.g:8290:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalEketal.g:8291:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalEketal.g:8291:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalEketal.g:8292:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalEketal.g:8302:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalEketal.g:8303:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalEketal.g:8303:7: ()
            	    // InternalEketal.g:8304:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalEketal.g:8310:7: ( ( ruleOpCompare ) )
            	    // InternalEketal.g:8311:8: ( ruleOpCompare )
            	    {
            	    // InternalEketal.g:8311:8: ( ruleOpCompare )
            	    // InternalEketal.g:8312:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8328:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalEketal.g:8329:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalEketal.g:8329:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalEketal.g:8330:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalEketal.g:8353:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalEketal.g:8353:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalEketal.g:8354:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalEketal.g:8360:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8366:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalEketal.g:8367:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalEketal.g:8367:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt134=4;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt134=1;
                }
                break;
            case 63:
                {
                int LA134_2 = input.LA(2);

                if ( (LA134_2==EOF||LA134_2==RULE_ID||(LA134_2>=RULE_INT && LA134_2<=RULE_DECIMAL)||LA134_2==18||LA134_2==22||LA134_2==28||(LA134_2>=45 && LA134_2<=46)||LA134_2==66||(LA134_2>=87 && LA134_2<=89)||(LA134_2>=92 && LA134_2<=93)||(LA134_2>=95 && LA134_2<=100)) ) {
                    alt134=4;
                }
                else if ( (LA134_2==51) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 2, input);

                    throw nvae;
                }
                }
                break;
            case 64:
                {
                alt134=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }

            switch (alt134) {
                case 1 :
                    // InternalEketal.g:8368:3: kw= '>='
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8374:3: (kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:8374:3: (kw= '<' kw= '=' )
                    // InternalEketal.g:8375:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,63,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:8387:3: kw= '>'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:8393:3: kw= '<'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalEketal.g:8402:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalEketal.g:8402:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalEketal.g:8403:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalEketal.g:8409:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8415:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalEketal.g:8416:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalEketal.g:8416:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalEketal.g:8417:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_90);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8425:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==64) ) {
                    int LA135_2 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt135=1;
                    }


                }
                else if ( (LA135_0==83) ) {
                    int LA135_3 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt135=1;
                    }


                }


                switch (alt135) {
            	case 1 :
            	    // InternalEketal.g:8426:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalEketal.g:8426:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalEketal.g:8427:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalEketal.g:8437:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalEketal.g:8438:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalEketal.g:8438:6: ()
            	    // InternalEketal.g:8439:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8445:6: ( ( ruleOpOther ) )
            	    // InternalEketal.g:8446:7: ( ruleOpOther )
            	    {
            	    // InternalEketal.g:8446:7: ( ruleOpOther )
            	    // InternalEketal.g:8447:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8463:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalEketal.g:8464:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalEketal.g:8464:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalEketal.g:8465:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalEketal.g:8487:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalEketal.g:8487:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalEketal.g:8488:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalEketal.g:8494:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8500:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalEketal.g:8501:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalEketal.g:8501:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalEketal.g:8502:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_91);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8510:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==88) ) {
                    int LA136_2 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt136=1;
                    }


                }
                else if ( (LA136_0==87) ) {
                    int LA136_3 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt136=1;
                    }


                }


                switch (alt136) {
            	case 1 :
            	    // InternalEketal.g:8511:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalEketal.g:8511:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalEketal.g:8512:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalEketal.g:8522:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalEketal.g:8523:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalEketal.g:8523:6: ()
            	    // InternalEketal.g:8524:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8530:6: ( ( ruleOpAdd ) )
            	    // InternalEketal.g:8531:7: ( ruleOpAdd )
            	    {
            	    // InternalEketal.g:8531:7: ( ruleOpAdd )
            	    // InternalEketal.g:8532:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8548:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalEketal.g:8549:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalEketal.g:8549:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalEketal.g:8550:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalEketal.g:8572:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalEketal.g:8572:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalEketal.g:8573:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalEketal.g:8579:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8585:2: ( (kw= '+' | kw= '-' ) )
            // InternalEketal.g:8586:2: (kw= '+' | kw= '-' )
            {
            // InternalEketal.g:8586:2: (kw= '+' | kw= '-' )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==88) ) {
                alt137=1;
            }
            else if ( (LA137_0==87) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalEketal.g:8587:3: kw= '+'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8593:3: kw= '-'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalEketal.g:8602:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalEketal.g:8602:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalEketal.g:8603:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalEketal.g:8609:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8615:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalEketal.g:8616:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalEketal.g:8616:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalEketal.g:8617:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_92);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8625:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop138:
            do {
                int alt138=2;
                switch ( input.LA(1) ) {
                case RULE_ANY:
                    {
                    int LA138_2 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt138=1;
                    }


                    }
                    break;
                case 81:
                    {
                    int LA138_3 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt138=1;
                    }


                    }
                    break;
                case 82:
                    {
                    int LA138_4 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt138=1;
                    }


                    }
                    break;

                }

                switch (alt138) {
            	case 1 :
            	    // InternalEketal.g:8626:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalEketal.g:8626:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalEketal.g:8627:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalEketal.g:8637:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalEketal.g:8638:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalEketal.g:8638:6: ()
            	    // InternalEketal.g:8639:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8645:6: ( ( ruleOpMulti ) )
            	    // InternalEketal.g:8646:7: ( ruleOpMulti )
            	    {
            	    // InternalEketal.g:8646:7: ( ruleOpMulti )
            	    // InternalEketal.g:8647:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8663:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalEketal.g:8664:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalEketal.g:8664:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalEketal.g:8665:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_92);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalEketal.g:8687:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalEketal.g:8687:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalEketal.g:8688:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalEketal.g:8694:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalEketal.g:8700:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalEketal.g:8701:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalEketal.g:8701:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==28||(LA139_0>=87 && LA139_0<=89)) ) {
                alt139=1;
            }
            else if ( (LA139_0==RULE_ID||(LA139_0>=RULE_INT && LA139_0<=RULE_DECIMAL)||LA139_0==18||LA139_0==22||(LA139_0>=45 && LA139_0<=46)||LA139_0==66||(LA139_0>=92 && LA139_0<=93)||(LA139_0>=95 && LA139_0<=100)) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalEketal.g:8702:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalEketal.g:8702:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalEketal.g:8703:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalEketal.g:8703:4: ()
                    // InternalEketal.g:8704:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalEketal.g:8710:4: ( ( ruleOpUnary ) )
                    // InternalEketal.g:8711:5: ( ruleOpUnary )
                    {
                    // InternalEketal.g:8711:5: ( ruleOpUnary )
                    // InternalEketal.g:8712:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8726:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalEketal.g:8727:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalEketal.g:8727:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalEketal.g:8728:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:8747:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalEketal.g:8759:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalEketal.g:8759:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalEketal.g:8760:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalEketal.g:8766:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8772:2: ( (kw= '++' | kw= '--' ) )
            // InternalEketal.g:8773:2: (kw= '++' | kw= '--' )
            {
            // InternalEketal.g:8773:2: (kw= '++' | kw= '--' )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==92) ) {
                alt140=1;
            }
            else if ( (LA140_0==93) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalEketal.g:8774:3: kw= '++'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8780:3: kw= '--'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalEketal.g:8789:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalEketal.g:8789:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalEketal.g:8790:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalEketal.g:8796:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8802:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalEketal.g:8803:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalEketal.g:8803:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalEketal.g:8804:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalEketal.g:8804:3: ()
            // InternalEketal.g:8805:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,94,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:8819:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==RULE_ID||(LA142_0>=RULE_INT && LA142_0<=RULE_DECIMAL)||LA142_0==18||LA142_0==22||LA142_0==28||(LA142_0>=45 && LA142_0<=46)||LA142_0==66||(LA142_0>=87 && LA142_0<=89)||(LA142_0>=92 && LA142_0<=93)||(LA142_0>=95 && LA142_0<=100)) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalEketal.g:8820:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8820:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8821:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8821:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8822:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8839:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop141:
                    do {
                        int alt141=2;
                        int LA141_0 = input.LA(1);

                        if ( (LA141_0==23) ) {
                            alt141=1;
                        }


                        switch (alt141) {
                    	case 1 :
                    	    // InternalEketal.g:8840:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8844:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:8845:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:8845:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:8846:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop141;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalEketal.g:8873:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalEketal.g:8873:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalEketal.g:8874:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalEketal.g:8880:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8886:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalEketal.g:8887:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalEketal.g:8887:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalEketal.g:8888:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalEketal.g:8888:3: ()
            // InternalEketal.g:8889:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,94,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,52,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:8903:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_ID||(LA144_0>=RULE_INT && LA144_0<=RULE_DECIMAL)||LA144_0==18||LA144_0==22||LA144_0==28||(LA144_0>=45 && LA144_0<=46)||LA144_0==66||(LA144_0>=87 && LA144_0<=89)||(LA144_0>=92 && LA144_0<=93)||(LA144_0>=95 && LA144_0<=100)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalEketal.g:8904:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8904:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8905:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8905:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8906:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8923:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==23) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalEketal.g:8924:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8928:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:8929:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:8929:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:8930:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_93);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalEketal.g:8957:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalEketal.g:8957:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalEketal.g:8958:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalEketal.g:8964:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8970:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalEketal.g:8971:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalEketal.g:8971:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalEketal.g:8972:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalEketal.g:8972:3: ()
            // InternalEketal.g:8973:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:8979:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==RULE_ID||(LA146_0>=RULE_INT && LA146_0<=RULE_DECIMAL)||LA146_0==18||LA146_0==22||LA146_0==28||(LA146_0>=45 && LA146_0<=47)||LA146_0==66||(LA146_0>=87 && LA146_0<=89)||(LA146_0>=92 && LA146_0<=93)||(LA146_0>=95 && LA146_0<=100)) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalEketal.g:8980:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalEketal.g:8980:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalEketal.g:8981:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalEketal.g:8981:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalEketal.g:8982:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:8999:4: (otherlv_2= ';' )?
            	    int alt145=2;
            	    int LA145_0 = input.LA(1);

            	    if ( (LA145_0==16) ) {
            	        alt145=1;
            	    }
            	    switch (alt145) {
            	        case 1 :
            	            // InternalEketal.g:9000:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,16,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalEketal.g:9010:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalEketal.g:9010:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalEketal.g:9011:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalEketal.g:9017:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9023:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalEketal.g:9024:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalEketal.g:9024:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalEketal.g:9025:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_20);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalEketal.g:9045:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalEketal.g:9045:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalEketal.g:9046:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalEketal.g:9052:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9058:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:9059:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:9059:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            int alt147=2;
            alt147 = dfa147.predict(input);
            switch (alt147) {
                case 1 :
                    // InternalEketal.g:9060:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    {
                    // InternalEketal.g:9060:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    // InternalEketal.g:9061:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XVariableDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9091:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalEketal.g:9103:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalEketal.g:9103:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalEketal.g:9104:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalEketal.g:9110:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9116:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalEketal.g:9117:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalEketal.g:9117:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalEketal.g:9118:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalEketal.g:9118:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_ID) ) {
                int LA148_1 = input.LA(2);

                if ( (LA148_1==RULE_ID||LA148_1==35||LA148_1==52||LA148_1==63) ) {
                    alt148=1;
                }
            }
            switch (alt148) {
                case 1 :
                    // InternalEketal.g:9119:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:9119:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalEketal.g:9120:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:9137:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:9138:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:9138:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:9139:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalEketal.g:9160:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalEketal.g:9160:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalEketal.g:9161:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalEketal.g:9167:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9173:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalEketal.g:9174:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalEketal.g:9174:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt149=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt149=1;
                }
                break;
            case 95:
                {
                alt149=2;
                }
                break;
            case 46:
                {
                alt149=3;
                }
                break;
            case 45:
                {
                alt149=4;
                }
                break;
            case 96:
                {
                alt149=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }

            switch (alt149) {
                case 1 :
                    // InternalEketal.g:9175:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9186:3: kw= 'extends'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:9192:3: kw= 'static'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:9198:3: kw= 'import'
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:9204:3: kw= 'extension'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalEketal.g:9213:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalEketal.g:9213:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalEketal.g:9214:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalEketal.g:9220:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9226:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalEketal.g:9227:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalEketal.g:9227:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_ID||(LA150_0>=45 && LA150_0<=46)||(LA150_0>=95 && LA150_0<=96)) ) {
                alt150=1;
            }
            else if ( (LA150_0==97) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalEketal.g:9228:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9239:3: kw= 'super'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalEketal.g:9248:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalEketal.g:9248:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalEketal.g:9249:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalEketal.g:9255:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalEketal.g:9261:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalEketal.g:9262:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalEketal.g:9262:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalEketal.g:9263:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalEketal.g:9263:3: ()
            // InternalEketal.g:9264:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:9270:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==98) ) {
                alt151=1;
            }
            else if ( (LA151_0==99) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalEketal.g:9271:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9276:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalEketal.g:9276:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalEketal.g:9277:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalEketal.g:9277:5: (lv_isTrue_2_0= 'true' )
                    // InternalEketal.g:9278:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalEketal.g:9295:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalEketal.g:9295:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalEketal.g:9296:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalEketal.g:9302:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:9308:2: ( ( () otherlv_1= 'null' ) )
            // InternalEketal.g:9309:2: ( () otherlv_1= 'null' )
            {
            // InternalEketal.g:9309:2: ( () otherlv_1= 'null' )
            // InternalEketal.g:9310:3: () otherlv_1= 'null'
            {
            // InternalEketal.g:9310:3: ()
            // InternalEketal.g:9311:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalEketal.g:9325:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalEketal.g:9325:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalEketal.g:9326:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalEketal.g:9332:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9338:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalEketal.g:9339:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalEketal.g:9339:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalEketal.g:9340:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalEketal.g:9340:3: ()
            // InternalEketal.g:9341:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:9347:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalEketal.g:9348:4: (lv_value_1_0= ruleNumber )
            {
            // InternalEketal.g:9348:4: (lv_value_1_0= ruleNumber )
            // InternalEketal.g:9349:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalEketal.g:9370:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalEketal.g:9370:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalEketal.g:9371:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalEketal.g:9377:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9383:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalEketal.g:9384:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalEketal.g:9384:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalEketal.g:9385:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalEketal.g:9385:3: ()
            // InternalEketal.g:9386:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalEketal.g:9396:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalEketal.g:9397:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalEketal.g:9397:4: (lv_expression_2_0= ruleXExpression )
            // InternalEketal.g:9398:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalEketal.g:9419:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalEketal.g:9419:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalEketal.g:9420:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalEketal.g:9426:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9432:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalEketal.g:9433:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalEketal.g:9433:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalEketal.g:9434:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalEketal.g:9434:3: ()
            // InternalEketal.g:9435:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,102,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalEketal.g:9445:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt152=2;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    // InternalEketal.g:9446:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:9447:4: (lv_expression_2_0= ruleXExpression )
                    // InternalEketal.g:9448:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalEketal.g:9469:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalEketal.g:9469:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalEketal.g:9470:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalEketal.g:9476:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:9482:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalEketal.g:9483:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalEketal.g:9483:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalEketal.g:9484:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:9494:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==35) ) {
                    int LA153_2 = input.LA(2);

                    if ( (LA153_2==RULE_ID) ) {
                        int LA153_3 = input.LA(3);

                        if ( (synpred62_InternalEketal()) ) {
                            alt153=1;
                        }


                    }


                }


                switch (alt153) {
            	case 1 :
            	    // InternalEketal.g:9495:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalEketal.g:9495:4: ( ( '.' )=>kw= '.' )
            	    // InternalEketal.g:9496:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_96);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalEketal.g:9518:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:9520:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalEketal.g:9521:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalEketal.g:9530:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:9537:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalEketal.g:9538:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalEketal.g:9538:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_HEX) ) {
                alt157=1;
            }
            else if ( (LA157_0==RULE_INT||LA157_0==RULE_DECIMAL) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalEketal.g:9539:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9547:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalEketal.g:9547:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalEketal.g:9548:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalEketal.g:9548:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==RULE_INT) ) {
                        alt154=1;
                    }
                    else if ( (LA154_0==RULE_DECIMAL) ) {
                        alt154=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 154, 0, input);

                        throw nvae;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalEketal.g:9549:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_96); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalEketal.g:9557:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_96); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalEketal.g:9565:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==35) ) {
                        int LA156_1 = input.LA(2);

                        if ( (LA156_1==RULE_INT||LA156_1==RULE_DECIMAL) ) {
                            alt156=1;
                        }
                    }
                    switch (alt156) {
                        case 1 :
                            // InternalEketal.g:9566:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,35,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalEketal.g:9571:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt155=2;
                            int LA155_0 = input.LA(1);

                            if ( (LA155_0==RULE_INT) ) {
                                alt155=1;
                            }
                            else if ( (LA155_0==RULE_DECIMAL) ) {
                                alt155=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 155, 0, input);

                                throw nvae;
                            }
                            switch (alt155) {
                                case 1 :
                                    // InternalEketal.g:9572:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalEketal.g:9580:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalEketal.g:9597:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalEketal.g:9597:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalEketal.g:9598:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalEketal.g:9604:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:9610:2: ( (kw= '[' kw= ']' ) )
            // InternalEketal.g:9611:2: (kw= '[' kw= ']' )
            {
            // InternalEketal.g:9611:2: (kw= '[' kw= ']' )
            // InternalEketal.g:9612:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,52,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalEketal.g:9626:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalEketal.g:9626:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalEketal.g:9627:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalEketal.g:9633:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9639:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalEketal.g:9640:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalEketal.g:9640:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalEketal.g:9641:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalEketal.g:9641:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:9642:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:9642:4: ( ruleQualifiedName )
            // InternalEketal.g:9643:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_98);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:9657:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // InternalEketal.g:9658:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalEketal.g:9658:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalEketal.g:9659:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,63,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalEketal.g:9665:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalEketal.g:9666:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalEketal.g:9666:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalEketal.g:9667:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:9684:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==23) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalEketal.g:9685:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_59); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:9689:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalEketal.g:9690:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalEketal.g:9690:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalEketal.g:9691:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_58);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,64,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalEketal.g:9713:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==35) ) {
                            int LA161_2 = input.LA(2);

                            if ( (LA161_2==RULE_ID) ) {
                                int LA161_3 = input.LA(3);

                                if ( (synpred64_InternalEketal()) ) {
                                    alt161=1;
                                }


                            }


                        }


                        switch (alt161) {
                    	case 1 :
                    	    // InternalEketal.g:9714:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalEketal.g:9714:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalEketal.g:9715:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalEketal.g:9721:6: ( () otherlv_7= '.' )
                    	    // InternalEketal.g:9722:7: () otherlv_7= '.'
                    	    {
                    	    // InternalEketal.g:9722:7: ()
                    	    // InternalEketal.g:9723:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:9735:5: ( ( ruleValidID ) )
                    	    // InternalEketal.g:9736:6: ( ruleValidID )
                    	    {
                    	    // InternalEketal.g:9736:6: ( ruleValidID )
                    	    // InternalEketal.g:9737:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:9751:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt160=2;
                    	    alt160 = dfa160.predict(input);
                    	    switch (alt160) {
                    	        case 1 :
                    	            // InternalEketal.g:9752:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalEketal.g:9752:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalEketal.g:9753:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,63,FOLLOW_59); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalEketal.g:9759:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalEketal.g:9760:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalEketal.g:9760:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalEketal.g:9761:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_58);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalEketal.g:9778:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop159:
                    	            do {
                    	                int alt159=2;
                    	                int LA159_0 = input.LA(1);

                    	                if ( (LA159_0==23) ) {
                    	                    alt159=1;
                    	                }


                    	                switch (alt159) {
                    	            	case 1 :
                    	            	    // InternalEketal.g:9779:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,23,FOLLOW_59); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalEketal.g:9783:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalEketal.g:9784:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalEketal.g:9784:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalEketal.g:9785:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_58);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop159;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,64,FOLLOW_96); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalEketal.g:9814:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalEketal.g:9814:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalEketal.g:9815:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalEketal.g:9821:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9827:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalEketal.g:9828:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalEketal.g:9828:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==RULE_ID) ) {
                alt163=1;
            }
            else if ( (LA163_0==54) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // InternalEketal.g:9829:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9838:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalEketal.g:9850:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalEketal.g:9850:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalEketal.g:9851:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalEketal.g:9857:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9863:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalEketal.g:9864:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalEketal.g:9864:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalEketal.g:9865:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalEketal.g:9865:3: ()
            // InternalEketal.g:9866:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,54,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalEketal.g:9876:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt166=3;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==95) ) {
                alt166=1;
            }
            else if ( (LA166_0==97) ) {
                alt166=2;
            }
            switch (alt166) {
                case 1 :
                    // InternalEketal.g:9877:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalEketal.g:9877:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalEketal.g:9878:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalEketal.g:9878:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalEketal.g:9879:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalEketal.g:9879:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalEketal.g:9880:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_84);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:9897:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop164:
                    do {
                        int alt164=2;
                        int LA164_0 = input.LA(1);

                        if ( (LA164_0==86) ) {
                            alt164=1;
                        }


                        switch (alt164) {
                    	case 1 :
                    	    // InternalEketal.g:9898:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalEketal.g:9898:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalEketal.g:9899:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_84);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop164;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9918:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalEketal.g:9918:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalEketal.g:9919:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalEketal.g:9919:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalEketal.g:9920:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalEketal.g:9920:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalEketal.g:9921:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_84);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:9938:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==86) ) {
                            alt165=1;
                        }


                        switch (alt165) {
                    	case 1 :
                    	    // InternalEketal.g:9939:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalEketal.g:9939:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalEketal.g:9940:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_84);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalEketal.g:9963:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalEketal.g:9963:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalEketal.g:9964:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalEketal.g:9970:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9976:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:9977:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:9977:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:9978:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,95,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalEketal.g:9982:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:9983:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:9983:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:9984:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalEketal.g:10005:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalEketal.g:10005:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalEketal.g:10006:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalEketal.g:10012:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10018:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10019:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10019:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10020:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:10024:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10025:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10025:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10026:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalEketal.g:10047:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalEketal.g:10047:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalEketal.g:10048:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalEketal.g:10054:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10060:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10061:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10061:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10062:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalEketal.g:10066:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10067:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10067:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10068:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalEketal.g:10089:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalEketal.g:10089:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalEketal.g:10090:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalEketal.g:10096:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10102:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10103:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10103:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10104:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:10108:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10109:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10109:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10110:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalEketal.g:10131:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalEketal.g:10131:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalEketal.g:10132:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalEketal.g:10138:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10144:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalEketal.g:10145:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalEketal.g:10145:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalEketal.g:10146:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_24);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,35,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalEketal.g:10170:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalEketal.g:10170:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalEketal.g:10171:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalEketal.g:10177:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalEketal.g:10183:2: (this_ID_0= RULE_ID )
            // InternalEketal.g:10184:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalEketal.g:10194:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalEketal.g:10194:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalEketal.g:10195:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalEketal.g:10201:1: ruleXImportSection returns [EObject current=null] : ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10207:2: ( ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalEketal.g:10208:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalEketal.g:10208:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt167=0;
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==45) && (synpred66_InternalEketal())) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalEketal.g:10209:3: ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalEketal.g:10210:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalEketal.g:10211:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"jbase.Jbase.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt167 >= 1 ) break loop167;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(167, input);
                        throw eee;
                }
                cnt167++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalEketal.g:10231:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalEketal.g:10231:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalEketal.g:10232:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalEketal.g:10238:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10244:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalEketal.g:10245:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalEketal.g:10245:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt168=0;
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==RULE_ID) ) {
                    int LA168_2 = input.LA(2);

                    if ( (LA168_2==35) ) {
                        alt168=1;
                    }


                }


                switch (alt168) {
            	case 1 :
            	    // InternalEketal.g:10246:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_24);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,35,FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt168 >= 1 ) break loop168;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(168, input);
                        throw eee;
                }
                cnt168++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleTPrefix"
    // InternalEketal.g:10265:1: ruleTPrefix returns [Enumerator current=null] : ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) ;
    public final Enumerator ruleTPrefix() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalEketal.g:10271:2: ( ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) )
            // InternalEketal.g:10272:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            {
            // InternalEketal.g:10272:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==103) ) {
                alt169=1;
            }
            else if ( (LA169_0==104) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // InternalEketal.g:10273:3: (enumLiteral_0= 'call' )
                    {
                    // InternalEketal.g:10273:3: (enumLiteral_0= 'call' )
                    // InternalEketal.g:10274:4: enumLiteral_0= 'call'
                    {
                    enumLiteral_0=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10281:3: (enumLiteral_1= 'execution' )
                    {
                    // InternalEketal.g:10281:3: (enumLiteral_1= 'execution' )
                    // InternalEketal.g:10282:4: enumLiteral_1= 'execution'
                    {
                    enumLiteral_1=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTPrefix"


    // $ANTLR start "ruleStateType"
    // InternalEketal.g:10292:1: ruleStateType returns [Enumerator current=null] : ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) ;
    public final Enumerator ruleStateType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:10298:2: ( ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) )
            // InternalEketal.g:10299:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            {
            // InternalEketal.g:10299:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            int alt170=3;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt170=1;
                }
                break;
            case 106:
                {
                alt170=2;
                }
                break;
            case 107:
                {
                alt170=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // InternalEketal.g:10300:3: (enumLiteral_0= 'state' )
                    {
                    // InternalEketal.g:10300:3: (enumLiteral_0= 'state' )
                    // InternalEketal.g:10301:4: enumLiteral_0= 'state'
                    {
                    enumLiteral_0=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10308:3: (enumLiteral_1= 'start' )
                    {
                    // InternalEketal.g:10308:3: (enumLiteral_1= 'start' )
                    // InternalEketal.g:10309:4: enumLiteral_1= 'start'
                    {
                    enumLiteral_1=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:10316:3: (enumLiteral_2= 'end' )
                    {
                    // InternalEketal.g:10316:3: (enumLiteral_2= 'end' )
                    // InternalEketal.g:10317:4: enumLiteral_2= 'end'
                    {
                    enumLiteral_2=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateType"


    // $ANTLR start "rulePos"
    // InternalEketal.g:10327:1: rulePos returns [Enumerator current=null] : ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) ;
    public final Enumerator rulePos() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:10333:2: ( ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) )
            // InternalEketal.g:10334:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            {
            // InternalEketal.g:10334:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            int alt171=3;
            switch ( input.LA(1) ) {
            case 108:
                {
                alt171=1;
                }
                break;
            case 109:
                {
                alt171=2;
                }
                break;
            case 110:
                {
                alt171=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }

            switch (alt171) {
                case 1 :
                    // InternalEketal.g:10335:3: (enumLiteral_0= 'before' )
                    {
                    // InternalEketal.g:10335:3: (enumLiteral_0= 'before' )
                    // InternalEketal.g:10336:4: enumLiteral_0= 'before'
                    {
                    enumLiteral_0=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10343:3: (enumLiteral_1= 'around' )
                    {
                    // InternalEketal.g:10343:3: (enumLiteral_1= 'around' )
                    // InternalEketal.g:10344:4: enumLiteral_1= 'around'
                    {
                    enumLiteral_1=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:10351:3: (enumLiteral_2= 'after' )
                    {
                    // InternalEketal.g:10351:3: (enumLiteral_2= 'after' )
                    // InternalEketal.g:10352:4: enumLiteral_2= 'after'
                    {
                    enumLiteral_2=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePos"

    // $ANTLR start synpred1_InternalEketal
    public final void synpred1_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:105:5: ( ';' )
        // InternalEketal.g:105:6: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEketal

    // $ANTLR start synpred2_InternalEketal
    public final void synpred2_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2661:4: ( ruleXBlockExpression )
        // InternalEketal.g:2661:5: ruleXBlockExpression
        {
        pushFollow(FOLLOW_2);
        ruleXBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEketal

    // $ANTLR start synpred4_InternalEketal
    public final void synpred4_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2814:4: ( ';' )
        // InternalEketal.g:2814:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalEketal

    // $ANTLR start synpred5_InternalEketal
    public final void synpred5_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2848:4: ( ( () ruleArrayBrackets ) )
        // InternalEketal.g:2848:5: ( () ruleArrayBrackets )
        {
        // InternalEketal.g:2848:5: ( () ruleArrayBrackets )
        // InternalEketal.g:2849:5: () ruleArrayBrackets
        {
        // InternalEketal.g:2849:5: ()
        // InternalEketal.g:2850:5: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalEketal

    // $ANTLR start synpred6_InternalEketal
    public final void synpred6_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3010:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )
        // InternalEketal.g:3010:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        {
        // InternalEketal.g:3010:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        // InternalEketal.g:3011:5: () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':'
        {
        // InternalEketal.g:3011:5: ()
        // InternalEketal.g:3012:5: 
        {
        }

        match(input,68,FOLLOW_10); if (state.failed) return ;
        match(input,22,FOLLOW_13); if (state.failed) return ;
        // InternalEketal.g:3015:5: ( ( ruleFullJvmFormalParameter ) )
        // InternalEketal.g:3016:6: ( ruleFullJvmFormalParameter )
        {
        // InternalEketal.g:3016:6: ( ruleFullJvmFormalParameter )
        // InternalEketal.g:3017:7: ruleFullJvmFormalParameter
        {
        pushFollow(FOLLOW_9);
        ruleFullJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalEketal

    // $ANTLR start synpred7_InternalEketal
    public final void synpred7_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3052:4: ( ( () 'try' ( ( '(' ) ) ) )
        // InternalEketal.g:3052:5: ( () 'try' ( ( '(' ) ) )
        {
        // InternalEketal.g:3052:5: ( () 'try' ( ( '(' ) ) )
        // InternalEketal.g:3053:5: () 'try' ( ( '(' ) )
        {
        // InternalEketal.g:3053:5: ()
        // InternalEketal.g:3054:5: 
        {
        }

        match(input,75,FOLLOW_10); if (state.failed) return ;
        // InternalEketal.g:3056:5: ( ( '(' ) )
        // InternalEketal.g:3057:6: ( '(' )
        {
        // InternalEketal.g:3057:6: ( '(' )
        // InternalEketal.g:3058:7: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalEketal

    // $ANTLR start synpred8_InternalEketal
    public final void synpred8_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3083:4: ( ( () 'synchronized' '(' ) )
        // InternalEketal.g:3083:5: ( () 'synchronized' '(' )
        {
        // InternalEketal.g:3083:5: ( () 'synchronized' '(' )
        // InternalEketal.g:3084:5: () 'synchronized' '('
        {
        // InternalEketal.g:3084:5: ()
        // InternalEketal.g:3085:5: 
        {
        }

        match(input,78,FOLLOW_10); if (state.failed) return ;
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalEketal

    // $ANTLR start synpred9_InternalEketal
    public final void synpred9_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3220:4: ( ';' )
        // InternalEketal.g:3220:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalEketal

    // $ANTLR start synpred11_InternalEketal
    public final void synpred11_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3502:5: ( ',' )
        // InternalEketal.g:3502:6: ','
        {
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalEketal

    // $ANTLR start synpred12_InternalEketal
    public final void synpred12_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3619:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )
        // InternalEketal.g:3619:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        {
        // InternalEketal.g:3619:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        // InternalEketal.g:3620:6: () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign
        {
        // InternalEketal.g:3620:6: ()
        // InternalEketal.g:3621:6: 
        {
        }

        // InternalEketal.g:3622:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:3623:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:3623:7: ( ruleFeatureCallID )
        // InternalEketal.g:3624:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_46);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,52,FOLLOW_43); if (state.failed) return ;
        // InternalEketal.g:3628:6: ( ( ruleXExpression ) )
        // InternalEketal.g:3629:7: ( ruleXExpression )
        {
        // InternalEketal.g:3629:7: ( ruleXExpression )
        // InternalEketal.g:3630:8: ruleXExpression
        {
        pushFollow(FOLLOW_47);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,53,FOLLOW_48); if (state.failed) return ;
        // InternalEketal.g:3634:6: ( '[' ( ( ruleXExpression ) ) ']' )*
        loop173:
        do {
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==52) ) {
                alt173=1;
            }


            switch (alt173) {
        	case 1 :
        	    // InternalEketal.g:3635:7: '[' ( ( ruleXExpression ) ) ']'
        	    {
        	    match(input,52,FOLLOW_43); if (state.failed) return ;
        	    // InternalEketal.g:3636:7: ( ( ruleXExpression ) )
        	    // InternalEketal.g:3637:8: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:3637:8: ( ruleXExpression )
        	    // InternalEketal.g:3638:9: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_47);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,53,FOLLOW_48); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop173;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalEketal

    // $ANTLR start synpred13_InternalEketal
    public final void synpred13_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3758:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:3758:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:3758:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:3759:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:3759:6: ()
        // InternalEketal.g:3760:6: 
        {
        }

        // InternalEketal.g:3761:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:3762:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:3762:7: ( ruleFeatureCallID )
        // InternalEketal.g:3763:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_48);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalEketal

    // $ANTLR start synpred14_InternalEketal
    public final void synpred14_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3835:7: ( ( () '?' ) )
        // InternalEketal.g:3835:8: ( () '?' )
        {
        // InternalEketal.g:3835:8: ( () '?' )
        // InternalEketal.g:3836:8: () '?'
        {
        // InternalEketal.g:3836:8: ()
        // InternalEketal.g:3837:8: 
        {
        }

        match(input,54,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalEketal

    // $ANTLR start synpred15_InternalEketal
    public final void synpred15_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3901:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalEketal.g:3901:8: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalEketal.g:3901:8: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalEketal.g:3902:8: () ( ( ruleOpMultiAssign ) )
        {
        // InternalEketal.g:3902:8: ()
        // InternalEketal.g:3903:8: 
        {
        }

        // InternalEketal.g:3904:8: ( ( ruleOpMultiAssign ) )
        // InternalEketal.g:3905:9: ( ruleOpMultiAssign )
        {
        // InternalEketal.g:3905:9: ( ruleOpMultiAssign )
        // InternalEketal.g:3906:10: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred15_InternalEketal

    // $ANTLR start synpred16_InternalEketal
    public final void synpred16_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4103:7: ( '[' )
        // InternalEketal.g:4103:8: '['
        {
        match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalEketal

    // $ANTLR start synpred17_InternalEketal
    public final void synpred17_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4091:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:4091:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:4091:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:4092:5: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:4092:5: ()
        // InternalEketal.g:4093:5: 
        {
        }

        match(input,52,FOLLOW_43); if (state.failed) return ;
        // InternalEketal.g:4095:5: ( ( ruleXExpression ) )
        // InternalEketal.g:4096:6: ( ruleXExpression )
        {
        // InternalEketal.g:4096:6: ( ruleXExpression )
        // InternalEketal.g:4097:7: ruleXExpression
        {
        pushFollow(FOLLOW_47);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,53,FOLLOW_39); if (state.failed) return ;
        // InternalEketal.g:4101:5: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop174:
        do {
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==52) && (synpred16_InternalEketal())) {
                alt174=1;
            }


            switch (alt174) {
        	case 1 :
        	    // InternalEketal.g:4102:6: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:4102:6: ( ( '[' )=> '[' )
        	    // InternalEketal.g:4103:7: ( '[' )=> '['
        	    {
        	    match(input,52,FOLLOW_43); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:4106:6: ( ( ruleXExpression ) )
        	    // InternalEketal.g:4107:7: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:4107:7: ( ruleXExpression )
        	    // InternalEketal.g:4108:8: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_47);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,53,FOLLOW_39); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop174;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred17_InternalEketal

    // $ANTLR start synpred18_InternalEketal
    public final void synpred18_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4152:7: ( '[' )
        // InternalEketal.g:4152:8: '['
        {
        match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_InternalEketal

    // $ANTLR start synpred19_InternalEketal
    public final void synpred19_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4228:5: ( ( '(' ) )
        // InternalEketal.g:4228:6: ( '(' )
        {
        // InternalEketal.g:4228:6: ( '(' )
        // InternalEketal.g:4229:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEketal

    // $ANTLR start synpred20_InternalEketal
    public final void synpred20_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4344:5: ( ( '<' ) )
        // InternalEketal.g:4344:6: ( '<' )
        {
        // InternalEketal.g:4344:6: ( '<' )
        // InternalEketal.g:4345:6: '<'
        {
        match(input,63,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalEketal

    // $ANTLR start synpred21_InternalEketal
    public final void synpred21_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4414:5: ( ( '(' ) )
        // InternalEketal.g:4414:6: ( '(' )
        {
        // InternalEketal.g:4414:6: ( '(' )
        // InternalEketal.g:4415:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEketal

    // $ANTLR start synpred23_InternalEketal
    public final void synpred23_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4592:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:4592:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:4592:6: ( ruleXJArrayDimension )
        // InternalEketal.g:4593:6: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalEketal

    // $ANTLR start synpred24_InternalEketal
    public final void synpred24_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4639:4: ( ( ruleXJArrayLiteral ) )
        // InternalEketal.g:4639:5: ( ruleXJArrayLiteral )
        {
        // InternalEketal.g:4639:5: ( ruleXJArrayLiteral )
        // InternalEketal.g:4640:5: ruleXJArrayLiteral
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalEketal

    // $ANTLR start synpred25_InternalEketal
    public final void synpred25_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4711:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )
        // InternalEketal.g:4711:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        {
        // InternalEketal.g:4711:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        // InternalEketal.g:4712:5: () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) )
        {
        // InternalEketal.g:4712:5: ()
        // InternalEketal.g:4713:5: 
        {
        }

        match(input,22,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:4715:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:4716:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:4716:6: ( ruleJvmTypeReference )
        // InternalEketal.g:4717:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_20);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,24,FOLLOW_43); if (state.failed) return ;
        // InternalEketal.g:4721:5: ( ( ruleXExpression ) )
        // InternalEketal.g:4722:6: ( ruleXExpression )
        {
        // InternalEketal.g:4722:6: ( ruleXExpression )
        // InternalEketal.g:4723:7: ruleXExpression
        {
        pushFollow(FOLLOW_2);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_InternalEketal

    // $ANTLR start synpred26_InternalEketal
    public final void synpred26_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4814:5: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4814:6: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4814:6: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4815:6: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4815:6: ()
        // InternalEketal.g:4816:6: 
        {
        }

        // InternalEketal.g:4817:6: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4818:7: ( ruleOpPostfix )
        {
        // InternalEketal.g:4818:7: ( ruleOpPostfix )
        // InternalEketal.g:4819:8: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_InternalEketal

    // $ANTLR start synpred27_InternalEketal
    public final void synpred27_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4882:6: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4882:7: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4882:7: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4883:7: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4883:7: ()
        // InternalEketal.g:4884:7: 
        {
        }

        // InternalEketal.g:4885:7: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4886:8: ( ruleOpPostfix )
        {
        // InternalEketal.g:4886:8: ( ruleOpPostfix )
        // InternalEketal.g:4887:9: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalEketal

    // $ANTLR start synpred28_InternalEketal
    public final void synpred28_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4932:9: ( '[' )
        // InternalEketal.g:4932:10: '['
        {
        match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_InternalEketal

    // $ANTLR start synpred29_InternalEketal
    public final void synpred29_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4920:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:4920:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:4920:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:4921:7: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:4921:7: ()
        // InternalEketal.g:4922:7: 
        {
        }

        match(input,52,FOLLOW_43); if (state.failed) return ;
        // InternalEketal.g:4924:7: ( ( ruleXExpression ) )
        // InternalEketal.g:4925:8: ( ruleXExpression )
        {
        // InternalEketal.g:4925:8: ( ruleXExpression )
        // InternalEketal.g:4926:9: ruleXExpression
        {
        pushFollow(FOLLOW_47);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,53,FOLLOW_39); if (state.failed) return ;
        // InternalEketal.g:4930:7: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop175:
        do {
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==52) && (synpred28_InternalEketal())) {
                alt175=1;
            }


            switch (alt175) {
        	case 1 :
        	    // InternalEketal.g:4931:8: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:4931:8: ( ( '[' )=> '[' )
        	    // InternalEketal.g:4932:9: ( '[' )=> '['
        	    {
        	    match(input,52,FOLLOW_43); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:4935:8: ( ( ruleXExpression ) )
        	    // InternalEketal.g:4936:9: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:4936:9: ( ruleXExpression )
        	    // InternalEketal.g:4937:10: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_47);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,53,FOLLOW_39); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop175;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred29_InternalEketal

    // $ANTLR start synpred30_InternalEketal
    public final void synpred30_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4981:9: ( '[' )
        // InternalEketal.g:4981:10: '['
        {
        match(input,52,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred30_InternalEketal

    // $ANTLR start synpred31_InternalEketal
    public final void synpred31_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5044:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )
        // InternalEketal.g:5044:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        {
        // InternalEketal.g:5044:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        // InternalEketal.g:5045:6: () ( ( ruleArrayBrackets ) )* '.' 'class'
        {
        // InternalEketal.g:5045:6: ()
        // InternalEketal.g:5046:6: 
        {
        }

        // InternalEketal.g:5047:6: ( ( ruleArrayBrackets ) )*
        loop176:
        do {
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==52) ) {
                alt176=1;
            }


            switch (alt176) {
        	case 1 :
        	    // InternalEketal.g:5048:7: ( ruleArrayBrackets )
        	    {
        	    // InternalEketal.g:5048:7: ( ruleArrayBrackets )
        	    // InternalEketal.g:5049:8: ruleArrayBrackets
        	    {
        	    pushFollow(FOLLOW_64);
        	    ruleArrayBrackets();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop176;
            }
        } while (true);

        match(input,35,FOLLOW_65); if (state.failed) return ;
        match(input,67,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalEketal

    // $ANTLR start synpred32_InternalEketal
    public final void synpred32_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5096:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:5096:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:5096:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:5097:7: () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:5097:7: ()
        // InternalEketal.g:5098:7: 
        {
        }

        match(input,35,FOLLOW_66); if (state.failed) return ;
        // InternalEketal.g:5100:7: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:5101:8: ( ruleFeatureCallID )
        {
        // InternalEketal.g:5101:8: ( ruleFeatureCallID )
        // InternalEketal.g:5102:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_48);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEketal

    // $ANTLR start synpred33_InternalEketal
    public final void synpred33_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5168:6: ( ( () '.' ) )
        // InternalEketal.g:5168:7: ( () '.' )
        {
        // InternalEketal.g:5168:7: ( () '.' )
        // InternalEketal.g:5169:7: () '.'
        {
        // InternalEketal.g:5169:7: ()
        // InternalEketal.g:5170:7: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEketal

    // $ANTLR start synpred34_InternalEketal
    public final void synpred34_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5206:7: ( ( '(' ) )
        // InternalEketal.g:5206:8: ( '(' )
        {
        // InternalEketal.g:5206:8: ( '(' )
        // InternalEketal.g:5207:8: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalEketal

    // $ANTLR start synpred36_InternalEketal
    public final void synpred36_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5646:5: ( 'else' )
        // InternalEketal.g:5646:6: 'else'
        {
        match(input,69,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalEketal

    // $ANTLR start synpred38_InternalEketal
    public final void synpred38_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6390:7: ( 'finally' )
        // InternalEketal.g:6390:8: 'finally'
        {
        match(input,76,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalEketal

    // $ANTLR start synpred41_InternalEketal
    public final void synpred41_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6630:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )
        // InternalEketal.g:6630:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        {
        // InternalEketal.g:6630:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        // InternalEketal.g:6631:5: () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) )
        {
        // InternalEketal.g:6631:5: ()
        // InternalEketal.g:6632:5: 
        {
        }

        match(input,66,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:6634:5: ( ( ruleQualifiedName ) )
        // InternalEketal.g:6635:6: ( ruleQualifiedName )
        {
        // InternalEketal.g:6635:6: ( ruleQualifiedName )
        // InternalEketal.g:6636:7: ruleQualifiedName
        {
        pushFollow(FOLLOW_46);
        ruleQualifiedName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:6639:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:6640:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:6640:6: ( ruleXJArrayDimension )
        // InternalEketal.g:6641:7: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalEketal

    // $ANTLR start synpred42_InternalEketal
    public final void synpred42_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7024:6: ( ( '>' '>' ) )
        // InternalEketal.g:7024:7: ( '>' '>' )
        {
        // InternalEketal.g:7024:7: ( '>' '>' )
        // InternalEketal.g:7025:7: '>' '>'
        {
        match(input,64,FOLLOW_81); if (state.failed) return ;
        match(input,64,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalEketal

    // $ANTLR start synpred43_InternalEketal
    public final void synpred43_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7085:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalEketal.g:7085:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalEketal.g:7085:6: ( () ( ( ruleOpAnd ) ) )
        // InternalEketal.g:7086:6: () ( ( ruleOpAnd ) )
        {
        // InternalEketal.g:7086:6: ()
        // InternalEketal.g:7087:6: 
        {
        }

        // InternalEketal.g:7088:6: ( ( ruleOpAnd ) )
        // InternalEketal.g:7089:7: ( ruleOpAnd )
        {
        // InternalEketal.g:7089:7: ( ruleOpAnd )
        // InternalEketal.g:7090:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred43_InternalEketal

    // $ANTLR start synpred44_InternalEketal
    public final void synpred44_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7170:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )
        // InternalEketal.g:7170:6: ( () ( ( ruleOpInclusiveOr ) ) )
        {
        // InternalEketal.g:7170:6: ( () ( ( ruleOpInclusiveOr ) ) )
        // InternalEketal.g:7171:6: () ( ( ruleOpInclusiveOr ) )
        {
        // InternalEketal.g:7171:6: ()
        // InternalEketal.g:7172:6: 
        {
        }

        // InternalEketal.g:7173:6: ( ( ruleOpInclusiveOr ) )
        // InternalEketal.g:7174:7: ( ruleOpInclusiveOr )
        {
        // InternalEketal.g:7174:7: ( ruleOpInclusiveOr )
        // InternalEketal.g:7175:8: ruleOpInclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpInclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalEketal

    // $ANTLR start synpred45_InternalEketal
    public final void synpred45_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7277:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )
        // InternalEketal.g:7277:6: ( () ( ( ruleOpExclusiveOr ) ) )
        {
        // InternalEketal.g:7277:6: ( () ( ( ruleOpExclusiveOr ) ) )
        // InternalEketal.g:7278:6: () ( ( ruleOpExclusiveOr ) )
        {
        // InternalEketal.g:7278:6: ()
        // InternalEketal.g:7279:6: 
        {
        }

        // InternalEketal.g:7280:6: ( ( ruleOpExclusiveOr ) )
        // InternalEketal.g:7281:7: ( ruleOpExclusiveOr )
        {
        // InternalEketal.g:7281:7: ( ruleOpExclusiveOr )
        // InternalEketal.g:7282:8: ruleOpExclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpExclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalEketal

    // $ANTLR start synpred46_InternalEketal
    public final void synpred46_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7384:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )
        // InternalEketal.g:7384:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        {
        // InternalEketal.g:7384:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        // InternalEketal.g:7385:6: () ( ( ruleOpBitwiseAnd ) )
        {
        // InternalEketal.g:7385:6: ()
        // InternalEketal.g:7386:6: 
        {
        }

        // InternalEketal.g:7387:6: ( ( ruleOpBitwiseAnd ) )
        // InternalEketal.g:7388:7: ( ruleOpBitwiseAnd )
        {
        // InternalEketal.g:7388:7: ( ruleOpBitwiseAnd )
        // InternalEketal.g:7389:8: ruleOpBitwiseAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpBitwiseAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalEketal

    // $ANTLR start synpred47_InternalEketal
    public final void synpred47_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7525:5: ( ( () '{' ) )
        // InternalEketal.g:7525:6: ( () '{' )
        {
        // InternalEketal.g:7525:6: ( () '{' )
        // InternalEketal.g:7526:6: () '{'
        {
        // InternalEketal.g:7526:6: ()
        // InternalEketal.g:7527:6: 
        {
        }

        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalEketal

    // $ANTLR start synpred48_InternalEketal
    public final void synpred48_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7626:5: ( ( () '{' ) )
        // InternalEketal.g:7626:6: ( () '{' )
        {
        // InternalEketal.g:7626:6: ( () '{' )
        // InternalEketal.g:7627:6: () '{'
        {
        // InternalEketal.g:7627:6: ()
        // InternalEketal.g:7628:6: 
        {
        }

        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalEketal

    // $ANTLR start synpred49_InternalEketal
    public final void synpred49_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7754:5: ( '(' )
        // InternalEketal.g:7754:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_InternalEketal

    // $ANTLR start synpred50_InternalEketal
    public final void synpred50_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7763:7: ( ( ( ( ruleValidID ) ) '=' ) )
        // InternalEketal.g:7763:8: ( ( ( ruleValidID ) ) '=' )
        {
        // InternalEketal.g:7763:8: ( ( ( ruleValidID ) ) '=' )
        // InternalEketal.g:7764:8: ( ( ruleValidID ) ) '='
        {
        // InternalEketal.g:7764:8: ( ( ruleValidID ) )
        // InternalEketal.g:7765:9: ( ruleValidID )
        {
        // InternalEketal.g:7765:9: ( ruleValidID )
        // InternalEketal.g:7766:10: ruleValidID
        {
        pushFollow(FOLLOW_51);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,51,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalEketal

    // $ANTLR start synpred53_InternalEketal
    public final void synpred53_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8034:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalEketal.g:8034:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalEketal.g:8034:6: ( () ( ( ruleOpOr ) ) )
        // InternalEketal.g:8035:6: () ( ( ruleOpOr ) )
        {
        // InternalEketal.g:8035:6: ()
        // InternalEketal.g:8036:6: 
        {
        }

        // InternalEketal.g:8037:6: ( ( ruleOpOr ) )
        // InternalEketal.g:8038:7: ( ruleOpOr )
        {
        // InternalEketal.g:8038:7: ( ruleOpOr )
        // InternalEketal.g:8039:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred53_InternalEketal

    // $ANTLR start synpred54_InternalEketal
    public final void synpred54_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8163:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalEketal.g:8163:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalEketal.g:8163:6: ( () ( ( ruleOpEquality ) ) )
        // InternalEketal.g:8164:6: () ( ( ruleOpEquality ) )
        {
        // InternalEketal.g:8164:6: ()
        // InternalEketal.g:8165:6: 
        {
        }

        // InternalEketal.g:8166:6: ( ( ruleOpEquality ) )
        // InternalEketal.g:8167:7: ( ruleOpEquality )
        {
        // InternalEketal.g:8167:7: ( ruleOpEquality )
        // InternalEketal.g:8168:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred54_InternalEketal

    // $ANTLR start synpred55_InternalEketal
    public final void synpred55_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8249:6: ( ( () 'instanceof' ) )
        // InternalEketal.g:8249:7: ( () 'instanceof' )
        {
        // InternalEketal.g:8249:7: ( () 'instanceof' )
        // InternalEketal.g:8250:7: () 'instanceof'
        {
        // InternalEketal.g:8250:7: ()
        // InternalEketal.g:8251:7: 
        {
        }

        match(input,91,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalEketal

    // $ANTLR start synpred56_InternalEketal
    public final void synpred56_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8292:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalEketal.g:8292:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalEketal.g:8292:7: ( () ( ( ruleOpCompare ) ) )
        // InternalEketal.g:8293:7: () ( ( ruleOpCompare ) )
        {
        // InternalEketal.g:8293:7: ()
        // InternalEketal.g:8294:7: 
        {
        }

        // InternalEketal.g:8295:7: ( ( ruleOpCompare ) )
        // InternalEketal.g:8296:8: ( ruleOpCompare )
        {
        // InternalEketal.g:8296:8: ( ruleOpCompare )
        // InternalEketal.g:8297:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalEketal

    // $ANTLR start synpred57_InternalEketal
    public final void synpred57_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8427:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalEketal.g:8427:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalEketal.g:8427:6: ( () ( ( ruleOpOther ) ) )
        // InternalEketal.g:8428:6: () ( ( ruleOpOther ) )
        {
        // InternalEketal.g:8428:6: ()
        // InternalEketal.g:8429:6: 
        {
        }

        // InternalEketal.g:8430:6: ( ( ruleOpOther ) )
        // InternalEketal.g:8431:7: ( ruleOpOther )
        {
        // InternalEketal.g:8431:7: ( ruleOpOther )
        // InternalEketal.g:8432:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred57_InternalEketal

    // $ANTLR start synpred58_InternalEketal
    public final void synpred58_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8512:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalEketal.g:8512:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalEketal.g:8512:6: ( () ( ( ruleOpAdd ) ) )
        // InternalEketal.g:8513:6: () ( ( ruleOpAdd ) )
        {
        // InternalEketal.g:8513:6: ()
        // InternalEketal.g:8514:6: 
        {
        }

        // InternalEketal.g:8515:6: ( ( ruleOpAdd ) )
        // InternalEketal.g:8516:7: ( ruleOpAdd )
        {
        // InternalEketal.g:8516:7: ( ruleOpAdd )
        // InternalEketal.g:8517:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred58_InternalEketal

    // $ANTLR start synpred59_InternalEketal
    public final void synpred59_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8627:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalEketal.g:8627:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalEketal.g:8627:6: ( () ( ( ruleOpMulti ) ) )
        // InternalEketal.g:8628:6: () ( ( ruleOpMulti ) )
        {
        // InternalEketal.g:8628:6: ()
        // InternalEketal.g:8629:6: 
        {
        }

        // InternalEketal.g:8630:6: ( ( ruleOpMulti ) )
        // InternalEketal.g:8631:7: ( ruleOpMulti )
        {
        // InternalEketal.g:8631:7: ( ruleOpMulti )
        // InternalEketal.g:8632:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalEketal

    // $ANTLR start synpred60_InternalEketal
    public final void synpred60_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9061:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalEketal.g:9061:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalEketal.g:9061:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalEketal.g:9062:5: () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalEketal.g:9062:5: ()
        // InternalEketal.g:9063:5: 
        {
        }

        // InternalEketal.g:9064:5: ( ( 'final' ) )?
        int alt177=2;
        int LA177_0 = input.LA(1);

        if ( (LA177_0==47) ) {
            alt177=1;
        }
        switch (alt177) {
            case 1 :
                // InternalEketal.g:9065:6: ( 'final' )
                {
                // InternalEketal.g:9065:6: ( 'final' )
                // InternalEketal.g:9066:7: 'final'
                {
                match(input,47,FOLLOW_3); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalEketal.g:9069:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:9070:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:9070:6: ( ruleJvmTypeReference )
        // InternalEketal.g:9071:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:9074:5: ( ( ruleValidID ) )
        // InternalEketal.g:9075:6: ( ruleValidID )
        {
        // InternalEketal.g:9075:6: ( ruleValidID )
        // InternalEketal.g:9076:7: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalEketal

    // $ANTLR start synpred61_InternalEketal
    public final void synpred61_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9446:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )
        // InternalEketal.g:
        {
        if ( input.LA(1)==RULE_ID||(input.LA(1)>=RULE_INT && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==18||input.LA(1)==22||input.LA(1)==28||(input.LA(1)>=45 && input.LA(1)<=46)||input.LA(1)==66||(input.LA(1)>=87 && input.LA(1)<=89)||(input.LA(1)>=92 && input.LA(1)<=93)||(input.LA(1)>=95 && input.LA(1)<=100) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred61_InternalEketal

    // $ANTLR start synpred62_InternalEketal
    public final void synpred62_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9496:5: ( '.' )
        // InternalEketal.g:9496:6: '.'
        {
        match(input,35,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalEketal

    // $ANTLR start synpred63_InternalEketal
    public final void synpred63_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9659:5: ( '<' )
        // InternalEketal.g:9659:6: '<'
        {
        match(input,63,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalEketal

    // $ANTLR start synpred64_InternalEketal
    public final void synpred64_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9715:6: ( ( () '.' ) )
        // InternalEketal.g:9715:7: ( () '.' )
        {
        // InternalEketal.g:9715:7: ( () '.' )
        // InternalEketal.g:9716:7: () '.'
        {
        // InternalEketal.g:9716:7: ()
        // InternalEketal.g:9717:7: 
        {
        }

        match(input,35,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalEketal

    // $ANTLR start synpred65_InternalEketal
    public final void synpred65_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9753:7: ( '<' )
        // InternalEketal.g:9753:8: '<'
        {
        match(input,63,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalEketal

    // $ANTLR start synpred66_InternalEketal
    public final void synpred66_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:10209:3: ( 'import' )
        // InternalEketal.g:10209:4: 'import'
        {
        match(input,45,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred66_InternalEketal

    // Delegated rules

    public final boolean synpred13_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA160 dfa160 = new DFA160(this);
    static final String dfa_1s = "\6\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\4\1\uffff\1\4";
    static final String dfa_3s = "\1\5\1\uffff\1\77\1\4\1\uffff\1\77";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\2\1\uffff";
    static final String dfa_5s = "\6\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\1",
            "",
            "\1\1\21\uffff\1\4\14\uffff\1\3\20\uffff\1\1\12\uffff\1\1",
            "\1\5",
            "",
            "\1\1\21\uffff\1\4\14\uffff\1\3\20\uffff\1\1\12\uffff\1\1"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1090:3: ( (lv_returndef_2_0= ruleTypeReturn ) )?";
        }
    }
    static final String dfa_7s = "\46\uffff";
    static final String dfa_8s = "\1\4\1\0\44\uffff";
    static final String dfa_9s = "\1\146\1\0\44\uffff";
    static final String dfa_10s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_11s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\1\uffff\5\2\5\uffff\1\2\1\uffff\1\1\3\uffff\1\2\5\uffff\1\2\2\uffff\1\2\15\uffff\3\2\1\uffff\2\2\17\uffff\1\2\1\uffff\1\2\1\uffff\3\2\2\uffff\1\2\2\uffff\1\2\10\uffff\3\2\2\uffff\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2659:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\7\uffff";
    static final String dfa_14s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_15s = "\1\4\1\uffff\1\20\1\4\1\uffff\1\20\1\uffff";
    static final String dfa_16s = "\1\56\1\uffff\1\55\1\5\1\uffff\1\55\1\uffff";
    static final String dfa_17s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_18s = "\7\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\51\uffff\1\1",
            "",
            "\2\4\21\uffff\1\3\11\uffff\1\4",
            "\1\5\1\6",
            "",
            "\2\4\21\uffff\1\3\11\uffff\1\4",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2706:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
    static final String dfa_20s = "\51\uffff";
    static final String dfa_21s = "\1\4\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_22s = "\1\146\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_23s = "\1\uffff\1\1\34\uffff\1\2\1\3\1\uffff\1\6\1\uffff\1\11\1\12\1\4\1\5\1\7\1\10";
    static final String dfa_24s = "\1\0\37\uffff\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\uffff\5\1\5\uffff\1\44\1\uffff\1\1\3\uffff\1\1\5\uffff\1\1\2\uffff\1\37\15\uffff\3\1\1\uffff\2\1\17\uffff\1\1\1\uffff\1\40\1\uffff\1\41\1\1\1\36\2\uffff\1\42\2\uffff\1\43\10\uffff\3\1\2\uffff\2\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "2981:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_0 = input.LA(1);

                         
                        int index53_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA53_0==RULE_ID||(LA53_0>=RULE_INT && LA53_0<=RULE_DECIMAL)||LA53_0==18||LA53_0==22||LA53_0==28||(LA53_0>=45 && LA53_0<=47)||(LA53_0>=49 && LA53_0<=50)||LA53_0==66||LA53_0==71||(LA53_0>=87 && LA53_0<=89)||(LA53_0>=92 && LA53_0<=93)||(LA53_0>=95 && LA53_0<=102)) ) {s = 1;}

                        else if ( (LA53_0==72) ) {s = 30;}

                        else if ( (LA53_0==31) ) {s = 31;}

                        else if ( (LA53_0==68) ) {s = 32;}

                        else if ( (LA53_0==70) ) {s = 33;}

                        else if ( (LA53_0==75) ) {s = 34;}

                        else if ( (LA53_0==78) && (synpred8_InternalEketal())) {s = 35;}

                        else if ( (LA53_0==16) ) {s = 36;}

                         
                        input.seek(index53_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_32 = input.LA(1);

                         
                        int index53_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index53_32);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_34 = input.LA(1);

                         
                        int index53_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalEketal()) ) {s = 39;}

                        else if ( (true) ) {s = 40;}

                         
                        input.seek(index53_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\32\uffff";
    static final String dfa_27s = "\1\4\5\0\24\uffff";
    static final String dfa_28s = "\1\144\5\0\24\uffff";
    static final String dfa_29s = "\6\uffff\1\3\21\uffff\1\1\1\2";
    static final String dfa_30s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\24\uffff}>";
    static final String[] dfa_31s = {
            "\1\1\1\uffff\5\6\7\uffff\1\6\3\uffff\1\6\5\uffff\1\6\20\uffff\1\4\1\3\23\uffff\1\6\24\uffff\3\6\2\uffff\2\6\1\uffff\1\2\1\5\4\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "3616:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_2 = input.LA(1);

                         
                        int index64_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA64_3 = input.LA(1);

                         
                        int index64_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA64_4 = input.LA(1);

                         
                        int index64_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA64_5 = input.LA(1);

                         
                        int index64_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index64_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\17\uffff";
    static final String dfa_33s = "\1\14\16\uffff";
    static final String dfa_34s = "\1\4\13\0\3\uffff";
    static final String dfa_35s = "\1\146\13\0\3\uffff";
    static final String dfa_36s = "\14\uffff\1\3\1\1\1\2";
    static final String dfa_37s = "\1\uffff\1\5\1\6\1\0\1\7\1\1\1\10\1\2\1\11\1\3\1\12\1\4\3\uffff}>";
    static final String[] dfa_38s = {
            "\7\14\5\uffff\1\14\1\uffff\3\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\14\3\uffff\1\14\11\uffff\3\14\1\uffff\2\14\1\uffff\2\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\14\1\uffff\10\14\2\uffff\14\14\1\uffff\3\14\1\uffff\10\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3832:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_3 = input.LA(1);

                         
                        int index63_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_5 = input.LA(1);

                         
                        int index63_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_7 = input.LA(1);

                         
                        int index63_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA63_9 = input.LA(1);

                         
                        int index63_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA63_11 = input.LA(1);

                         
                        int index63_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA63_1 = input.LA(1);

                         
                        int index63_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalEketal()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA63_4 = input.LA(1);

                         
                        int index63_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA63_6 = input.LA(1);

                         
                        int index63_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA63_8 = input.LA(1);

                         
                        int index63_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA63_10 = input.LA(1);

                         
                        int index63_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index63_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\111\uffff";
    static final String dfa_40s = "\1\2\110\uffff";
    static final String dfa_41s = "\1\4\1\0\107\uffff";
    static final String dfa_42s = "\1\146\1\0\107\uffff";
    static final String dfa_43s = "\2\uffff\1\2\105\uffff\1\1";
    static final String dfa_44s = "\1\uffff\1\0\107\uffff}>";
    static final String[] dfa_45s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\1\2\11\uffff\3\2\1\uffff\2\2\1\uffff\1\1\16\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4090:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\1\110\uffff";
    static final String dfa_47s = "\1\4\1\uffff\1\0\106\uffff";
    static final String dfa_48s = "\1\146\1\uffff\1\0\106\uffff";
    static final String dfa_49s = "\1\uffff\1\2\106\uffff\1\1";
    static final String dfa_50s = "\2\uffff\1\0\106\uffff}>";
    static final String[] dfa_51s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\11\uffff\3\1\1\uffff\2\1\1\uffff\1\2\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 4150:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_52s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\1\1\2\2\1\uffff\3\2\2\uffff\1\2\3\uffff\1\2\11\uffff\3\2\1\uffff\2\2\1\uffff\17\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "4226:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_53s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\1\2\11\uffff\3\2\1\uffff\2\2\1\uffff\13\2\1\1\3\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "4342:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "4412:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\4\2\uffff\1\0\105\uffff";
    static final String dfa_55s = "\1\146\2\uffff\1\0\105\uffff";
    static final String dfa_56s = "\3\uffff\1\0\105\uffff}>";
    static final String[] dfa_57s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\11\uffff\3\1\1\uffff\2\1\1\uffff\1\3\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_49;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 4590:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_3 = input.LA(1);

                         
                        int index80_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\7\2\5\uffff\1\2\1\uffff\1\1\2\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\1\2\11\uffff\3\2\1\uffff\2\2\1\uffff\17\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "4638:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\25\uffff";
    static final String dfa_60s = "\1\4\1\0\23\uffff";
    static final String dfa_61s = "\1\144\1\0\23\uffff";
    static final String dfa_62s = "\2\uffff\1\2\21\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_64s = {
            "\1\2\1\uffff\5\2\7\uffff\1\2\3\uffff\1\1\26\uffff\2\2\23\uffff\1\2\31\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "4709:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalEketal()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\1\4\35\uffff\1\0\52\uffff";
    static final String dfa_66s = "\1\146\35\uffff\1\0\52\uffff";
    static final String dfa_67s = "\36\uffff\1\0\52\uffff}>";
    static final String[] dfa_68s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\11\uffff\3\1\1\uffff\2\1\1\uffff\1\36\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_49;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "()* loopback of 4979:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_30 = input.LA(1);

                         
                        int index83_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index83_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "5204:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_1 = input.LA(1);

                         
                        int index89_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index89_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\24\uffff";
    static final String dfa_70s = "\1\4\1\0\22\uffff";
    static final String dfa_71s = "\1\144\1\0\22\uffff";
    static final String dfa_72s = "\2\uffff\1\3\5\uffff\1\4\10\uffff\1\5\1\1\1\2";
    static final String dfa_73s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_74s = {
            "\1\2\1\uffff\5\10\7\uffff\1\10\3\uffff\1\21\26\uffff\2\2\23\uffff\1\1\34\uffff\3\2\3\10",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "6628:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalEketal()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\4\1\0\30\uffff";
    static final String dfa_76s = "\1\144\1\0\30\uffff";
    static final String dfa_77s = "\2\uffff\1\2\26\uffff\1\1";
    static final String dfa_78s = "\1\uffff\1\0\30\uffff}>";
    static final String[] dfa_79s = {
            "\1\2\1\uffff\5\2\7\uffff\1\1\3\uffff\1\2\5\uffff\1\2\20\uffff\2\2\23\uffff\1\2\24\uffff\4\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "7522:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_1 = input.LA(1);

                         
                        int index123_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index123_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "7623:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_1 = input.LA(1);

                         
                        int index126_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index126_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\33\uffff";
    static final String dfa_81s = "\1\4\1\0\31\uffff";
    static final String dfa_82s = "\1\144\1\0\31\uffff";
    static final String dfa_83s = "\2\uffff\1\2\26\uffff\1\3\1\1";
    static final String dfa_84s = "\1\uffff\1\0\31\uffff}>";
    static final String[] dfa_85s = {
            "\1\1\1\uffff\5\2\7\uffff\1\2\3\uffff\1\2\1\uffff\1\31\3\uffff\1\2\20\uffff\2\2\23\uffff\1\2\24\uffff\4\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "7760:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalEketal()) ) {s = 26;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\31\uffff";
    static final String dfa_87s = "\1\4\1\uffff\1\0\26\uffff";
    static final String dfa_88s = "\1\144\1\uffff\1\0\26\uffff";
    static final String dfa_89s = "\1\uffff\1\1\1\uffff\1\2\25\uffff";
    static final String dfa_90s = "\1\0\1\uffff\1\1\26\uffff}>";
    static final String[] dfa_91s = {
            "\1\2\1\uffff\5\3\7\uffff\1\3\3\uffff\1\3\5\uffff\1\3\20\uffff\2\3\1\1\22\uffff\1\3\24\uffff\3\3\2\uffff\2\3\1\uffff\6\3",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "9059:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_0 = input.LA(1);

                         
                        int index147_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_0==47) && (synpred60_InternalEketal())) {s = 1;}

                        else if ( (LA147_0==RULE_ID) ) {s = 2;}

                        else if ( ((LA147_0>=RULE_INT && LA147_0<=RULE_DECIMAL)||LA147_0==18||LA147_0==22||LA147_0==28||(LA147_0>=45 && LA147_0<=46)||LA147_0==66||(LA147_0>=87 && LA147_0<=89)||(LA147_0>=92 && LA147_0<=93)||(LA147_0>=95 && LA147_0<=100)) ) {s = 3;}

                         
                        input.seek(index147_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalEketal()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\53\uffff";
    static final String dfa_93s = "\1\30\52\uffff";
    static final String dfa_94s = "\1\4\27\0\23\uffff";
    static final String dfa_95s = "\1\146\27\0\23\uffff";
    static final String dfa_96s = "\30\uffff\1\2\21\uffff\1\1";
    static final String dfa_97s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\23\uffff}>";
    static final String[] dfa_98s = {
            "\1\1\1\uffff\1\22\1\25\1\26\1\21\1\23\5\uffff\1\30\1\uffff\1\27\1\30\2\uffff\1\12\5\uffff\1\6\2\uffff\1\30\15\uffff\1\4\1\3\1\30\1\uffff\2\30\17\uffff\1\15\1\uffff\10\30\2\uffff\1\30\10\uffff\1\7\1\10\1\11\2\uffff\1\13\1\14\1\uffff\1\2\1\5\1\16\1\17\1\20\1\24\2\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "9445:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA152_1 = input.LA(1);

                         
                        int index152_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA152_2 = input.LA(1);

                         
                        int index152_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA152_3 = input.LA(1);

                         
                        int index152_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA152_4 = input.LA(1);

                         
                        int index152_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA152_5 = input.LA(1);

                         
                        int index152_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA152_6 = input.LA(1);

                         
                        int index152_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA152_7 = input.LA(1);

                         
                        int index152_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA152_8 = input.LA(1);

                         
                        int index152_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA152_9 = input.LA(1);

                         
                        int index152_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA152_10 = input.LA(1);

                         
                        int index152_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA152_11 = input.LA(1);

                         
                        int index152_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA152_12 = input.LA(1);

                         
                        int index152_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA152_13 = input.LA(1);

                         
                        int index152_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA152_14 = input.LA(1);

                         
                        int index152_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA152_15 = input.LA(1);

                         
                        int index152_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA152_16 = input.LA(1);

                         
                        int index152_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA152_17 = input.LA(1);

                         
                        int index152_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA152_18 = input.LA(1);

                         
                        int index152_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA152_19 = input.LA(1);

                         
                        int index152_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA152_20 = input.LA(1);

                         
                        int index152_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA152_21 = input.LA(1);

                         
                        int index152_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA152_22 = input.LA(1);

                         
                        int index152_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA152_23 = input.LA(1);

                         
                        int index152_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index152_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 152, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\121\uffff";
    static final String dfa_100s = "\1\2\120\uffff";
    static final String dfa_101s = "\1\4\1\0\117\uffff";
    static final String dfa_102s = "\1\146\1\0\117\uffff";
    static final String dfa_103s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_104s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_105s = {
            "\7\2\5\uffff\1\2\1\uffff\13\2\2\uffff\2\2\2\uffff\2\2\1\uffff\1\2\4\uffff\10\2\1\uffff\13\2\1\1\3\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_99;
            this.eof = dfa_100;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "9657:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalEketal()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = dfa_99;
            this.eof = dfa_100;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "9751:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA160_1 = input.LA(1);

                         
                        int index160_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalEketal()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index160_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 160, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000200000030002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000200000020002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000185102280010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000800001000010L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000800000000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000140000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000000F0410000L,0x0000018000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x00000000F0400000L,0x0000018000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x00000000E0400000L,0x0000018000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000600080070L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000080010L,0x00000E0000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000110000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000004010000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000070010400010L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000400010L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000700000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0006E000905D07D0L,0x0000007FB38049D4L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0008000000800002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000E000104407D0L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0018000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xFFC0000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000E000114407D0L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x8000000000400002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0040000000000010L,0x0000000000000001L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000001L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0040000000000010L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0020E000104407D0L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x00100000000407C2L,0x0000001C00000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0010000000000002L,0x0000000030000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0010000800000002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0010000800000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000600000000010L,0x0000000180000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000600000000010L,0x0000000380000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0010000800400002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0006E000905507D0L,0x0000007FB38049D4L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000E000104507D0L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000810000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000600L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0006E000905507D2L,0x0000007FB38049D4L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000002L,0x0000000000003000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000003000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000E000104C07D0L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000880000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000E000104C07D0L,0x0000001FB7800004L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000E000104407D0L,0x0000001FB7800004L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000E000114407D0L,0x0000001FB7800004L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000000018000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x8000000000000002L,0x0000000008000003L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080001L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000000001800000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000022L,0x0000000000060000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0020000000800000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000E000104507D2L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000E000104407D2L,0x0000001FB3800004L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000440L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x8000000800000002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000012L});

}
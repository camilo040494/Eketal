package co.edu.icesi.eketal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.icesi.eketal.services.EketalGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEketalParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_ANY", "RULE_CHARACTER", "RULE_STRING", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "';'", "'eventclass'", "'{'", "'}'", "':'", "'op'", "'('", "','", "')'", "'event'", "'||'", "'&&'", "'!'", "'host'", "'on'", "'if'", "'group'", "'jphost'", "'localhost'", "'automaton'", "'->'", "'syncex'", "'reaction'", "'.'", "'import'", "'static'", "'final'", "'...'", "'continue'", "'break'", "'='", "'['", "']'", "'?'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<'", "'>'", "'>='", "'new'", "'class'", "'for'", "'else'", "'while'", "'do'", "'switch'", "'default'", "'case'", "'try'", "'finally'", "'catch'", "'synchronized'", "'=='", "'!='", "'/'", "'%'", "'<<'", "'|'", "'^'", "'&'", "'-'", "'+'", "'~'", "'@'", "'instanceof'", "'++'", "'--'", "'#'", "'extends'", "'extension'", "'super'", "'false'", "'true'", "'null'", "'throw'", "'return'", "'call'", "'execution'", "'state'", "'start'", "'end'", "'before'", "'around'", "'after'"
    };
    public static final int RULE_HEX=8;
    public static final int T__50=50;
    public static final int RULE_CHARACTER=6;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_ANY=5;
    public static final int RULE_INT=9;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=10;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=7;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalEketalParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEketalParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEketalParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEketal.g"; }



     	private EketalGrammarAccess grammarAccess;

        public InternalEketalParser(TokenStream input, EketalGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected EketalGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalEketal.g:65:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalEketal.g:65:46: (iv_ruleModel= ruleModel EOF )
            // InternalEketal.g:66:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalEketal.g:72:1: ruleModel returns [EObject current=null] : ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_typeDeclaration_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:78:2: ( ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) )
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            {
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            {
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==15) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalEketal.g:81:4: otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )?
                    {
                    otherlv_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:85:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalEketal.g:87:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:104:4: ( ( ';' )=>otherlv_2= ';' )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==16) && (synpred1_InternalEketal())) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalEketal.g:105:5: ( ';' )=>otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getModelAccess().getSemicolonKeyword_0_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalEketal.g:112:3: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==40) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    // InternalEketal.g:114:5: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getImportSectionXImportSectionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_3_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:131:3: ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    {
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    // InternalEketal.g:133:5: lv_typeDeclaration_4_0= ruleEventClass
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getTypeDeclarationEventClassParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDeclaration_4_0=ruleEventClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"typeDeclaration",
                      						lv_typeDeclaration_4_0,
                      						"co.edu.icesi.eketal.Eketal.EventClass");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleEventClass"
    // InternalEketal.g:154:1: entryRuleEventClass returns [EObject current=null] : iv_ruleEventClass= ruleEventClass EOF ;
    public final EObject entryRuleEventClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventClass = null;


        try {
            // InternalEketal.g:154:51: (iv_ruleEventClass= ruleEventClass EOF )
            // InternalEketal.g:155:2: iv_ruleEventClass= ruleEventClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventClass=ruleEventClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventClass"


    // $ANTLR start "ruleEventClass"
    // InternalEketal.g:161:1: ruleEventClass returns [EObject current=null] : (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' ) ;
    public final EObject ruleEventClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declarations_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:167:2: ( (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' ) )
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' )
            {
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}' )
            // InternalEketal.g:169:3: otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_declarations_3_0= ruleDecl ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEventClassAccess().getEventclassKeyword_0());
              		
            }
            // InternalEketal.g:173:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:175:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEventClassAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEventClassRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEventClassAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:195:3: ( (lv_declarations_3_0= ruleDecl ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ID||LA5_0==21||LA5_0==25||LA5_0==32||LA5_0==35||(LA5_0>=37 && LA5_0<=38)) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalEketal.g:196:4: (lv_declarations_3_0= ruleDecl )
            	    {
            	    // InternalEketal.g:196:4: (lv_declarations_3_0= ruleDecl )
            	    // InternalEketal.g:197:5: lv_declarations_3_0= ruleDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEventClassAccess().getDeclarationsDeclParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_8);
            	    lv_declarations_3_0=ruleDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEventClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"co.edu.icesi.eketal.Eketal.Decl");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEventClassAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventClass"


    // $ANTLR start "entryRuleDecl"
    // InternalEketal.g:222:1: entryRuleDecl returns [EObject current=null] : iv_ruleDecl= ruleDecl EOF ;
    public final EObject entryRuleDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecl = null;


        try {
            // InternalEketal.g:222:45: (iv_ruleDecl= ruleDecl EOF )
            // InternalEketal.g:223:2: iv_ruleDecl= ruleDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecl=ruleDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalEketal.g:229:1: ruleDecl returns [EObject current=null] : (this_Automaton_0= ruleAutomaton | this_Rc_1= ruleRc | this_MSig_2= ruleMSig | this_JVarD_3= ruleJVarD | this_Group_4= ruleGroup | this_EvDecl_5= ruleEvDecl ) ;
    public final EObject ruleDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Automaton_0 = null;

        EObject this_Rc_1 = null;

        EObject this_MSig_2 = null;

        EObject this_JVarD_3 = null;

        EObject this_Group_4 = null;

        EObject this_EvDecl_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:235:2: ( (this_Automaton_0= ruleAutomaton | this_Rc_1= ruleRc | this_MSig_2= ruleMSig | this_JVarD_3= ruleJVarD | this_Group_4= ruleGroup | this_EvDecl_5= ruleEvDecl ) )
            // InternalEketal.g:236:2: (this_Automaton_0= ruleAutomaton | this_Rc_1= ruleRc | this_MSig_2= ruleMSig | this_JVarD_3= ruleJVarD | this_Group_4= ruleGroup | this_EvDecl_5= ruleEvDecl )
            {
            // InternalEketal.g:236:2: (this_Automaton_0= ruleAutomaton | this_Rc_1= ruleRc | this_MSig_2= ruleMSig | this_JVarD_3= ruleJVarD | this_Group_4= ruleGroup | this_EvDecl_5= ruleEvDecl )
            int alt6=6;
            switch ( input.LA(1) ) {
            case 35:
                {
                alt6=1;
                }
                break;
            case 37:
            case 38:
                {
                alt6=2;
                }
                break;
            case 21:
                {
                alt6=3;
                }
                break;
            case RULE_ID:
                {
                alt6=4;
                }
                break;
            case 32:
                {
                alt6=5;
                }
                break;
            case 25:
                {
                alt6=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalEketal.g:237:3: this_Automaton_0= ruleAutomaton
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getAutomatonParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Automaton_0=ruleAutomaton();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Automaton_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:246:3: this_Rc_1= ruleRc
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getRcParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Rc_1=ruleRc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Rc_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:255:3: this_MSig_2= ruleMSig
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getMSigParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MSig_2=ruleMSig();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MSig_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:264:3: this_JVarD_3= ruleJVarD
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getJVarDParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JVarD_3=ruleJVarD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JVarD_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:273:3: this_Group_4= ruleGroup
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getGroupParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Group_4=ruleGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Group_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:282:3: this_EvDecl_5= ruleEvDecl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getEvDeclParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EvDecl_5=ruleEvDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EvDecl_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleJVarD"
    // InternalEketal.g:294:1: entryRuleJVarD returns [EObject current=null] : iv_ruleJVarD= ruleJVarD EOF ;
    public final EObject entryRuleJVarD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJVarD = null;


        try {
            // InternalEketal.g:294:46: (iv_ruleJVarD= ruleJVarD EOF )
            // InternalEketal.g:295:2: iv_ruleJVarD= ruleJVarD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJVarDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJVarD=ruleJVarD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJVarD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJVarD"


    // $ANTLR start "ruleJVarD"
    // InternalEketal.g:301:1: ruleJVarD returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJVarD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:307:2: ( ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:308:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:308:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:309:3: ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) )
            {
            // InternalEketal.g:309:3: ( (lv_name_0_0= ruleValidID ) )
            // InternalEketal.g:310:4: (lv_name_0_0= ruleValidID )
            {
            // InternalEketal.g:310:4: (lv_name_0_0= ruleValidID )
            // InternalEketal.g:311:5: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getNameValidIDParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJVarDAccess().getColonKeyword_1());
              		
            }
            // InternalEketal.g:332:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:333:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:333:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:334:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJVarD"


    // $ANTLR start "entryRuleMSig"
    // InternalEketal.g:355:1: entryRuleMSig returns [EObject current=null] : iv_ruleMSig= ruleMSig EOF ;
    public final EObject entryRuleMSig() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMSig = null;


        try {
            // InternalEketal.g:355:45: (iv_ruleMSig= ruleMSig EOF )
            // InternalEketal.g:356:2: iv_ruleMSig= ruleMSig EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMSigRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMSig=ruleMSig();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMSig; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMSig"


    // $ANTLR start "ruleMSig"
    // InternalEketal.g:362:1: ruleMSig returns [EObject current=null] : (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleMSig() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_body_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:368:2: ( (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:369:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:369:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:370:3: otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) )
            {
            otherlv_0=(Token)match(input,21,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMSigAccess().getOpKeyword_0());
              		
            }
            // InternalEketal.g:374:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:375:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:375:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:376:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMSigAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:397:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_ID||LA8_0==42) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalEketal.g:398:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:398:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:399:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:399:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:400:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:417:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==23) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalEketal.g:418:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getMSigAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:422:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:423:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:423:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:424:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMSigRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMSigAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:447:3: (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==20) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalEketal.g:448:4: otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,20,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getMSigAccess().getColonKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:452:4: ( (lv_type_8_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:453:5: (lv_type_8_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:453:5: (lv_type_8_0= ruleJvmTypeReference )
                    // InternalEketal.g:454:6: lv_type_8_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getTypeJvmTypeReferenceParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_type_8_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_8_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:472:3: ( (lv_body_9_0= ruleXBlockExpression ) )
            // InternalEketal.g:473:4: (lv_body_9_0= ruleXBlockExpression )
            {
            // InternalEketal.g:473:4: (lv_body_9_0= ruleXBlockExpression )
            // InternalEketal.g:474:5: lv_body_9_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_9_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMSig"


    // $ANTLR start "entryRuleEvDecl"
    // InternalEketal.g:495:1: entryRuleEvDecl returns [EObject current=null] : iv_ruleEvDecl= ruleEvDecl EOF ;
    public final EObject entryRuleEvDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvDecl = null;


        try {
            // InternalEketal.g:495:47: (iv_ruleEvDecl= ruleEvDecl EOF )
            // InternalEketal.g:496:2: iv_ruleEvDecl= ruleEvDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEvDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvDecl=ruleEvDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvDecl"


    // $ANTLR start "ruleEvDecl"
    // InternalEketal.g:502:1: ruleEvDecl returns [EObject current=null] : (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) ;
    public final EObject ruleEvDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_eventos_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:508:2: ( (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) )
            // InternalEketal.g:509:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            {
            // InternalEketal.g:509:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            // InternalEketal.g:510:3: otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEvDeclAccess().getEventKeyword_0());
              		
            }
            // InternalEketal.g:514:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:515:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:515:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:516:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEvDeclAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEvDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEvDeclAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:536:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID||LA11_0==42) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalEketal.g:537:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:537:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:538:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:538:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:539:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEvDeclRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:556:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==23) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalEketal.g:557:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getEvDeclAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:561:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:562:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:562:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:563:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEvDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEvDeclAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,20,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEvDeclAccess().getColonKeyword_5());
              		
            }
            // InternalEketal.g:590:3: ( (lv_eventos_8_0= ruleOrEvent ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==22||(LA12_0>=28 && LA12_0<=31)||(LA12_0>=98 && LA12_0<=99)) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalEketal.g:591:4: (lv_eventos_8_0= ruleOrEvent )
            	    {
            	    // InternalEketal.g:591:4: (lv_eventos_8_0= ruleOrEvent )
            	    // InternalEketal.g:592:5: lv_eventos_8_0= ruleOrEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEvDeclAccess().getEventosOrEventParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_eventos_8_0=ruleOrEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEvDeclRule());
            	      					}
            	      					add(
            	      						current,
            	      						"eventos",
            	      						lv_eventos_8_0,
            	      						"co.edu.icesi.eketal.Eketal.OrEvent");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            otherlv_9=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEvDeclAccess().getSemicolonKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvDecl"


    // $ANTLR start "entryRuleOrEvent"
    // InternalEketal.g:617:1: entryRuleOrEvent returns [EObject current=null] : iv_ruleOrEvent= ruleOrEvent EOF ;
    public final EObject entryRuleOrEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrEvent = null;


        try {
            // InternalEketal.g:617:48: (iv_ruleOrEvent= ruleOrEvent EOF )
            // InternalEketal.g:618:2: iv_ruleOrEvent= ruleOrEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrEvent=ruleOrEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrEvent"


    // $ANTLR start "ruleOrEvent"
    // InternalEketal.g:624:1: ruleOrEvent returns [EObject current=null] : (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) ;
    public final EObject ruleOrEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_AndEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:630:2: ( (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) )
            // InternalEketal.g:631:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            {
            // InternalEketal.g:631:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            // InternalEketal.g:632:3: this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrEventAccess().getAndEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_16);
            this_AndEvent_0=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:640:3: ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==26) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalEketal.g:641:4: () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) )
            	    {
            	    // InternalEketal.g:641:4: ()
            	    // InternalEketal.g:642:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrEventAccess().getOrEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:648:4: ( (lv_op_2_0= '||' ) )
            	    // InternalEketal.g:649:5: (lv_op_2_0= '||' )
            	    {
            	    // InternalEketal.g:649:5: (lv_op_2_0= '||' )
            	    // InternalEketal.g:650:6: lv_op_2_0= '||'
            	    {
            	    lv_op_2_0=(Token)match(input,26,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getOrEventAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getOrEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "||");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:662:4: ( (lv_right_3_0= ruleAndEvent ) )
            	    // InternalEketal.g:663:5: (lv_right_3_0= ruleAndEvent )
            	    {
            	    // InternalEketal.g:663:5: (lv_right_3_0= ruleAndEvent )
            	    // InternalEketal.g:664:6: lv_right_3_0= ruleAndEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrEventAccess().getRightAndEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_right_3_0=ruleAndEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.AndEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrEvent"


    // $ANTLR start "entryRuleAndEvent"
    // InternalEketal.g:686:1: entryRuleAndEvent returns [EObject current=null] : iv_ruleAndEvent= ruleAndEvent EOF ;
    public final EObject entryRuleAndEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndEvent = null;


        try {
            // InternalEketal.g:686:49: (iv_ruleAndEvent= ruleAndEvent EOF )
            // InternalEketal.g:687:2: iv_ruleAndEvent= ruleAndEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndEvent=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndEvent"


    // $ANTLR start "ruleAndEvent"
    // InternalEketal.g:693:1: ruleAndEvent returns [EObject current=null] : (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) ;
    public final EObject ruleAndEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_NotEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:699:2: ( (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) )
            // InternalEketal.g:700:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            {
            // InternalEketal.g:700:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            // InternalEketal.g:701:3: this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndEventAccess().getNotEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            this_NotEvent_0=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:709:3: ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==27) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalEketal.g:710:4: () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) )
            	    {
            	    // InternalEketal.g:710:4: ()
            	    // InternalEketal.g:711:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndEventAccess().getAndEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:717:4: ( (lv_op_2_0= '&&' ) )
            	    // InternalEketal.g:718:5: (lv_op_2_0= '&&' )
            	    {
            	    // InternalEketal.g:718:5: (lv_op_2_0= '&&' )
            	    // InternalEketal.g:719:6: lv_op_2_0= '&&'
            	    {
            	    lv_op_2_0=(Token)match(input,27,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getAndEventAccess().getOpAmpersandAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAndEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "&&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:731:4: ( (lv_right_3_0= ruleNotEvent ) )
            	    // InternalEketal.g:732:5: (lv_right_3_0= ruleNotEvent )
            	    {
            	    // InternalEketal.g:732:5: (lv_right_3_0= ruleNotEvent )
            	    // InternalEketal.g:733:6: lv_right_3_0= ruleNotEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndEventAccess().getRightNotEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_right_3_0=ruleNotEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.NotEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndEvent"


    // $ANTLR start "entryRuleNotEvent"
    // InternalEketal.g:755:1: entryRuleNotEvent returns [EObject current=null] : iv_ruleNotEvent= ruleNotEvent EOF ;
    public final EObject entryRuleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotEvent = null;


        try {
            // InternalEketal.g:755:49: (iv_ruleNotEvent= ruleNotEvent EOF )
            // InternalEketal.g:756:2: iv_ruleNotEvent= ruleNotEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNotEvent=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotEvent"


    // $ANTLR start "ruleNotEvent"
    // InternalEketal.g:762:1: ruleNotEvent returns [EObject current=null] : (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) ;
    public final EObject ruleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject this_AtomEvent_0 = null;

        EObject this_UnaryExpresion_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:768:2: ( (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) )
            // InternalEketal.g:769:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            {
            // InternalEketal.g:769:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==22||(LA15_0>=29 && LA15_0<=31)||(LA15_0>=98 && LA15_0<=99)) ) {
                alt15=1;
            }
            else if ( (LA15_0==28) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEketal.g:770:3: this_AtomEvent_0= ruleAtomEvent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getAtomEventParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AtomEvent_0=ruleAtomEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomEvent_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:779:3: this_UnaryExpresion_1= ruleUnaryExpresion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getUnaryExpresionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnaryExpresion_1=ruleUnaryExpresion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnaryExpresion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotEvent"


    // $ANTLR start "entryRuleUnaryExpresion"
    // InternalEketal.g:791:1: entryRuleUnaryExpresion returns [EObject current=null] : iv_ruleUnaryExpresion= ruleUnaryExpresion EOF ;
    public final EObject entryRuleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpresion = null;


        try {
            // InternalEketal.g:791:55: (iv_ruleUnaryExpresion= ruleUnaryExpresion EOF )
            // InternalEketal.g:792:2: iv_ruleUnaryExpresion= ruleUnaryExpresion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpresionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpresion=ruleUnaryExpresion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpresion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpresion"


    // $ANTLR start "ruleUnaryExpresion"
    // InternalEketal.g:798:1: ruleUnaryExpresion returns [EObject current=null] : ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) ;
    public final EObject ruleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:804:2: ( ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) )
            // InternalEketal.g:805:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            {
            // InternalEketal.g:805:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            // InternalEketal.g:806:3: () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) )
            {
            // InternalEketal.g:806:3: ()
            // InternalEketal.g:807:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnaryExpresionAccess().getUnaryEventAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:813:3: ( (lv_op_1_0= '!' ) )
            // InternalEketal.g:814:4: (lv_op_1_0= '!' )
            {
            // InternalEketal.g:814:4: (lv_op_1_0= '!' )
            // InternalEketal.g:815:5: lv_op_1_0= '!'
            {
            lv_op_1_0=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getUnaryExpresionAccess().getOpExclamationMarkKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnaryExpresionRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "!");
              				
            }

            }


            }

            // InternalEketal.g:827:3: ( (lv_expr_2_0= ruleAtomEvent ) )
            // InternalEketal.g:828:4: (lv_expr_2_0= ruleAtomEvent )
            {
            // InternalEketal.g:828:4: (lv_expr_2_0= ruleAtomEvent )
            // InternalEketal.g:829:5: lv_expr_2_0= ruleAtomEvent
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnaryExpresionAccess().getExprAtomEventParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnaryExpresionRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.AtomEvent");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpresion"


    // $ANTLR start "entryRuleAtomEvent"
    // InternalEketal.g:850:1: entryRuleAtomEvent returns [EObject current=null] : iv_ruleAtomEvent= ruleAtomEvent EOF ;
    public final EObject entryRuleAtomEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomEvent = null;


        try {
            // InternalEketal.g:850:50: (iv_ruleAtomEvent= ruleAtomEvent EOF )
            // InternalEketal.g:851:2: iv_ruleAtomEvent= ruleAtomEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAtomEvent=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomEvent"


    // $ANTLR start "ruleAtomEvent"
    // InternalEketal.g:857:1: ruleAtomEvent returns [EObject current=null] : ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) ;
    public final EObject ruleAtomEvent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_tipoEvento_0_0 = null;

        EObject this_OrEvent_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:863:2: ( ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) )
            // InternalEketal.g:864:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            {
            // InternalEketal.g:864:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( ((LA16_0>=29 && LA16_0<=31)||(LA16_0>=98 && LA16_0<=99)) ) {
                alt16=1;
            }
            else if ( (LA16_0==22) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEketal.g:865:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    {
                    // InternalEketal.g:865:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    // InternalEketal.g:866:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    {
                    // InternalEketal.g:866:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    // InternalEketal.g:867:5: lv_tipoEvento_0_0= ruleEventPredicate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAtomEventAccess().getTipoEventoEventPredicateParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tipoEvento_0_0=ruleEventPredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAtomEventRule());
                      					}
                      					set(
                      						current,
                      						"tipoEvento",
                      						lv_tipoEvento_0_0,
                      						"co.edu.icesi.eketal.Eketal.EventPredicate");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:885:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    {
                    // InternalEketal.g:885:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    // InternalEketal.g:886:4: otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,22,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomEventAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomEventAccess().getOrEventParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_20);
                    this_OrEvent_2=ruleOrEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OrEvent_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomEventAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomEvent"


    // $ANTLR start "entryRuleEventPredicate"
    // InternalEketal.g:907:1: entryRuleEventPredicate returns [EObject current=null] : iv_ruleEventPredicate= ruleEventPredicate EOF ;
    public final EObject entryRuleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventPredicate = null;


        try {
            // InternalEketal.g:907:55: (iv_ruleEventPredicate= ruleEventPredicate EOF )
            // InternalEketal.g:908:2: iv_ruleEventPredicate= ruleEventPredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventPredicate=ruleEventPredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventPredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventPredicate"


    // $ANTLR start "ruleEventPredicate"
    // InternalEketal.g:914:1: ruleEventPredicate returns [EObject current=null] : (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) ;
    public final EObject ruleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject this_KindAttribute_0 = null;

        EObject this_Trigger_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:920:2: ( (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) )
            // InternalEketal.g:921:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            {
            // InternalEketal.g:921:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=29 && LA17_0<=31)) ) {
                alt17=1;
            }
            else if ( ((LA17_0>=98 && LA17_0<=99)) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEketal.g:922:3: this_KindAttribute_0= ruleKindAttribute
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getKindAttributeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_KindAttribute_0=ruleKindAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KindAttribute_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:931:3: this_Trigger_1= ruleTrigger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getTriggerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Trigger_1=ruleTrigger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Trigger_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventPredicate"


    // $ANTLR start "entryRuleKindAttribute"
    // InternalEketal.g:943:1: entryRuleKindAttribute returns [EObject current=null] : iv_ruleKindAttribute= ruleKindAttribute EOF ;
    public final EObject entryRuleKindAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKindAttribute = null;


        try {
            // InternalEketal.g:943:54: (iv_ruleKindAttribute= ruleKindAttribute EOF )
            // InternalEketal.g:944:2: iv_ruleKindAttribute= ruleKindAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKindAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKindAttribute=ruleKindAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKindAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKindAttribute"


    // $ANTLR start "ruleKindAttribute"
    // InternalEketal.g:950:1: ruleKindAttribute returns [EObject current=null] : ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) ;
    public final EObject ruleKindAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_condition_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:956:2: ( ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) )
            // InternalEketal.g:957:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            {
            // InternalEketal.g:957:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt18=1;
                }
                break;
            case 30:
                {
                alt18=2;
                }
                break;
            case 31:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEketal.g:958:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    {
                    // InternalEketal.g:958:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    // InternalEketal.g:959:4: otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')'
                    {
                    otherlv_0=(Token)match(input,29,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getKindAttributeAccess().getHostKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalEketal.g:967:4: ( (otherlv_2= RULE_ID ) )
                    // InternalEketal.g:968:5: (otherlv_2= RULE_ID )
                    {
                    // InternalEketal.g:968:5: (otherlv_2= RULE_ID )
                    // InternalEketal.g:969:6: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getKindAttributeAccess().getHostgroupGroupCrossReference_0_2_0());
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:986:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    {
                    // InternalEketal.g:986:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    // InternalEketal.g:987:4: otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')'
                    {
                    otherlv_4=(Token)match(input,30,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getKindAttributeAccess().getOnKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalEketal.g:995:4: ( (otherlv_6= RULE_ID ) )
                    // InternalEketal.g:996:5: (otherlv_6= RULE_ID )
                    {
                    // InternalEketal.g:996:5: (otherlv_6= RULE_ID )
                    // InternalEketal.g:997:6: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_6, grammarAccess.getKindAttributeAccess().getOngroupGroupCrossReference_1_2_0());
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:1014:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    {
                    // InternalEketal.g:1014:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    // InternalEketal.g:1015:4: otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    {
                    otherlv_8=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getKindAttributeAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:1019:4: ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    // InternalEketal.g:1020:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    {
                    // InternalEketal.g:1020:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    // InternalEketal.g:1021:6: lv_condition_9_0= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKindAttributeAccess().getConditionXParenthesizedExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_9_0=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKindAttributeRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XParenthesizedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKindAttribute"


    // $ANTLR start "entryRuleTrigger"
    // InternalEketal.g:1043:1: entryRuleTrigger returns [EObject current=null] : iv_ruleTrigger= ruleTrigger EOF ;
    public final EObject entryRuleTrigger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrigger = null;


        try {
            // InternalEketal.g:1043:48: (iv_ruleTrigger= ruleTrigger EOF )
            // InternalEketal.g:1044:2: iv_ruleTrigger= ruleTrigger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTriggerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTrigger=ruleTrigger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrigger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrigger"


    // $ANTLR start "ruleTrigger"
    // InternalEketal.g:1050:1: ruleTrigger returns [EObject current=null] : ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) ) ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) ;
    public final EObject ruleTrigger() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Enumerator lv_triggerType_0_0 = null;

        EObject lv_returndef_2_0 = null;

        AntlrDatatypeRuleToken lv_esig_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_params_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1056:2: ( ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) ) ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) )
            // InternalEketal.g:1057:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) ) ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            {
            // InternalEketal.g:1057:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) ) ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            // InternalEketal.g:1058:3: ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) ) ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')'
            {
            // InternalEketal.g:1058:3: ( (lv_triggerType_0_0= ruleTPrefix ) )
            // InternalEketal.g:1059:4: (lv_triggerType_0_0= ruleTPrefix )
            {
            // InternalEketal.g:1059:4: (lv_triggerType_0_0= ruleTPrefix )
            // InternalEketal.g:1060:5: lv_triggerType_0_0= ruleTPrefix
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getTriggerTypeTPrefixEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_triggerType_0_0=ruleTPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"triggerType",
              						lv_triggerType_0_0,
              						"co.edu.icesi.eketal.Eketal.TPrefix");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,22,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalEketal.g:1081:3: ( (lv_returndef_2_0= ruleTypeReturn ) )
            // InternalEketal.g:1082:4: (lv_returndef_2_0= ruleTypeReturn )
            {
            // InternalEketal.g:1082:4: (lv_returndef_2_0= ruleTypeReturn )
            // InternalEketal.g:1083:5: lv_returndef_2_0= ruleTypeReturn
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getReturndefTypeReturnParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_returndef_2_0=ruleTypeReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"returndef",
              						lv_returndef_2_0,
              						"co.edu.icesi.eketal.Eketal.TypeReturn");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:1100:3: ( (lv_esig_3_0= ruleQualifiedName ) )
            // InternalEketal.g:1101:4: (lv_esig_3_0= ruleQualifiedName )
            {
            // InternalEketal.g:1101:4: (lv_esig_3_0= ruleQualifiedName )
            // InternalEketal.g:1102:5: lv_esig_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getEsigQualifiedNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_esig_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"esig",
              						lv_esig_3_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,22,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:1123:3: ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_ID) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalEketal.g:1124:4: ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    {
                    // InternalEketal.g:1124:4: ( (lv_params_5_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1125:5: (lv_params_5_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1125:5: (lv_params_5_0= ruleJvmTypeReference )
                    // InternalEketal.g:1126:6: lv_params_5_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_5_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTriggerRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_5_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1143:4: (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==23) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalEketal.g:1144:5: otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    {
                    	    otherlv_6=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1148:5: ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    // InternalEketal.g:1149:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    {
                    	    // InternalEketal.g:1149:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    // InternalEketal.g:1150:7: lv_params_7_0= ruleJvmTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_7_0=ruleJvmTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTriggerRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_7_0,
                    	      								"jbase.Jbase.JvmTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,24,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_9=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrigger"


    // $ANTLR start "entryRuleTypeReturn"
    // InternalEketal.g:1181:1: entryRuleTypeReturn returns [EObject current=null] : iv_ruleTypeReturn= ruleTypeReturn EOF ;
    public final EObject entryRuleTypeReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReturn = null;


        try {
            // InternalEketal.g:1181:51: (iv_ruleTypeReturn= ruleTypeReturn EOF )
            // InternalEketal.g:1182:2: iv_ruleTypeReturn= ruleTypeReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReturnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReturn=ruleTypeReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReturn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReturn"


    // $ANTLR start "ruleTypeReturn"
    // InternalEketal.g:1188:1: ruleTypeReturn returns [EObject current=null] : ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleTypeReturn() throws RecognitionException {
        EObject current = null;

        Token lv_astk_0_0=null;
        EObject lv_jvmRef_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1194:2: ( ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:1195:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:1195:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ANY) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_ID) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEketal.g:1196:3: ( (lv_astk_0_0= RULE_ANY ) )
                    {
                    // InternalEketal.g:1196:3: ( (lv_astk_0_0= RULE_ANY ) )
                    // InternalEketal.g:1197:4: (lv_astk_0_0= RULE_ANY )
                    {
                    // InternalEketal.g:1197:4: (lv_astk_0_0= RULE_ANY )
                    // InternalEketal.g:1198:5: lv_astk_0_0= RULE_ANY
                    {
                    lv_astk_0_0=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_astk_0_0, grammarAccess.getTypeReturnAccess().getAstkANYTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeReturnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"astk",
                      						lv_astk_0_0,
                      						"co.edu.icesi.eketal.Eketal.ANY");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1215:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    {
                    // InternalEketal.g:1215:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1216:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1216:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    // InternalEketal.g:1217:5: lv_jvmRef_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeReturnAccess().getJvmRefJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_jvmRef_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeReturnRule());
                      					}
                      					set(
                      						current,
                      						"jvmRef",
                      						lv_jvmRef_1_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReturn"


    // $ANTLR start "entryRuleGroup"
    // InternalEketal.g:1238:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // InternalEketal.g:1238:46: (iv_ruleGroup= ruleGroup EOF )
            // InternalEketal.g:1239:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroup=ruleGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // InternalEketal.g:1245:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_hosts_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1251:2: ( (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) )
            // InternalEketal.g:1252:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            {
            // InternalEketal.g:1252:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            // InternalEketal.g:1253:3: otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
              		
            }
            // InternalEketal.g:1257:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1258:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1258:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1259:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGroupRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:1279:3: ( (lv_hosts_3_0= ruleHost ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==RULE_ID||(LA22_0>=RULE_HEX && LA22_0<=RULE_DECIMAL)||(LA22_0>=33 && LA22_0<=34)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalEketal.g:1280:4: (lv_hosts_3_0= ruleHost )
            	    {
            	    // InternalEketal.g:1280:4: (lv_hosts_3_0= ruleHost )
            	    // InternalEketal.g:1281:5: lv_hosts_3_0= ruleHost
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGroupAccess().getHostsHostParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_hosts_3_0=ruleHost();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGroupRule());
            	      					}
            	      					add(
            	      						current,
            	      						"hosts",
            	      						lv_hosts_3_0,
            	      						"co.edu.icesi.eketal.Eketal.Host");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_4=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleHost"
    // InternalEketal.g:1306:1: entryRuleHost returns [EObject current=null] : iv_ruleHost= ruleHost EOF ;
    public final EObject entryRuleHost() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHost = null;


        try {
            // InternalEketal.g:1306:45: (iv_ruleHost= ruleHost EOF )
            // InternalEketal.g:1307:2: iv_ruleHost= ruleHost EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHost=ruleHost();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHost; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHost"


    // $ANTLR start "ruleHost"
    // InternalEketal.g:1313:1: ruleHost returns [EObject current=null] : ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleHost() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_ip_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1319:2: ( ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) )
            // InternalEketal.g:1320:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalEketal.g:1320:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0>=RULE_HEX && LA23_0<=RULE_DECIMAL)||(LA23_0>=33 && LA23_0<=34)) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_ID) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalEketal.g:1321:3: ( (lv_ip_0_0= ruleIp ) )
                    {
                    // InternalEketal.g:1321:3: ( (lv_ip_0_0= ruleIp ) )
                    // InternalEketal.g:1322:4: (lv_ip_0_0= ruleIp )
                    {
                    // InternalEketal.g:1322:4: (lv_ip_0_0= ruleIp )
                    // InternalEketal.g:1323:5: lv_ip_0_0= ruleIp
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHostAccess().getIpIpParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ip_0_0=ruleIp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHostRule());
                      					}
                      					set(
                      						current,
                      						"ip",
                      						lv_ip_0_0,
                      						"co.edu.icesi.eketal.Eketal.Ip");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1341:3: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalEketal.g:1341:3: ( (otherlv_1= RULE_ID ) )
                    // InternalEketal.g:1342:4: (otherlv_1= RULE_ID )
                    {
                    // InternalEketal.g:1342:4: (otherlv_1= RULE_ID )
                    // InternalEketal.g:1343:5: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHostRule());
                      					}
                      				
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getHostAccess().getGroupIdGroupCrossReference_1_0());
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHost"


    // $ANTLR start "entryRuleIp"
    // InternalEketal.g:1358:1: entryRuleIp returns [String current=null] : iv_ruleIp= ruleIp EOF ;
    public final String entryRuleIp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIp = null;


        try {
            // InternalEketal.g:1358:42: (iv_ruleIp= ruleIp EOF )
            // InternalEketal.g:1359:2: iv_ruleIp= ruleIp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIp=ruleIp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIp"


    // $ANTLR start "ruleIp"
    // InternalEketal.g:1365:1: ruleIp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'jphost' | kw= 'localhost' | (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber ) ) ;
    public final AntlrDatatypeRuleToken ruleIp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Number_2 = null;

        AntlrDatatypeRuleToken this_Number_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:1371:2: ( (kw= 'jphost' | kw= 'localhost' | (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber ) ) )
            // InternalEketal.g:1372:2: (kw= 'jphost' | kw= 'localhost' | (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber ) )
            {
            // InternalEketal.g:1372:2: (kw= 'jphost' | kw= 'localhost' | (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case 33:
                {
                alt24=1;
                }
                break;
            case 34:
                {
                alt24=2;
                }
                break;
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalEketal.g:1373:3: kw= 'jphost'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getJphostKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:1379:3: kw= 'localhost'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getLocalhostKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:1385:3: (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber )
                    {
                    // InternalEketal.g:1385:3: (this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber )
                    // InternalEketal.g:1386:4: this_Number_2= ruleNumber kw= ':' this_Number_4= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIpAccess().getNumberParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_9);
                    this_Number_2=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Number_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    kw=(Token)match(input,20,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIpAccess().getColonKeyword_2_1());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIpAccess().getNumberParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Number_4=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Number_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIp"


    // $ANTLR start "entryRuleAutomaton"
    // InternalEketal.g:1416:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalEketal.g:1416:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalEketal.g:1417:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalEketal.g:1423:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_steps_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1429:2: ( (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) )
            // InternalEketal.g:1430:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            {
            // InternalEketal.g:1430:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            // InternalEketal.g:1431:3: otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalEketal.g:1435:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1436:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1436:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1437:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAutomatonRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAutomatonAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:1457:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_ID||LA26_0==42) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalEketal.g:1458:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:1458:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:1459:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:1459:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:1460:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAutomatonRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1477:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==23) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalEketal.g:1478:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1482:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:1483:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:1483:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:1484:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAutomatonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAutomatonAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,18,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:1511:3: ( (lv_steps_8_0= ruleStep ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==RULE_ID||(LA27_0>=100 && LA27_0<=102)) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalEketal.g:1512:4: (lv_steps_8_0= ruleStep )
            	    {
            	    // InternalEketal.g:1512:4: (lv_steps_8_0= ruleStep )
            	    // InternalEketal.g:1513:5: lv_steps_8_0= ruleStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAutomatonAccess().getStepsStepParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_steps_8_0=ruleStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"steps",
            	      						lv_steps_8_0,
            	      						"co.edu.icesi.eketal.Eketal.Step");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            otherlv_9=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleStep"
    // InternalEketal.g:1538:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalEketal.g:1538:45: (iv_ruleStep= ruleStep EOF )
            // InternalEketal.g:1539:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalEketal.g:1545:1: ruleStep returns [EObject current=null] : ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Enumerator lv_type_0_0 = null;

        EObject lv_transitions_4_0 = null;

        EObject lv_transitions_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1551:2: ( ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) )
            // InternalEketal.g:1552:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            {
            // InternalEketal.g:1552:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            // InternalEketal.g:1553:3: ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';'
            {
            // InternalEketal.g:1553:3: ( (lv_type_0_0= ruleStateType ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=100 && LA28_0<=102)) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalEketal.g:1554:4: (lv_type_0_0= ruleStateType )
                    {
                    // InternalEketal.g:1554:4: (lv_type_0_0= ruleStateType )
                    // InternalEketal.g:1555:5: lv_type_0_0= ruleStateType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStepAccess().getTypeStateTypeEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_0_0=ruleStateType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStepRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"co.edu.icesi.eketal.Eketal.StateType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:1572:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1573:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1573:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1574:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getStepAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStepRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalEketal.g:1590:3: (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==20) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalEketal.g:1591:4: otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    {
                    otherlv_2=(Token)match(input,20,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStepAccess().getColonKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalEketal.g:1599:4: ( (lv_transitions_4_0= ruleTransDef ) )
                    // InternalEketal.g:1600:5: (lv_transitions_4_0= ruleTransDef )
                    {
                    // InternalEketal.g:1600:5: (lv_transitions_4_0= ruleTransDef )
                    // InternalEketal.g:1601:6: lv_transitions_4_0= ruleTransDef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_transitions_4_0=ruleTransDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStepRule());
                      						}
                      						add(
                      							current,
                      							"transitions",
                      							lv_transitions_4_0,
                      							"co.edu.icesi.eketal.Eketal.TransDef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,24,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_3());
                      			
                    }
                    // InternalEketal.g:1622:4: (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==26) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalEketal.g:1623:5: otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')'
                    	    {
                    	    otherlv_6=(Token)match(input,26,FOLLOW_10); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getStepAccess().getVerticalLineVerticalLineKeyword_2_4_0());
                    	      				
                    	    }
                    	    otherlv_7=(Token)match(input,22,FOLLOW_22); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_4_1());
                    	      				
                    	    }
                    	    // InternalEketal.g:1631:5: ( (lv_transitions_8_0= ruleTransDef ) )*
                    	    loop29:
                    	    do {
                    	        int alt29=2;
                    	        int LA29_0 = input.LA(1);

                    	        if ( (LA29_0==RULE_ID) ) {
                    	            alt29=1;
                    	        }


                    	        switch (alt29) {
                    	    	case 1 :
                    	    	    // InternalEketal.g:1632:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    {
                    	    	    // InternalEketal.g:1632:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    // InternalEketal.g:1633:7: lv_transitions_8_0= ruleTransDef
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_4_2_0());
                    	    	      						
                    	    	    }
                    	    	    pushFollow(FOLLOW_22);
                    	    	    lv_transitions_8_0=ruleTransDef();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							if (current==null) {
                    	    	      								current = createModelElementForParent(grammarAccess.getStepRule());
                    	    	      							}
                    	    	      							add(
                    	    	      								current,
                    	    	      								"transitions",
                    	    	      								lv_transitions_8_0,
                    	    	      								"co.edu.icesi.eketal.Eketal.TransDef");
                    	    	      							afterParserOrEnumRuleCall();
                    	    	      						
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop29;
                    	        }
                    	    } while (true);

                    	    otherlv_9=(Token)match(input,24,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStepAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "entryRuleTransDef"
    // InternalEketal.g:1664:1: entryRuleTransDef returns [EObject current=null] : iv_ruleTransDef= ruleTransDef EOF ;
    public final EObject entryRuleTransDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransDef = null;


        try {
            // InternalEketal.g:1664:49: (iv_ruleTransDef= ruleTransDef EOF )
            // InternalEketal.g:1665:2: iv_ruleTransDef= ruleTransDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransDef=ruleTransDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransDef"


    // $ANTLR start "ruleTransDef"
    // InternalEketal.g:1671:1: ruleTransDef returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleTransDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalEketal.g:1677:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalEketal.g:1678:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalEketal.g:1678:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            // InternalEketal.g:1679:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) )
            {
            // InternalEketal.g:1679:3: ( (otherlv_0= RULE_ID ) )
            // InternalEketal.g:1680:4: (otherlv_0= RULE_ID )
            {
            // InternalEketal.g:1680:4: (otherlv_0= RULE_ID )
            // InternalEketal.g:1681:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getTransDefAccess().getEventEvDeclCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTransDefAccess().getHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalEketal.g:1696:3: ( (otherlv_2= RULE_ID ) )
            // InternalEketal.g:1697:4: (otherlv_2= RULE_ID )
            {
            // InternalEketal.g:1697:4: (otherlv_2= RULE_ID )
            // InternalEketal.g:1698:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getTransDefAccess().getTargetStepCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransDef"


    // $ANTLR start "entryRuleRc"
    // InternalEketal.g:1713:1: entryRuleRc returns [EObject current=null] : iv_ruleRc= ruleRc EOF ;
    public final EObject entryRuleRc() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRc = null;


        try {
            // InternalEketal.g:1713:43: (iv_ruleRc= ruleRc EOF )
            // InternalEketal.g:1714:2: iv_ruleRc= ruleRc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRcRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRc=ruleRc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRc"


    // $ANTLR start "ruleRc"
    // InternalEketal.g:1720:1: ruleRc returns [EObject current=null] : ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) ;
    public final EObject ruleRc() throws RecognitionException {
        EObject current = null;

        Token lv_syncex_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Enumerator lv_pos_2_0 = null;

        EObject lv_body_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1726:2: ( ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) )
            // InternalEketal.g:1727:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            {
            // InternalEketal.g:1727:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            // InternalEketal.g:1728:3: ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) )
            {
            // InternalEketal.g:1728:3: ( (lv_syncex_0_0= 'syncex' ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==37) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalEketal.g:1729:4: (lv_syncex_0_0= 'syncex' )
                    {
                    // InternalEketal.g:1729:4: (lv_syncex_0_0= 'syncex' )
                    // InternalEketal.g:1730:5: lv_syncex_0_0= 'syncex'
                    {
                    lv_syncex_0_0=(Token)match(input,37,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_syncex_0_0, grammarAccess.getRcAccess().getSyncexSyncexKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRcRule());
                      					}
                      					setWithLastConsumed(current, "syncex", lv_syncex_0_0, "syncex");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,38,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRcAccess().getReactionKeyword_1());
              		
            }
            // InternalEketal.g:1746:3: ( (lv_pos_2_0= rulePos ) )
            // InternalEketal.g:1747:4: (lv_pos_2_0= rulePos )
            {
            // InternalEketal.g:1747:4: (lv_pos_2_0= rulePos )
            // InternalEketal.g:1748:5: lv_pos_2_0= rulePos
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getPosPosEnumRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_pos_2_0=rulePos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"pos",
              						lv_pos_2_0,
              						"co.edu.icesi.eketal.Eketal.Pos");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:1765:3: ( (otherlv_3= RULE_ID ) )
            // InternalEketal.g:1766:4: (otherlv_3= RULE_ID )
            {
            // InternalEketal.g:1766:4: (otherlv_3= RULE_ID )
            // InternalEketal.g:1767:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getRcAccess().getAutomatonAutomatonCrossReference_3_0());
              				
            }

            }


            }

            otherlv_4=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRcAccess().getFullStopKeyword_4());
              		
            }
            // InternalEketal.g:1782:3: ( (otherlv_5= RULE_ID ) )
            // InternalEketal.g:1783:4: (otherlv_5= RULE_ID )
            {
            // InternalEketal.g:1783:4: (otherlv_5= RULE_ID )
            // InternalEketal.g:1784:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getRcAccess().getStateStepCrossReference_5_0());
              				
            }

            }


            }

            // InternalEketal.g:1795:3: ( (lv_body_6_0= ruleBody ) )
            // InternalEketal.g:1796:4: (lv_body_6_0= ruleBody )
            {
            // InternalEketal.g:1796:4: (lv_body_6_0= ruleBody )
            // InternalEketal.g:1797:5: lv_body_6_0= ruleBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getBodyBodyParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_6_0,
              						"co.edu.icesi.eketal.Eketal.Body");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRc"


    // $ANTLR start "entryRuleBody"
    // InternalEketal.g:1818:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalEketal.g:1818:45: (iv_ruleBody= ruleBody EOF )
            // InternalEketal.g:1819:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalEketal.g:1825:1: ruleBody returns [EObject current=null] : ( (lv_body_0_0= ruleXBlockExpression ) ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        EObject lv_body_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1831:2: ( ( (lv_body_0_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:1832:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:1832:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            // InternalEketal.g:1833:3: (lv_body_0_0= ruleXBlockExpression )
            {
            // InternalEketal.g:1833:3: (lv_body_0_0= ruleXBlockExpression )
            // InternalEketal.g:1834:4: lv_body_0_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyAccess().getBodyXBlockExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyRule());
              				}
              				set(
              					current,
              					"body",
              					lv_body_0_0,
              					"jbase.Jbase.XBlockExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleXJStatementOrBlock"
    // InternalEketal.g:1854:1: entryRuleXJStatementOrBlock returns [EObject current=null] : iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF ;
    public final EObject entryRuleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJStatementOrBlock = null;


        try {
            // InternalEketal.g:1854:59: (iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF )
            // InternalEketal.g:1855:2: iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJStatementOrBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJStatementOrBlock=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJStatementOrBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJStatementOrBlock"


    // $ANTLR start "ruleXJStatementOrBlock"
    // InternalEketal.g:1861:1: ruleXJStatementOrBlock returns [EObject current=null] : ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) ;
    public final EObject ruleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject this_XBlockExpression_0 = null;

        EObject this_XJSingleStatement_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:1867:2: ( ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) )
            // InternalEketal.g:1868:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            {
            // InternalEketal.g:1868:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalEketal.g:1869:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:1869:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    // InternalEketal.g:1870:4: ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXBlockExpressionParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XBlockExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1881:3: this_XJSingleStatement_1= ruleXJSingleStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXJSingleStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSingleStatement_1=ruleXJSingleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSingleStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJStatementOrBlock"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalEketal.g:1893:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalEketal.g:1893:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalEketal.g:1894:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalEketal.g:1900:1: ruleXImportDeclaration returns [EObject current=null] : ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_wildcard_3_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_memberName_4_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1906:2: ( ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) )
            // InternalEketal.g:1907:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            {
            // InternalEketal.g:1907:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            // InternalEketal.g:1908:3: ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )*
            {
            // InternalEketal.g:1908:3: ( ( 'import' )=>otherlv_0= 'import' )
            // InternalEketal.g:1909:4: ( 'import' )=>otherlv_0= 'import'
            {
            otherlv_0=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              			
            }

            }

            // InternalEketal.g:1915:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )
            int alt35=3;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalEketal.g:1916:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    {
                    // InternalEketal.g:1916:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    // InternalEketal.g:1917:5: ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    {
                    // InternalEketal.g:1917:5: ( (lv_static_1_0= 'static' ) )
                    // InternalEketal.g:1918:6: (lv_static_1_0= 'static' )
                    {
                    // InternalEketal.g:1918:6: (lv_static_1_0= 'static' )
                    // InternalEketal.g:1919:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,41,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalEketal.g:1931:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalEketal.g:1932:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalEketal.g:1932:6: ( ruleQualifiedNameInStaticImport )
                    // InternalEketal.g:1933:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:1947:5: ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==RULE_ANY) ) {
                        alt34=1;
                    }
                    else if ( (LA34_0==RULE_ID) ) {
                        alt34=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 34, 0, input);

                        throw nvae;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalEketal.g:1948:6: ( (lv_wildcard_3_0= '*' ) )
                            {
                            // InternalEketal.g:1948:6: ( (lv_wildcard_3_0= '*' ) )
                            // InternalEketal.g:1949:7: (lv_wildcard_3_0= '*' )
                            {
                            // InternalEketal.g:1949:7: (lv_wildcard_3_0= '*' )
                            // InternalEketal.g:1950:8: lv_wildcard_3_0= '*'
                            {
                            lv_wildcard_3_0=(Token)match(input,RULE_ANY,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_3_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:1963:6: ( (lv_memberName_4_0= ruleValidID ) )
                            {
                            // InternalEketal.g:1963:6: ( (lv_memberName_4_0= ruleValidID ) )
                            // InternalEketal.g:1964:7: (lv_memberName_4_0= ruleValidID )
                            {
                            // InternalEketal.g:1964:7: (lv_memberName_4_0= ruleValidID )
                            // InternalEketal.g:1965:8: lv_memberName_4_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_2_1_0());
                              							
                            }
                            pushFollow(FOLLOW_33);
                            lv_memberName_4_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_4_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1985:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalEketal.g:1985:4: ( ( ruleQualifiedName ) )
                    // InternalEketal.g:1986:5: ( ruleQualifiedName )
                    {
                    // InternalEketal.g:1986:5: ( ruleQualifiedName )
                    // InternalEketal.g:1987:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:2002:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalEketal.g:2002:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    // InternalEketal.g:2003:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalEketal.g:2003:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    // InternalEketal.g:2004:6: lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_importedNamespace_6_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:2022:3: ( ( ';' )=>otherlv_7= ';' )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==16) && (synpred4_InternalEketal())) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalEketal.g:2023:4: ( ';' )=>otherlv_7= ';'
            	    {
            	    otherlv_7=(Token)match(input,16,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalEketal.g:2033:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalEketal.g:2033:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalEketal.g:2034:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalEketal.g:2040:1: ruleJvmTypeReference returns [EObject current=null] : (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2046:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) )
            // InternalEketal.g:2047:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            {
            // InternalEketal.g:2047:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            // InternalEketal.g:2048:3: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_34);
            this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_JvmParameterizedTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2056:3: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==47) ) {
                    int LA37_2 = input.LA(2);

                    if ( (LA37_2==48) ) {
                        int LA37_3 = input.LA(3);

                        if ( (synpred5_InternalEketal()) ) {
                            alt37=1;
                        }


                    }


                }


                switch (alt37) {
            	case 1 :
            	    // InternalEketal.g:2057:4: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
            	    {
            	    // InternalEketal.g:2063:4: ( () ruleArrayBrackets )
            	    // InternalEketal.g:2064:5: () ruleArrayBrackets
            	    {
            	    // InternalEketal.g:2064:5: ()
            	    // InternalEketal.g:2065:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_1_0_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalEketal.g:2084:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalEketal.g:2084:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalEketal.g:2085:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalEketal.g:2091:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token lv_varArgs_3_0=null;
        EObject lv_parameterType_2_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2097:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) )
            // InternalEketal.g:2098:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            {
            // InternalEketal.g:2098:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            // InternalEketal.g:2099:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) )
            {
            // InternalEketal.g:2099:3: ()
            // InternalEketal.g:2100:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFullJvmFormalParameterAccess().getXJJvmFormalParameterAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2106:3: ( (lv_final_1_0= 'final' ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==42) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalEketal.g:2107:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:2107:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:2108:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getFullJvmFormalParameterAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:2120:3: ( (lv_parameterType_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:2121:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:2121:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            // InternalEketal.g:2122:5: lv_parameterType_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_parameterType_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:2139:3: ( (lv_varArgs_3_0= '...' ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==43) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalEketal.g:2140:4: (lv_varArgs_3_0= '...' )
                    {
                    // InternalEketal.g:2140:4: (lv_varArgs_3_0= '...' )
                    // InternalEketal.g:2141:5: lv_varArgs_3_0= '...'
                    {
                    lv_varArgs_3_0=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_varArgs_3_0, grammarAccess.getFullJvmFormalParameterAccess().getVarArgsFullStopFullStopFullStopKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "varArgs", true, "...");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:2153:3: ( (lv_name_4_0= ruleValidID ) )
            // InternalEketal.g:2154:4: (lv_name_4_0= ruleValidID )
            {
            // InternalEketal.g:2154:4: (lv_name_4_0= ruleValidID )
            // InternalEketal.g:2155:5: lv_name_4_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_4_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXJSingleStatement"
    // InternalEketal.g:2176:1: entryRuleXJSingleStatement returns [EObject current=null] : iv_ruleXJSingleStatement= ruleXJSingleStatement EOF ;
    public final EObject entryRuleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSingleStatement = null;


        try {
            // InternalEketal.g:2176:58: (iv_ruleXJSingleStatement= ruleXJSingleStatement EOF )
            // InternalEketal.g:2177:2: iv_ruleXJSingleStatement= ruleXJSingleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSingleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSingleStatement=ruleXJSingleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSingleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSingleStatement"


    // $ANTLR start "ruleXJSingleStatement"
    // InternalEketal.g:2183:1: ruleXJSingleStatement returns [EObject current=null] : (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) ;
    public final EObject ruleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_XJSemicolonStatement_0 = null;

        EObject this_XSwitchExpression_1 = null;

        EObject this_XIfExpression_2 = null;

        EObject this_XForLoopExpression_3 = null;

        EObject this_XBasicForLoopExpression_4 = null;

        EObject this_XWhileExpression_5 = null;

        EObject this_XJTryWithResourcesStatement_6 = null;

        EObject this_XTryCatchFinallyExpression_7 = null;

        EObject this_XSynchronizedExpression_8 = null;

        EObject this_XJEmptyStatement_9 = null;



        	enterRule();

        try {
            // InternalEketal.g:2189:2: ( (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) )
            // InternalEketal.g:2190:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            {
            // InternalEketal.g:2190:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            int alt40=10;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalEketal.g:2191:3: this_XJSemicolonStatement_0= ruleXJSemicolonStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJSemicolonStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSemicolonStatement_0=ruleXJSemicolonStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSemicolonStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:2200:3: this_XSwitchExpression_1= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSwitchExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_1=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:2209:3: this_XIfExpression_2= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXIfExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_2=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:2218:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    {
                    // InternalEketal.g:2218:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    // InternalEketal.g:2219:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXForLoopExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_3=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEketal.g:2242:3: this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXBasicForLoopExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_4=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:2251:3: this_XWhileExpression_5= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXWhileExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_5=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:2260:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    {
                    // InternalEketal.g:2260:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    // InternalEketal.g:2261:4: ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJTryWithResourcesStatementParserRuleCall_6());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJTryWithResourcesStatement_6=ruleXJTryWithResourcesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJTryWithResourcesStatement_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEketal.g:2282:3: this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXTryCatchFinallyExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_7=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:2291:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    {
                    // InternalEketal.g:2291:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    // InternalEketal.g:2292:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSynchronizedExpressionParserRuleCall_8());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_8=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:2309:3: this_XJEmptyStatement_9= ruleXJEmptyStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJEmptyStatementParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJEmptyStatement_9=ruleXJEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJEmptyStatement_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSingleStatement"


    // $ANTLR start "entryRuleXJSemicolonStatement"
    // InternalEketal.g:2321:1: entryRuleXJSemicolonStatement returns [EObject current=null] : iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF ;
    public final EObject entryRuleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSemicolonStatement = null;


        try {
            // InternalEketal.g:2321:61: (iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF )
            // InternalEketal.g:2322:2: iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSemicolonStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSemicolonStatement=ruleXJSemicolonStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSemicolonStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSemicolonStatement"


    // $ANTLR start "ruleXJSemicolonStatement"
    // InternalEketal.g:2328:1: ruleXJSemicolonStatement returns [EObject current=null] : ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) ;
    public final EObject ruleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_2_0=null;
        EObject lv_expression_1_1 = null;

        EObject lv_expression_1_2 = null;

        EObject lv_expression_1_3 = null;

        EObject lv_expression_1_4 = null;

        EObject lv_expression_1_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:2334:2: ( ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) )
            // InternalEketal.g:2335:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            {
            // InternalEketal.g:2335:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            // InternalEketal.g:2336:3: () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            {
            // InternalEketal.g:2336:3: ()
            // InternalEketal.g:2337:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSemicolonStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2343:3: ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) )
            // InternalEketal.g:2344:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            {
            // InternalEketal.g:2344:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            // InternalEketal.g:2345:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            {
            // InternalEketal.g:2345:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            int alt41=5;
            switch ( input.LA(1) ) {
            case 44:
            case 45:
                {
                alt41=1;
                }
                break;
            case RULE_ID:
            case RULE_CHARACTER:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
            case 18:
            case 22:
            case 28:
            case 40:
            case 41:
            case 42:
            case 61:
            case 82:
            case 83:
            case 84:
            case 87:
            case 88:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
                {
                alt41=2;
                }
                break;
            case 66:
                {
                alt41=3;
                }
                break;
            case 97:
                {
                alt41=4;
                }
                break;
            case 96:
                {
                alt41=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalEketal.g:2346:6: lv_expression_1_1= ruleXJBranchingStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXJBranchingStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_expression_1_1=ruleXJBranchingStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_1,
                      							"jbase.Jbase.XJBranchingStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:2362:6: lv_expression_1_2= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXExpressionOrVarDeclarationParserRuleCall_1_0_1());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_expression_1_2=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_2,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:2378:6: lv_expression_1_3= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXDoWhileExpressionParserRuleCall_1_0_2());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_expression_1_3=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_3,
                      							"jbase.Jbase.XDoWhileExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:2394:6: lv_expression_1_4= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXReturnExpressionParserRuleCall_1_0_3());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_expression_1_4=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_4,
                      							"org.eclipse.xtext.xbase.Xbase.XReturnExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:2410:6: lv_expression_1_5= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXThrowExpressionParserRuleCall_1_0_4());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_expression_1_5=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_5,
                      							"org.eclipse.xtext.xbase.Xbase.XThrowExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalEketal.g:2428:3: ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==16) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred9_InternalEketal()) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalEketal.g:2429:4: ( ';' )=> (lv_semicolon_2_0= ';' )
                    {
                    // InternalEketal.g:2430:4: (lv_semicolon_2_0= ';' )
                    // InternalEketal.g:2431:5: lv_semicolon_2_0= ';'
                    {
                    lv_semicolon_2_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_2_0, grammarAccess.getXJSemicolonStatementAccess().getSemicolonSemicolonKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJSemicolonStatementRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_2_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSemicolonStatement"


    // $ANTLR start "entryRuleXJEmptyStatement"
    // InternalEketal.g:2447:1: entryRuleXJEmptyStatement returns [EObject current=null] : iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF ;
    public final EObject entryRuleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJEmptyStatement = null;


        try {
            // InternalEketal.g:2447:57: (iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF )
            // InternalEketal.g:2448:2: iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJEmptyStatement=ruleXJEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJEmptyStatement"


    // $ANTLR start "ruleXJEmptyStatement"
    // InternalEketal.g:2454:1: ruleXJEmptyStatement returns [EObject current=null] : ( () ( (lv_semicolon_1_0= ';' ) ) ) ;
    public final EObject ruleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:2460:2: ( ( () ( (lv_semicolon_1_0= ';' ) ) ) )
            // InternalEketal.g:2461:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            {
            // InternalEketal.g:2461:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            // InternalEketal.g:2462:3: () ( (lv_semicolon_1_0= ';' ) )
            {
            // InternalEketal.g:2462:3: ()
            // InternalEketal.g:2463:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJEmptyStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2469:3: ( (lv_semicolon_1_0= ';' ) )
            // InternalEketal.g:2470:4: (lv_semicolon_1_0= ';' )
            {
            // InternalEketal.g:2470:4: (lv_semicolon_1_0= ';' )
            // InternalEketal.g:2471:5: lv_semicolon_1_0= ';'
            {
            lv_semicolon_1_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_semicolon_1_0, grammarAccess.getXJEmptyStatementAccess().getSemicolonSemicolonKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXJEmptyStatementRule());
              					}
              					setWithLastConsumed(current, "semicolon", lv_semicolon_1_0, ";");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJEmptyStatement"


    // $ANTLR start "entryRuleXJBranchingStatement"
    // InternalEketal.g:2487:1: entryRuleXJBranchingStatement returns [EObject current=null] : iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF ;
    public final EObject entryRuleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJBranchingStatement = null;


        try {
            // InternalEketal.g:2487:61: (iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF )
            // InternalEketal.g:2488:2: iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJBranchingStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJBranchingStatement=ruleXJBranchingStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJBranchingStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJBranchingStatement"


    // $ANTLR start "ruleXJBranchingStatement"
    // InternalEketal.g:2494:1: ruleXJBranchingStatement returns [EObject current=null] : ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) ;
    public final EObject ruleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalEketal.g:2500:2: ( ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) )
            // InternalEketal.g:2501:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            {
            // InternalEketal.g:2501:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==44) ) {
                alt43=1;
            }
            else if ( (LA43_0==45) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalEketal.g:2502:3: ( () otherlv_1= 'continue' )
                    {
                    // InternalEketal.g:2502:3: ( () otherlv_1= 'continue' )
                    // InternalEketal.g:2503:4: () otherlv_1= 'continue'
                    {
                    // InternalEketal.g:2503:4: ()
                    // InternalEketal.g:2504:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJContinueStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXJBranchingStatementAccess().getContinueKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2516:3: ( () otherlv_3= 'break' )
                    {
                    // InternalEketal.g:2516:3: ( () otherlv_3= 'break' )
                    // InternalEketal.g:2517:4: () otherlv_3= 'break'
                    {
                    // InternalEketal.g:2517:4: ()
                    // InternalEketal.g:2518:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJBreakStatementAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getXJBranchingStatementAccess().getBreakKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJBranchingStatement"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalEketal.g:2533:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalEketal.g:2533:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalEketal.g:2534:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalEketal.g:2540:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2546:2: ( ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) )
            // InternalEketal.g:2547:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            {
            // InternalEketal.g:2547:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            // InternalEketal.g:2548:3: () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}'
            {
            // InternalEketal.g:2548:3: ()
            // InternalEketal.g:2549:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:2559:3: ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_ID||(LA44_0>=RULE_CHARACTER && LA44_0<=RULE_DECIMAL)||LA44_0==16||LA44_0==18||LA44_0==22||LA44_0==28||LA44_0==31||(LA44_0>=40 && LA44_0<=42)||(LA44_0>=44 && LA44_0<=45)||LA44_0==61||LA44_0==63||(LA44_0>=65 && LA44_0<=67)||LA44_0==70||LA44_0==73||(LA44_0>=82 && LA44_0<=84)||(LA44_0>=87 && LA44_0<=88)||(LA44_0>=90 && LA44_0<=97)) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalEketal.g:2560:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:2560:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:2561:5: lv_expressions_2_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXJStatementOrBlockParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_expressions_2_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_2_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalEketal.g:2586:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalEketal.g:2586:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalEketal.g:2587:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalEketal.g:2593:1: ruleXVariableDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;

        EObject lv_additionalVariables_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2599:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) )
            // InternalEketal.g:2600:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            {
            // InternalEketal.g:2600:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            // InternalEketal.g:2601:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            {
            // InternalEketal.g:2601:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) )
            // InternalEketal.g:2602:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            {
            // InternalEketal.g:2622:4: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            // InternalEketal.g:2623:5: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) )
            {
            // InternalEketal.g:2623:5: ()
            // InternalEketal.g:2624:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXVariableDeclarationAccess().getXJVariableDeclarationAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalEketal.g:2630:5: ( (lv_final_1_0= 'final' ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==42) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalEketal.g:2631:6: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:2631:6: (lv_final_1_0= 'final' )
                    // InternalEketal.g:2632:7: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_final_1_0, grammarAccess.getXVariableDeclarationAccess().getFinalFinalKeyword_0_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "final", true, "final");
                      						
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:2644:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:2645:6: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:2645:6: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:2646:7: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"type",
              								lv_type_2_0,
              								"jbase.Jbase.JvmTypeReference");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:2663:5: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:2664:6: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:2664:6: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:2665:7: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_37);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"name",
              								lv_name_3_0,
              								"org.eclipse.xtext.xbase.Xtype.ValidID");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:2684:3: (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==46) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalEketal.g:2685:4: otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalEketal.g:2689:4: ( (lv_right_5_0= ruleXExpression ) )
                    // InternalEketal.g:2690:5: (lv_right_5_0= ruleXExpression )
                    {
                    // InternalEketal.g:2690:5: (lv_right_5_0= ruleXExpression )
                    // InternalEketal.g:2691:6: lv_right_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_right_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_5_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:2709:3: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==23) ) {
                    int LA47_2 = input.LA(2);

                    if ( (LA47_2==RULE_ID) ) {
                        int LA47_3 = input.LA(3);

                        if ( (synpred11_InternalEketal()) ) {
                            alt47=1;
                        }


                    }


                }


                switch (alt47) {
            	case 1 :
            	    // InternalEketal.g:2710:4: ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    {
            	    // InternalEketal.g:2710:4: ( ( ',' )=>otherlv_6= ',' )
            	    // InternalEketal.g:2711:5: ( ',' )=>otherlv_6= ','
            	    {
            	    otherlv_6=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getCommaKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2717:4: ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    // InternalEketal.g:2718:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    {
            	    // InternalEketal.g:2718:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    // InternalEketal.g:2719:6: lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getAdditionalVariablesXJAdditionalXVariableDeclarationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_additionalVariables_7_0=ruleXJAdditionalXVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"additionalVariables",
            	      							lv_additionalVariables_7_0,
            	      							"jbase.Jbase.XJAdditionalXVariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:2741:1: entryRuleXJAdditionalXVariableDeclaration returns [EObject current=null] : iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF ;
    public final EObject entryRuleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJAdditionalXVariableDeclaration = null;


        try {
            // InternalEketal.g:2741:73: (iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF )
            // InternalEketal.g:2742:2: iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJAdditionalXVariableDeclaration=ruleXJAdditionalXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJAdditionalXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJAdditionalXVariableDeclaration"


    // $ANTLR start "ruleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:2748:1: ruleXJAdditionalXVariableDeclaration returns [EObject current=null] : ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2754:2: ( ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) )
            // InternalEketal.g:2755:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            {
            // InternalEketal.g:2755:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            // InternalEketal.g:2756:3: () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            {
            // InternalEketal.g:2756:3: ()
            // InternalEketal.g:2757:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJAdditionalXVariableDeclarationAccess().getXJAdditionalXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2763:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:2764:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:2764:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:2765:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:2782:3: (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==46) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalEketal.g:2783:4: otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXJAdditionalXVariableDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:2787:4: ( (lv_right_3_0= ruleXExpression ) )
                    // InternalEketal.g:2788:5: (lv_right_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:2788:5: (lv_right_3_0= ruleXExpression )
                    // InternalEketal.g:2789:6: lv_right_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getRightXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJAdditionalXVariableDeclaration"


    // $ANTLR start "entryRuleXAssignment"
    // InternalEketal.g:2811:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalEketal.g:2811:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalEketal.g:2812:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalEketal.g:2818:1: ruleXAssignment returns [EObject current=null] : ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_value_13_0 = null;

        EObject this_XOrExpression_14 = null;

        EObject lv_then_17_0 = null;

        EObject lv_else_19_0 = null;

        EObject lv_rightOperand_22_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2824:2: ( ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) )
            // InternalEketal.g:2825:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            {
            // InternalEketal.g:2825:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            int alt51=3;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalEketal.g:2826:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:2826:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    // InternalEketal.g:2827:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:2827:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) )
                    // InternalEketal.g:2828:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    {
                    // InternalEketal.g:2855:5: ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    // InternalEketal.g:2856:6: () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign
                    {
                    // InternalEketal.g:2856:6: ()
                    // InternalEketal.g:2857:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXJAssignmentAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:2863:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:2864:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:2864:7: ( ruleFeatureCallID )
                    // InternalEketal.g:2865:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_41);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_2());
                      					
                    }
                    // InternalEketal.g:2883:6: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:2884:7: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:2884:7: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:2885:8: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_3_0());
                      							
                    }
                    pushFollow(FOLLOW_42);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      								}
                      								add(
                      									current,
                      									"indexes",
                      									lv_indexes_3_0,
                      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,48,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_4());
                      					
                    }
                    // InternalEketal.g:2906:6: (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==47) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    // InternalEketal.g:2907:7: otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_5_0());
                    	      						
                    	    }
                    	    // InternalEketal.g:2911:7: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:2912:8: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:2912:8: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:2913:9: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_5_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"indexes",
                    	      										lv_indexes_6_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,48,FOLLOW_43); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_5_2());
                    	      						
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_0_0_6());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:2944:4: ( (lv_value_9_0= ruleXAssignment ) )
                    // InternalEketal.g:2945:5: (lv_value_9_0= ruleXAssignment )
                    {
                    // InternalEketal.g:2945:5: (lv_value_9_0= ruleXAssignment )
                    // InternalEketal.g:2946:6: lv_value_9_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_9_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_9_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2965:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:2965:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    // InternalEketal.g:2966:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:2966:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
                    // InternalEketal.g:2967:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    {
                    // InternalEketal.g:2978:5: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    // InternalEketal.g:2979:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
                    {
                    // InternalEketal.g:2979:6: ()
                    // InternalEketal.g:2980:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXAssignmentAction_1_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:2986:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:2987:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:2987:7: ( ruleFeatureCallID )
                    // InternalEketal.g:2988:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_43);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_1_0_0_2());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3011:4: ( (lv_value_13_0= ruleXAssignment ) )
                    // InternalEketal.g:3012:5: (lv_value_13_0= ruleXAssignment )
                    {
                    // InternalEketal.g:3012:5: (lv_value_13_0= ruleXAssignment )
                    // InternalEketal.g:3013:6: lv_value_13_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_13_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_13_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:3032:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    {
                    // InternalEketal.g:3032:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    // InternalEketal.g:3033:4: this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_44);
                    this_XOrExpression_14=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:3041:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    int alt50=3;
                    alt50 = dfa50.predict(input);
                    switch (alt50) {
                        case 1 :
                            // InternalEketal.g:3042:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            {
                            // InternalEketal.g:3042:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            // InternalEketal.g:3043:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) )
                            {
                            // InternalEketal.g:3043:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) )
                            // InternalEketal.g:3044:7: ( ( () '?' ) )=> ( () otherlv_16= '?' )
                            {
                            // InternalEketal.g:3050:7: ( () otherlv_16= '?' )
                            // InternalEketal.g:3051:8: () otherlv_16= '?'
                            {
                            // InternalEketal.g:3051:8: ()
                            // InternalEketal.g:3052:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXJConditionalExpressionIfAction_2_1_0_0_0_0(),
                              										current);
                              								
                            }

                            }

                            otherlv_16=(Token)match(input,49,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_16, grammarAccess.getXAssignmentAccess().getQuestionMarkKeyword_2_1_0_0_0_1());
                              							
                            }

                            }


                            }

                            // InternalEketal.g:3064:6: ( (lv_then_17_0= ruleXExpression ) )
                            // InternalEketal.g:3065:7: (lv_then_17_0= ruleXExpression )
                            {
                            // InternalEketal.g:3065:7: (lv_then_17_0= ruleXExpression )
                            // InternalEketal.g:3066:8: lv_then_17_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getThenXExpressionParserRuleCall_2_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_9);
                            lv_then_17_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"then",
                              									lv_then_17_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_18=(Token)match(input,20,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getXAssignmentAccess().getColonKeyword_2_1_0_2());
                              					
                            }
                            // InternalEketal.g:3087:6: ( (lv_else_19_0= ruleXExpression ) )
                            // InternalEketal.g:3088:7: (lv_else_19_0= ruleXExpression )
                            {
                            // InternalEketal.g:3088:7: (lv_else_19_0= ruleXExpression )
                            // InternalEketal.g:3089:8: lv_else_19_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getElseXExpressionParserRuleCall_2_1_0_3_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_19_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"else",
                              									lv_else_19_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:3108:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            {
                            // InternalEketal.g:3108:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            // InternalEketal.g:3109:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            {
                            // InternalEketal.g:3109:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalEketal.g:3110:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalEketal.g:3120:7: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalEketal.g:3121:8: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalEketal.g:3121:8: ()
                            // InternalEketal.g:3122:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_2_1_1_0_0_0(),
                              										current);
                              								
                            }

                            }

                            // InternalEketal.g:3128:8: ( ( ruleOpMultiAssign ) )
                            // InternalEketal.g:3129:9: ( ruleOpMultiAssign )
                            {
                            // InternalEketal.g:3129:9: ( ruleOpMultiAssign )
                            // InternalEketal.g:3130:10: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              										if (current==null) {
                              											current = createModelElement(grammarAccess.getXAssignmentRule());
                              										}
                              									
                            }
                            if ( state.backtracking==0 ) {

                              										newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_2_1_1_0_0_1_0());
                              									
                            }
                            pushFollow(FOLLOW_38);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										afterParserOrEnumRuleCall();
                              									
                            }

                            }


                            }


                            }


                            }

                            // InternalEketal.g:3146:6: ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            // InternalEketal.g:3147:7: (lv_rightOperand_22_0= ruleXAssignment )
                            {
                            // InternalEketal.g:3147:7: (lv_rightOperand_22_0= ruleXAssignment )
                            // InternalEketal.g:3148:8: lv_rightOperand_22_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_22_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"rightOperand",
                              									lv_rightOperand_22_0,
                              									"jbase.Jbase.XAssignment");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalEketal.g:3172:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalEketal.g:3172:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalEketal.g:3173:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalEketal.g:3179:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:3185:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalEketal.g:3186:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalEketal.g:3186:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt53=10;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt53=1;
                }
                break;
            case 51:
                {
                alt53=2;
                }
                break;
            case 52:
                {
                alt53=3;
                }
                break;
            case 53:
                {
                alt53=4;
                }
                break;
            case 54:
                {
                alt53=5;
                }
                break;
            case 55:
                {
                alt53=6;
                }
                break;
            case 56:
                {
                alt53=7;
                }
                break;
            case 57:
                {
                alt53=8;
                }
                break;
            case 58:
                {
                alt53=9;
                }
                break;
            case 59:
                {
                alt53=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalEketal.g:3187:3: kw= '+='
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:3193:3: kw= '-='
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3199:3: kw= '*='
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3205:3: kw= '/='
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:3211:3: kw= '%='
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:3217:3: kw= '&='
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:3223:3: kw= '|='
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalEketal.g:3229:3: kw= '^='
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:3235:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:3235:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalEketal.g:3236:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,58,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_0());
                      			
                    }
                    kw=(Token)match(input,58,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_1());
                      			
                    }
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_8_2());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:3253:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalEketal.g:3253:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalEketal.g:3254:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_0());
                      			
                    }
                    // InternalEketal.g:3259:4: (kw= '>' )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==59) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalEketal.g:3260:5: kw= '>'
                            {
                            kw=(Token)match(input,59,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:3276:1: entryRuleXJFeatureCallWithArrayAccess returns [EObject current=null] : iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF ;
    public final EObject entryRuleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJFeatureCallWithArrayAccess = null;


        try {
            // InternalEketal.g:3276:69: (iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF )
            // InternalEketal.g:3277:2: iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJFeatureCallWithArrayAccess=ruleXJFeatureCallWithArrayAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJFeatureCallWithArrayAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJFeatureCallWithArrayAccess"


    // $ANTLR start "ruleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:3283:1: ruleXJFeatureCallWithArrayAccess returns [EObject current=null] : (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) ;
    public final EObject ruleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_XFeatureCall_0 = null;

        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3289:2: ( (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) )
            // InternalEketal.g:3290:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            {
            // InternalEketal.g:3290:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            // InternalEketal.g:3291:3: this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_34);
            this_XFeatureCall_0=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:3299:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalEketal.g:3300:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    {
                    // InternalEketal.g:3324:4: ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    // InternalEketal.g:3325:5: () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    {
                    // InternalEketal.g:3325:5: ()
                    // InternalEketal.g:3326:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXJArrayAccessExpressionArrayAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_2=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_1());
                      				
                    }
                    // InternalEketal.g:3336:5: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:3337:6: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:3337:6: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:3338:7: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_42);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                      							}
                      							add(
                      								current,
                      								"indexes",
                      								lv_indexes_3_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,48,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_3());
                      				
                    }
                    // InternalEketal.g:3359:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop54:
                    do {
                        int alt54=2;
                        alt54 = dfa54.predict(input);
                        switch (alt54) {
                    	case 1 :
                    	    // InternalEketal.g:3360:6: ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    // InternalEketal.g:3360:6: ( ( '[' )=>otherlv_5= '[' )
                    	    // InternalEketal.g:3361:7: ( '[' )=>otherlv_5= '['
                    	    {
                    	    otherlv_5=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_4_0());
                    	      						
                    	    }

                    	    }

                    	    // InternalEketal.g:3367:6: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:3368:7: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:3368:7: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:3369:8: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"indexes",
                    	      									lv_indexes_6_0,
                    	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,48,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_4_2());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJFeatureCallWithArrayAccess"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalEketal.g:3397:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalEketal.g:3397:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalEketal.g:3398:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalEketal.g:3404:1: ruleXFeatureCall returns [EObject current=null] : ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token lv_explicitOperationCall_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_featureCallArguments_3_0 = null;

        EObject lv_featureCallArguments_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3410:2: ( ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) )
            // InternalEketal.g:3411:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            {
            // InternalEketal.g:3411:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            // InternalEketal.g:3412:3: () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            {
            // InternalEketal.g:3412:3: ()
            // InternalEketal.g:3413:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3419:3: ( ( ruleIdOrSuper ) )
            // InternalEketal.g:3420:4: ( ruleIdOrSuper )
            {
            // InternalEketal.g:3420:4: ( ruleIdOrSuper )
            // InternalEketal.g:3421:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_49);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:3435:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalEketal.g:3436:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')'
                    {
                    // InternalEketal.g:3436:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) )
                    // InternalEketal.g:3437:5: ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' )
                    {
                    // InternalEketal.g:3441:5: (lv_explicitOperationCall_2_0= '(' )
                    // InternalEketal.g:3442:6: lv_explicitOperationCall_2_0= '('
                    {
                    lv_explicitOperationCall_2_0=(Token)match(input,22,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_2_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3454:4: ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==RULE_ID||(LA57_0>=RULE_CHARACTER && LA57_0<=RULE_DECIMAL)||LA57_0==18||LA57_0==22||LA57_0==28||(LA57_0>=40 && LA57_0<=41)||LA57_0==61||(LA57_0>=82 && LA57_0<=84)||(LA57_0>=87 && LA57_0<=88)||(LA57_0>=90 && LA57_0<=95)) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalEketal.g:3455:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:3455:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) )
                            // InternalEketal.g:3456:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            {
                            // InternalEketal.g:3456:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            // InternalEketal.g:3457:7: lv_featureCallArguments_3_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_12);
                            lv_featureCallArguments_3_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_3_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:3474:5: (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            loop56:
                            do {
                                int alt56=2;
                                int LA56_0 = input.LA(1);

                                if ( (LA56_0==23) ) {
                                    alt56=1;
                                }


                                switch (alt56) {
                            	case 1 :
                            	    // InternalEketal.g:3475:6: otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:3479:6: ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    // InternalEketal.g:3480:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:3480:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    // InternalEketal.g:3481:8: lv_featureCallArguments_5_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_featureCallArguments_5_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"featureCallArguments",
                            	      									lv_featureCallArguments_5_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop56;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalEketal.g:3509:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalEketal.g:3509:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalEketal.g:3510:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalEketal.g:3516:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_explicitTypeArguments_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3522:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) )
            // InternalEketal.g:3523:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            {
            // InternalEketal.g:3523:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            // InternalEketal.g:3524:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            {
            // InternalEketal.g:3524:3: ()
            // InternalEketal.g:3525:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXJConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,61,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalEketal.g:3535:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:3536:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:3536:4: ( ruleQualifiedName )
            // InternalEketal.g:3537:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_51);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:3551:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalEketal.g:3552:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>'
                    {
                    // InternalEketal.g:3552:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) )
                    // InternalEketal.g:3553:5: ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' )
                    {
                    // InternalEketal.g:3557:5: (lv_explicitTypeArguments_3_0= '<' )
                    // InternalEketal.g:3558:6: lv_explicitTypeArguments_3_0= '<'
                    {
                    lv_explicitTypeArguments_3_0=(Token)match(input,58,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitTypeArguments_3_0, grammarAccess.getXConstructorCallAccess().getExplicitTypeArgumentsLessThanSignKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitTypeArguments", true, "<");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3570:4: ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==RULE_ID||LA60_0==49) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalEketal.g:3571:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            {
                            // InternalEketal.g:3571:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                            // InternalEketal.g:3572:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            {
                            // InternalEketal.g:3572:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            // InternalEketal.g:3573:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_53);
                            lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"typeArguments",
                              								lv_typeArguments_4_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:3590:5: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            loop59:
                            do {
                                int alt59=2;
                                int LA59_0 = input.LA(1);

                                if ( (LA59_0==23) ) {
                                    alt59=1;
                                }


                                switch (alt59) {
                            	case 1 :
                            	    // InternalEketal.g:3591:6: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    {
                            	    otherlv_5=(Token)match(input,23,FOLLOW_54); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:3595:6: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    // InternalEketal.g:3596:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    {
                            	    // InternalEketal.g:3596:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    // InternalEketal.g:3597:8: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_53);
                            	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"typeArguments",
                            	      									lv_typeArguments_6_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop59;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalEketal.g:3621:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            int alt64=2;
            alt64 = dfa64.predict(input);
            switch (alt64) {
                case 1 :
                    // InternalEketal.g:3622:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')'
                    {
                    // InternalEketal.g:3622:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalEketal.g:3623:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalEketal.g:3627:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalEketal.g:3628:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,22,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3640:4: ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==RULE_ID||(LA63_0>=RULE_CHARACTER && LA63_0<=RULE_DECIMAL)||LA63_0==18||LA63_0==22||LA63_0==28||(LA63_0>=40 && LA63_0<=41)||LA63_0==61||(LA63_0>=82 && LA63_0<=84)||(LA63_0>=87 && LA63_0<=88)||(LA63_0>=90 && LA63_0<=95)) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalEketal.g:3641:5: ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:3641:5: ( (lv_arguments_9_0= ruleXExpression ) )
                            // InternalEketal.g:3642:6: (lv_arguments_9_0= ruleXExpression )
                            {
                            // InternalEketal.g:3642:6: (lv_arguments_9_0= ruleXExpression )
                            // InternalEketal.g:3643:7: lv_arguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_12);
                            lv_arguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:3660:5: (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==23) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalEketal.g:3661:6: otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_10, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:3665:6: ( (lv_arguments_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:3666:7: (lv_arguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:3666:7: (lv_arguments_11_0= ruleXExpression )
                            	    // InternalEketal.g:3667:8: lv_arguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_arguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"arguments",
                            	      									lv_arguments_11_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXJArrayConstructorCall"
    // InternalEketal.g:3695:1: entryRuleXJArrayConstructorCall returns [EObject current=null] : iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF ;
    public final EObject entryRuleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayConstructorCall = null;


        try {
            // InternalEketal.g:3695:63: (iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF )
            // InternalEketal.g:3696:2: iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayConstructorCall=ruleXJArrayConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayConstructorCall"


    // $ANTLR start "ruleXJArrayConstructorCall"
    // InternalEketal.g:3702:1: ruleXJArrayConstructorCall returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) ;
    public final EObject ruleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_dimensions_3_0 = null;

        EObject lv_indexes_4_0 = null;

        EObject lv_dimensions_6_0 = null;

        EObject lv_indexes_7_0 = null;

        EObject lv_arrayLiteral_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3708:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) )
            // InternalEketal.g:3709:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            {
            // InternalEketal.g:3709:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            // InternalEketal.g:3710:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            {
            // InternalEketal.g:3710:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) )
            // InternalEketal.g:3711:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            {
            // InternalEketal.g:3727:4: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            // InternalEketal.g:3728:5: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            {
            // InternalEketal.g:3728:5: ()
            // InternalEketal.g:3729:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJArrayConstructorCallAccess().getXJArrayConstructorCallAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,61,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJArrayConstructorCallAccess().getNewKeyword_0_0_1());
              				
            }
            // InternalEketal.g:3739:5: ( ( ruleQualifiedName ) )
            // InternalEketal.g:3740:6: ( ruleQualifiedName )
            {
            // InternalEketal.g:3740:6: ( ruleQualifiedName )
            // InternalEketal.g:3741:7: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJArrayConstructorCallRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getTypeJvmTypeCrossReference_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_41);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:3755:5: ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            // InternalEketal.g:3756:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            {
            // InternalEketal.g:3756:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            // InternalEketal.g:3757:7: lv_dimensions_3_0= ruleXJArrayDimension
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_55);
            lv_dimensions_3_0=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
              							}
              							add(
              								current,
              								"dimensions",
              								lv_dimensions_3_0,
              								"jbase.Jbase.XJArrayDimension");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:3776:3: ( (lv_indexes_4_0= ruleXExpression ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ID||(LA65_0>=RULE_CHARACTER && LA65_0<=RULE_DECIMAL)||LA65_0==18||LA65_0==22||LA65_0==28||(LA65_0>=40 && LA65_0<=41)||LA65_0==61||(LA65_0>=82 && LA65_0<=84)||(LA65_0>=87 && LA65_0<=88)||(LA65_0>=90 && LA65_0<=95)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEketal.g:3777:4: (lv_indexes_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:3777:4: (lv_indexes_4_0= ruleXExpression )
                    // InternalEketal.g:3778:5: lv_indexes_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_42);
                    lv_indexes_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"indexes",
                      						lv_indexes_4_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,48,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:3799:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalEketal.g:3800:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']'
            	    {
            	    // InternalEketal.g:3800:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) )
            	    // InternalEketal.g:3801:5: ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension )
            	    {
            	    // InternalEketal.g:3805:5: (lv_dimensions_6_0= ruleXJArrayDimension )
            	    // InternalEketal.g:3806:6: lv_dimensions_6_0= ruleXJArrayDimension
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_dimensions_6_0=ruleXJArrayDimension();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"dimensions",
            	      							lv_dimensions_6_0,
            	      							"jbase.Jbase.XJArrayDimension");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:3823:4: ( (lv_indexes_7_0= ruleXExpression ) )?
            	    int alt66=2;
            	    int LA66_0 = input.LA(1);

            	    if ( (LA66_0==RULE_ID||(LA66_0>=RULE_CHARACTER && LA66_0<=RULE_DECIMAL)||LA66_0==18||LA66_0==22||LA66_0==28||(LA66_0>=40 && LA66_0<=41)||LA66_0==61||(LA66_0>=82 && LA66_0<=84)||(LA66_0>=87 && LA66_0<=88)||(LA66_0>=90 && LA66_0<=95)) ) {
            	        alt66=1;
            	    }
            	    switch (alt66) {
            	        case 1 :
            	            // InternalEketal.g:3824:5: (lv_indexes_7_0= ruleXExpression )
            	            {
            	            // InternalEketal.g:3824:5: (lv_indexes_7_0= ruleXExpression )
            	            // InternalEketal.g:3825:6: lv_indexes_7_0= ruleXExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_3_1_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_42);
            	            lv_indexes_7_0=ruleXExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	              						}
            	              						add(
            	              							current,
            	              							"indexes",
            	              							lv_indexes_7_0,
            	              							"org.eclipse.xtext.xbase.Xbase.XExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_8=(Token)match(input,48,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            // InternalEketal.g:3847:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalEketal.g:3848:4: ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    {
                    // InternalEketal.g:3852:4: (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    // InternalEketal.g:3853:5: lv_arrayLiteral_9_0= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getArrayLiteralXJArrayLiteralParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arrayLiteral_9_0=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					set(
                      						current,
                      						"arrayLiteral",
                      						lv_arrayLiteral_9_0,
                      						"jbase.Jbase.XJArrayLiteral");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayConstructorCall"


    // $ANTLR start "entryRuleXJArrayDimension"
    // InternalEketal.g:3874:1: entryRuleXJArrayDimension returns [EObject current=null] : iv_ruleXJArrayDimension= ruleXJArrayDimension EOF ;
    public final EObject entryRuleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayDimension = null;


        try {
            // InternalEketal.g:3874:57: (iv_ruleXJArrayDimension= ruleXJArrayDimension EOF )
            // InternalEketal.g:3875:2: iv_ruleXJArrayDimension= ruleXJArrayDimension EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayDimensionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayDimension=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayDimension; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayDimension"


    // $ANTLR start "ruleXJArrayDimension"
    // InternalEketal.g:3881:1: ruleXJArrayDimension returns [EObject current=null] : ( () otherlv_1= '[' ) ;
    public final EObject ruleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:3887:2: ( ( () otherlv_1= '[' ) )
            // InternalEketal.g:3888:2: ( () otherlv_1= '[' )
            {
            // InternalEketal.g:3888:2: ( () otherlv_1= '[' )
            // InternalEketal.g:3889:3: () otherlv_1= '['
            {
            // InternalEketal.g:3889:3: ()
            // InternalEketal.g:3890:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayDimensionAccess().getXJArrayDimensionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayDimensionAccess().getLeftSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayDimension"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalEketal.g:3904:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalEketal.g:3904:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalEketal.g:3905:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalEketal.g:3911:1: ruleXCastedExpression returns [EObject current=null] : ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_target_4_0 = null;

        EObject this_XPostfixOperation_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:3917:2: ( ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) )
            // InternalEketal.g:3918:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            {
            // InternalEketal.g:3918:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalEketal.g:3919:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    {
                    // InternalEketal.g:3919:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    // InternalEketal.g:3920:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    {
                    // InternalEketal.g:3937:4: ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    // InternalEketal.g:3938:5: () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) )
                    {
                    // InternalEketal.g:3938:5: ()
                    // InternalEketal.g:3939:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getXCastedExpressionAccess().getXCastedExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,22,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getXCastedExpressionAccess().getLeftParenthesisKeyword_0_0_1());
                      				
                    }
                    // InternalEketal.g:3949:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:3950:6: (lv_type_2_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:3950:6: (lv_type_2_0= ruleJvmTypeReference )
                    // InternalEketal.g:3951:7: lv_type_2_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_type_2_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"jbase.Jbase.JvmTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,24,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXCastedExpressionAccess().getRightParenthesisKeyword_0_0_3());
                      				
                    }
                    // InternalEketal.g:3972:5: ( (lv_target_4_0= ruleXExpression ) )
                    // InternalEketal.g:3973:6: (lv_target_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:3973:6: (lv_target_4_0= ruleXExpression )
                    // InternalEketal.g:3974:7: lv_target_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTargetXExpressionParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"target",
                      								lv_target_4_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:3994:3: this_XPostfixOperation_5= ruleXPostfixOperation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XPostfixOperation_5=ruleXPostfixOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XPostfixOperation_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalEketal.g:4006:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalEketal.g:4006:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalEketal.g:4007:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalEketal.g:4013:1: ruleXPostfixOperation returns [EObject current=null] : ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_operand_2_0 = null;

        EObject this_XMemberFeatureCall_3 = null;

        EObject lv_indexes_8_0 = null;

        EObject lv_indexes_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4019:2: ( ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) )
            // InternalEketal.g:4020:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            {
            // InternalEketal.g:4020:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==87) && (synpred26_InternalEketal())) {
                alt72=1;
            }
            else if ( (LA72_0==88) && (synpred26_InternalEketal())) {
                alt72=1;
            }
            else if ( (LA72_0==RULE_ID||(LA72_0>=RULE_CHARACTER && LA72_0<=RULE_DECIMAL)||LA72_0==18||LA72_0==22||(LA72_0>=40 && LA72_0<=41)||LA72_0==61||(LA72_0>=90 && LA72_0<=95)) ) {
                alt72=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalEketal.g:4021:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    {
                    // InternalEketal.g:4021:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    // InternalEketal.g:4022:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    {
                    // InternalEketal.g:4022:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                    // InternalEketal.g:4023:5: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalEketal.g:4033:5: ( () ( ( ruleOpPostfix ) ) )
                    // InternalEketal.g:4034:6: () ( ( ruleOpPostfix ) )
                    {
                    // InternalEketal.g:4034:6: ()
                    // InternalEketal.g:4035:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXPostfixOperationAccess().getXJPrefixOperationAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:4041:6: ( ( ruleOpPostfix ) )
                    // InternalEketal.g:4042:7: ( ruleOpPostfix )
                    {
                    // InternalEketal.g:4042:7: ( ruleOpPostfix )
                    // InternalEketal.g:4043:8: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_38);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalEketal.g:4059:4: ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    // InternalEketal.g:4060:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    {
                    // InternalEketal.g:4060:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    // InternalEketal.g:4061:6: lv_operand_2_0= ruleXMemberFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXPostfixOperationAccess().getOperandXMemberFeatureCallParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"jbase.Jbase.XMemberFeatureCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:4080:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    {
                    // InternalEketal.g:4080:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    // InternalEketal.g:4081:4: this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_57);
                    this_XMemberFeatureCall_3=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XMemberFeatureCall_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:4089:4: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    int alt71=3;
                    switch ( input.LA(1) ) {
                        case 87:
                            {
                            int LA71_1 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt71=1;
                            }
                            }
                            break;
                        case 88:
                            {
                            int LA71_2 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt71=1;
                            }
                            }
                            break;
                        case 47:
                            {
                            int LA71_3 = input.LA(2);

                            if ( (synpred29_InternalEketal()) ) {
                                alt71=2;
                            }
                            }
                            break;
                    }

                    switch (alt71) {
                        case 1 :
                            // InternalEketal.g:4090:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            {
                            // InternalEketal.g:4090:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            // InternalEketal.g:4091:6: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                            {
                            // InternalEketal.g:4101:6: ( () ( ( ruleOpPostfix ) ) )
                            // InternalEketal.g:4102:7: () ( ( ruleOpPostfix ) )
                            {
                            // InternalEketal.g:4102:7: ()
                            // InternalEketal.g:4103:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalEketal.g:4109:7: ( ( ruleOpPostfix ) )
                            // InternalEketal.g:4110:8: ( ruleOpPostfix )
                            {
                            // InternalEketal.g:4110:8: ( ruleOpPostfix )
                            // InternalEketal.g:4111:9: ruleOpPostfix
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXPostfixOperationRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            ruleOpPostfix();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:4128:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            {
                            // InternalEketal.g:4128:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            // InternalEketal.g:4129:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            {
                            // InternalEketal.g:4153:6: ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            // InternalEketal.g:4154:7: () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            {
                            // InternalEketal.g:4154:7: ()
                            // InternalEketal.g:4155:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXJArrayAccessExpressionArrayAction_1_1_1_0_0(),
                              									current);
                              							
                            }

                            }

                            otherlv_7=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_7, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_1());
                              						
                            }
                            // InternalEketal.g:4165:7: ( (lv_indexes_8_0= ruleXExpression ) )
                            // InternalEketal.g:4166:8: (lv_indexes_8_0= ruleXExpression )
                            {
                            // InternalEketal.g:4166:8: (lv_indexes_8_0= ruleXExpression )
                            // InternalEketal.g:4167:9: lv_indexes_8_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_2_0());
                              								
                            }
                            pushFollow(FOLLOW_42);
                            lv_indexes_8_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                              									}
                              									add(
                              										current,
                              										"indexes",
                              										lv_indexes_8_0,
                              										"org.eclipse.xtext.xbase.Xbase.XExpression");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_9=(Token)match(input,48,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_3());
                              						
                            }
                            // InternalEketal.g:4188:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            loop70:
                            do {
                                int alt70=2;
                                alt70 = dfa70.predict(input);
                                switch (alt70) {
                            	case 1 :
                            	    // InternalEketal.g:4189:8: ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']'
                            	    {
                            	    // InternalEketal.g:4189:8: ( ( '[' )=>otherlv_10= '[' )
                            	    // InternalEketal.g:4190:9: ( '[' )=>otherlv_10= '['
                            	    {
                            	    otherlv_10=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_10, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_4_0());
                            	      								
                            	    }

                            	    }

                            	    // InternalEketal.g:4196:8: ( (lv_indexes_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:4197:9: (lv_indexes_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4197:9: (lv_indexes_11_0= ruleXExpression )
                            	    // InternalEketal.g:4198:10: lv_indexes_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_4_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_42);
                            	    lv_indexes_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"indexes",
                            	      											lv_indexes_11_0,
                            	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }

                            	    otherlv_12=(Token)match(input,48,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								newLeafNode(otherlv_12, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_4_2());
                            	      							
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop70;
                                }
                            } while (true);


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalEketal.g:4228:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalEketal.g:4228:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalEketal.g:4229:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalEketal.g:4235:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token lv_explicitOperationCall_13_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject this_XPrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_arrayDimensions_2_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_memberCallArguments_14_0 = null;

        EObject lv_memberCallArguments_16_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4241:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) )
            // InternalEketal.g:4242:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            {
            // InternalEketal.g:4242:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            // InternalEketal.g:4243:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_58);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:4251:3: ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            loop77:
            do {
                int alt77=4;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==47) ) {
                    int LA77_2 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt77=1;
                    }


                }
                else if ( (LA77_0==39) ) {
                    int LA77_3 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt77=1;
                    }
                    else if ( (synpred32_InternalEketal()) ) {
                        alt77=2;
                    }
                    else if ( (synpred33_InternalEketal()) ) {
                        alt77=3;
                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalEketal.g:4252:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    {
            	    // InternalEketal.g:4252:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    // InternalEketal.g:4253:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    {
            	    // InternalEketal.g:4265:5: ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    // InternalEketal.g:4266:6: () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class'
            	    {
            	    // InternalEketal.g:4266:6: ()
            	    // InternalEketal.g:4267:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMemberFeatureCallAccess().getXJClassObjectTypeExpressionAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:4273:6: ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )*
            	    loop73:
            	    do {
            	        int alt73=2;
            	        int LA73_0 = input.LA(1);

            	        if ( (LA73_0==47) ) {
            	            alt73=1;
            	        }


            	        switch (alt73) {
            	    	case 1 :
            	    	    // InternalEketal.g:4274:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    {
            	    	    // InternalEketal.g:4274:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    // InternalEketal.g:4275:8: lv_arrayDimensions_2_0= ruleArrayBrackets
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArrayDimensionsArrayBracketsParserRuleCall_1_0_0_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FOLLOW_59);
            	    	    lv_arrayDimensions_2_0=ruleArrayBrackets();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"arrayDimensions",
            	    	      									lv_arrayDimensions_2_0,
            	    	      									"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop73;
            	        }
            	    } while (true);

            	    otherlv_3=(Token)match(input,39,FOLLOW_60); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_3, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_2());
            	      					
            	    }
            	    otherlv_4=(Token)match(input,62,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_4, grammarAccess.getXMemberFeatureCallAccess().getClassKeyword_1_0_0_3());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:4303:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    {
            	    // InternalEketal.g:4303:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    // InternalEketal.g:4304:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
            	    {
            	    // InternalEketal.g:4304:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalEketal.g:4305:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalEketal.g:4317:6: ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalEketal.g:4318:7: () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalEketal.g:4318:7: ()
            	    // InternalEketal.g:4319:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_6=(Token)match(input,39,FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_6, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1());
            	      						
            	    }
            	    // InternalEketal.g:4329:7: ( ( ruleFeatureCallID ) )
            	    // InternalEketal.g:4330:8: ( ruleFeatureCallID )
            	    {
            	    // InternalEketal.g:4330:8: ( ruleFeatureCallID )
            	    // InternalEketal.g:4331:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_43);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:4354:5: ( (lv_value_9_0= ruleXAssignment ) )
            	    // InternalEketal.g:4355:6: (lv_value_9_0= ruleXAssignment )
            	    {
            	    // InternalEketal.g:4355:6: (lv_value_9_0= ruleXAssignment )
            	    // InternalEketal.g:4356:7: lv_value_9_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_value_9_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_9_0,
            	      								"jbase.Jbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalEketal.g:4375:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    {
            	    // InternalEketal.g:4375:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    // InternalEketal.g:4376:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    {
            	    // InternalEketal.g:4376:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) )
            	    // InternalEketal.g:4377:6: ( ( () '.' ) )=> ( () otherlv_11= '.' )
            	    {
            	    // InternalEketal.g:4383:6: ( () otherlv_11= '.' )
            	    // InternalEketal.g:4384:7: () otherlv_11= '.'
            	    {
            	    // InternalEketal.g:4384:7: ()
            	    // InternalEketal.g:4385:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_2_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_11=(Token)match(input,39,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:4397:5: ( ( ruleIdOrSuper ) )
            	    // InternalEketal.g:4398:6: ( ruleIdOrSuper )
            	    {
            	    // InternalEketal.g:4398:6: ( ruleIdOrSuper )
            	    // InternalEketal.g:4399:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_63);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:4413:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    int alt76=2;
            	    alt76 = dfa76.predict(input);
            	    switch (alt76) {
            	        case 1 :
            	            // InternalEketal.g:4414:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')'
            	            {
            	            // InternalEketal.g:4414:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) )
            	            // InternalEketal.g:4415:7: ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' )
            	            {
            	            // InternalEketal.g:4419:7: (lv_explicitOperationCall_13_0= '(' )
            	            // InternalEketal.g:4420:8: lv_explicitOperationCall_13_0= '('
            	            {
            	            lv_explicitOperationCall_13_0=(Token)match(input,22,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_13_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalEketal.g:4432:6: ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )?
            	            int alt75=2;
            	            int LA75_0 = input.LA(1);

            	            if ( (LA75_0==RULE_ID||(LA75_0>=RULE_CHARACTER && LA75_0<=RULE_DECIMAL)||LA75_0==18||LA75_0==22||LA75_0==28||(LA75_0>=40 && LA75_0<=41)||LA75_0==61||(LA75_0>=82 && LA75_0<=84)||(LA75_0>=87 && LA75_0<=88)||(LA75_0>=90 && LA75_0<=95)) ) {
            	                alt75=1;
            	            }
            	            switch (alt75) {
            	                case 1 :
            	                    // InternalEketal.g:4433:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalEketal.g:4433:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) )
            	                    // InternalEketal.g:4434:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    {
            	                    // InternalEketal.g:4434:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    // InternalEketal.g:4435:9: lv_memberCallArguments_14_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_12);
            	                    lv_memberCallArguments_14_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_14_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }

            	                    // InternalEketal.g:4452:7: (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    loop74:
            	                    do {
            	                        int alt74=2;
            	                        int LA74_0 = input.LA(1);

            	                        if ( (LA74_0==23) ) {
            	                            alt74=1;
            	                        }


            	                        switch (alt74) {
            	                    	case 1 :
            	                    	    // InternalEketal.g:4453:8: otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_15=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      								newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_2_2_1_1_0());
            	                    	      							
            	                    	    }
            	                    	    // InternalEketal.g:4457:8: ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    // InternalEketal.g:4458:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalEketal.g:4458:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    // InternalEketal.g:4459:10: lv_memberCallArguments_16_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_1_1_0());
            	                    	      									
            	                    	    }
            	                    	    pushFollow(FOLLOW_12);
            	                    	    lv_memberCallArguments_16_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										if (current==null) {
            	                    	      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      										}
            	                    	      										add(
            	                    	      											current,
            	                    	      											"memberCallArguments",
            	                    	      											lv_memberCallArguments_16_0,
            	                    	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      										afterParserOrEnumRuleCall();
            	                    	      									
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop74;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            otherlv_17=(Token)match(input,24,FOLLOW_58); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_17, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_2_2());
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalEketal.g:4489:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalEketal.g:4489:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalEketal.g:4490:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalEketal.g:4496:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4502:2: ( ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:4503:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:4503:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:4504:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:4504:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalEketal.g:4505:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalEketal.g:4518:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalEketal.g:4519:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalEketal.g:4519:5: ()
            // InternalEketal.g:4520:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,63,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalEketal.g:4534:5: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:4535:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:4535:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:4536:7: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_9);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"jbase.Jbase.FullJvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,20,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalEketal.g:4559:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalEketal.g:4560:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalEketal.g:4560:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalEketal.g:4561:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:4582:3: ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:4583:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:4583:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            // InternalEketal.g:4584:5: lv_eachExpression_7_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalEketal.g:4605:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalEketal.g:4605:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalEketal.g:4606:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalEketal.g:4612:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4618:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:4619:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:4619:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:4620:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:4620:3: ()
            // InternalEketal.g:4621:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,63,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:4635:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_ID||(LA79_0>=RULE_CHARACTER && LA79_0<=RULE_DECIMAL)||LA79_0==18||LA79_0==22||LA79_0==28||(LA79_0>=40 && LA79_0<=42)||LA79_0==61||(LA79_0>=82 && LA79_0<=84)||(LA79_0>=87 && LA79_0<=88)||(LA79_0>=90 && LA79_0<=95)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalEketal.g:4636:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalEketal.g:4636:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalEketal.g:4637:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalEketal.g:4637:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalEketal.g:4638:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4655:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==23) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // InternalEketal.g:4656:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:4660:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalEketal.g:4661:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalEketal.g:4661:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalEketal.g:4662:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_66);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,16,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalEketal.g:4685:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_ID||(LA80_0>=RULE_CHARACTER && LA80_0<=RULE_DECIMAL)||LA80_0==18||LA80_0==22||LA80_0==28||(LA80_0>=40 && LA80_0<=41)||LA80_0==61||(LA80_0>=82 && LA80_0<=84)||(LA80_0>=87 && LA80_0<=88)||(LA80_0>=90 && LA80_0<=95)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalEketal.g:4686:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalEketal.g:4686:4: (lv_expression_7_0= ruleXExpression )
                    // InternalEketal.g:4687:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_67);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,16,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalEketal.g:4708:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_ID||(LA82_0>=RULE_CHARACTER && LA82_0<=RULE_DECIMAL)||LA82_0==18||LA82_0==22||LA82_0==28||(LA82_0>=40 && LA82_0<=41)||LA82_0==61||(LA82_0>=82 && LA82_0<=84)||(LA82_0>=87 && LA82_0<=88)||(LA82_0>=90 && LA82_0<=95)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalEketal.g:4709:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:4709:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalEketal.g:4710:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalEketal.g:4710:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalEketal.g:4711:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4728:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==23) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalEketal.g:4729:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:4733:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalEketal.g:4734:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:4734:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalEketal.g:4735:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,24,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalEketal.g:4758:3: ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:4759:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:4759:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            // InternalEketal.g:4760:5: lv_eachExpression_13_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalEketal.g:4781:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalEketal.g:4781:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalEketal.g:4782:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalEketal.g:4788:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4794:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) )
            // InternalEketal.g:4795:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            {
            // InternalEketal.g:4795:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            // InternalEketal.g:4796:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            {
            // InternalEketal.g:4796:3: ()
            // InternalEketal.g:4797:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:4811:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalEketal.g:4812:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalEketal.g:4812:4: (lv_if_3_0= ruleXExpression )
            // InternalEketal.g:4813:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:4834:3: ( (lv_then_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:4835:4: (lv_then_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:4835:4: (lv_then_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:4836:5: lv_then_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_68);
            lv_then_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:4853:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==64) ) {
                int LA83_1 = input.LA(2);

                if ( (synpred36_InternalEketal()) ) {
                    alt83=1;
                }
            }
            switch (alt83) {
                case 1 :
                    // InternalEketal.g:4854:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    {
                    // InternalEketal.g:4854:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalEketal.g:4855:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,64,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalEketal.g:4861:4: ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    // InternalEketal.g:4862:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    {
                    // InternalEketal.g:4862:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    // InternalEketal.g:4863:6: lv_else_7_0= ruleXJStatementOrBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXJStatementOrBlockParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXJStatementOrBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"jbase.Jbase.XJStatementOrBlock");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalEketal.g:4885:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalEketal.g:4885:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalEketal.g:4886:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalEketal.g:4892:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4898:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:4899:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:4899:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:4900:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:4900:3: ()
            // InternalEketal.g:4901:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,65,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:4915:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalEketal.g:4916:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalEketal.g:4916:4: (lv_predicate_3_0= ruleXExpression )
            // InternalEketal.g:4917:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:4938:3: ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:4939:4: (lv_body_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:4939:4: (lv_body_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:4940:5: lv_body_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalEketal.g:4961:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalEketal.g:4961:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalEketal.g:4962:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalEketal.g:4968:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4974:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalEketal.g:4975:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalEketal.g:4975:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalEketal.g:4976:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalEketal.g:4976:3: ()
            // InternalEketal.g:4977:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,66,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalEketal.g:4987:3: ( (lv_body_2_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:4988:4: (lv_body_2_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:4988:4: (lv_body_2_0= ruleXJStatementOrBlock )
            // InternalEketal.g:4989:5: lv_body_2_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_69);
            lv_body_2_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,65,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5014:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalEketal.g:5015:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalEketal.g:5015:4: (lv_predicate_5_0= ruleXExpression )
            // InternalEketal.g:5016:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalEketal.g:5041:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalEketal.g:5041:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalEketal.g:5042:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalEketal.g:5048:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_switch_3_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_default_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5054:2: ( ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) )
            // InternalEketal.g:5055:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            {
            // InternalEketal.g:5055:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            // InternalEketal.g:5056:3: () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}'
            {
            // InternalEketal.g:5056:3: ()
            // InternalEketal.g:5057:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,67,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5071:3: ( (lv_switch_3_0= ruleXExpression ) )
            // InternalEketal.g:5072:4: (lv_switch_3_0= ruleXExpression )
            {
            // InternalEketal.g:5072:4: (lv_switch_3_0= ruleXExpression )
            // InternalEketal.g:5073:5: lv_switch_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_switch_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
              					}
              					set(
              						current,
              						"switch",
              						lv_switch_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_5=(Token)match(input,18,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:5098:3: ( (lv_cases_6_0= ruleXCasePart ) )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==69) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalEketal.g:5099:4: (lv_cases_6_0= ruleXCasePart )
            	    {
            	    // InternalEketal.g:5099:4: (lv_cases_6_0= ruleXCasePart )
            	    // InternalEketal.g:5100:5: lv_cases_6_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_cases_6_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_6_0,
            	      						"jbase.Jbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            // InternalEketal.g:5117:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==68) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalEketal.g:5118:4: otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    {
                    otherlv_7=(Token)match(input,68,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_7_0());
                      			
                    }
                    otherlv_8=(Token)match(input,20,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_7_1());
                      			
                    }
                    // InternalEketal.g:5126:4: ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    // InternalEketal.g:5127:5: (lv_default_9_0= ruleXJSwitchStatements )
                    {
                    // InternalEketal.g:5127:5: (lv_default_9_0= ruleXJSwitchStatements )
                    // InternalEketal.g:5128:6: lv_default_9_0= ruleXJSwitchStatements
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXJSwitchStatementsParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    lv_default_9_0=ruleXJSwitchStatements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_9_0,
                      							"jbase.Jbase.XJSwitchStatements");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalEketal.g:5154:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalEketal.g:5154:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalEketal.g:5155:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalEketal.g:5161:1: ruleXCasePart returns [EObject current=null] : ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_case_2_0 = null;

        EObject lv_then_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5167:2: ( ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) )
            // InternalEketal.g:5168:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            {
            // InternalEketal.g:5168:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            // InternalEketal.g:5169:3: () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) )
            {
            // InternalEketal.g:5169:3: ()
            // InternalEketal.g:5170:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,69,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1());
              		
            }
            // InternalEketal.g:5180:3: ( (lv_case_2_0= ruleXExpression ) )
            // InternalEketal.g:5181:4: (lv_case_2_0= ruleXExpression )
            {
            // InternalEketal.g:5181:4: (lv_case_2_0= ruleXExpression )
            // InternalEketal.g:5182:5: lv_case_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_case_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"case",
              						lv_case_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_3());
              		
            }
            // InternalEketal.g:5203:3: ( (lv_then_4_0= ruleXJSwitchStatements ) )
            // InternalEketal.g:5204:4: (lv_then_4_0= ruleXJSwitchStatements )
            {
            // InternalEketal.g:5204:4: (lv_then_4_0= ruleXJSwitchStatements )
            // InternalEketal.g:5205:5: lv_then_4_0= ruleXJSwitchStatements
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getThenXJSwitchStatementsParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_then_4_0=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"jbase.Jbase.XJSwitchStatements");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXJSwitchStatements"
    // InternalEketal.g:5226:1: entryRuleXJSwitchStatements returns [EObject current=null] : iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF ;
    public final EObject entryRuleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSwitchStatements = null;


        try {
            // InternalEketal.g:5226:59: (iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF )
            // InternalEketal.g:5227:2: iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSwitchStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSwitchStatements=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSwitchStatements; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSwitchStatements"


    // $ANTLR start "ruleXJSwitchStatements"
    // InternalEketal.g:5233:1: ruleXJSwitchStatements returns [EObject current=null] : ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) ;
    public final EObject ruleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5239:2: ( ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) )
            // InternalEketal.g:5240:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            {
            // InternalEketal.g:5240:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            // InternalEketal.g:5241:3: () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            {
            // InternalEketal.g:5241:3: ()
            // InternalEketal.g:5242:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSwitchStatementsAccess().getXJSwitchStatementsAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:5248:3: ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==RULE_ID||(LA86_0>=RULE_CHARACTER && LA86_0<=RULE_DECIMAL)||LA86_0==16||LA86_0==18||LA86_0==22||LA86_0==28||LA86_0==31||(LA86_0>=40 && LA86_0<=42)||(LA86_0>=44 && LA86_0<=45)||LA86_0==61||LA86_0==63||(LA86_0>=65 && LA86_0<=67)||LA86_0==70||LA86_0==73||(LA86_0>=82 && LA86_0<=84)||(LA86_0>=87 && LA86_0<=88)||(LA86_0>=90 && LA86_0<=97)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalEketal.g:5249:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:5249:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:5250:5: lv_expressions_1_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJSwitchStatementsAccess().getExpressionsXJStatementOrBlockParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_expressions_1_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJSwitchStatementsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_1_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSwitchStatements"


    // $ANTLR start "entryRuleXJTryWithResourcesStatement"
    // InternalEketal.g:5271:1: entryRuleXJTryWithResourcesStatement returns [EObject current=null] : iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF ;
    public final EObject entryRuleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesStatement = null;


        try {
            // InternalEketal.g:5271:68: (iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF )
            // InternalEketal.g:5272:2: iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesStatement=ruleXJTryWithResourcesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesStatement"


    // $ANTLR start "ruleXJTryWithResourcesStatement"
    // InternalEketal.g:5278:1: ruleXJTryWithResourcesStatement returns [EObject current=null] : ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) ;
    public final EObject ruleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_openParenthesis_2_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_resourceDeclarations_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_catchClauses_6_0 = null;

        EObject lv_finallyExpression_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5284:2: ( ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) )
            // InternalEketal.g:5285:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            {
            // InternalEketal.g:5285:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            // InternalEketal.g:5286:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            {
            // InternalEketal.g:5286:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) )
            // InternalEketal.g:5287:4: ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            {
            // InternalEketal.g:5298:4: ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            // InternalEketal.g:5299:5: () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) )
            {
            // InternalEketal.g:5299:5: ()
            // InternalEketal.g:5300:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJTryWithResourcesStatementAccess().getXJTryWithResourcesStatementAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJTryWithResourcesStatementAccess().getTryKeyword_0_0_1());
              				
            }
            // InternalEketal.g:5310:5: ( (lv_openParenthesis_2_0= '(' ) )
            // InternalEketal.g:5311:6: (lv_openParenthesis_2_0= '(' )
            {
            // InternalEketal.g:5311:6: (lv_openParenthesis_2_0= '(' )
            // InternalEketal.g:5312:7: lv_openParenthesis_2_0= '('
            {
            lv_openParenthesis_2_0=(Token)match(input,22,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_openParenthesis_2_0, grammarAccess.getXJTryWithResourcesStatementAccess().getOpenParenthesisLeftParenthesisKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJTryWithResourcesStatementRule());
              							}
              							setWithLastConsumed(current, "openParenthesis", true, "(");
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:5326:3: ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==RULE_ID||LA87_0==42) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalEketal.g:5327:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    {
            	    // InternalEketal.g:5327:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    // InternalEketal.g:5328:5: lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getResourceDeclarationsXJTryWithResourcesVariableDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_resourceDeclarations_3_0=ruleXJTryWithResourcesVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"resourceDeclarations",
            	      						lv_resourceDeclarations_3_0,
            	      						"jbase.Jbase.XJTryWithResourcesVariableDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesStatementAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5349:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:5350:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:5350:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:5351:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_73);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5368:3: ( (lv_catchClauses_6_0= ruleXCatchClause ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==72) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalEketal.g:5369:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    {
            	    // InternalEketal.g:5369:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    // InternalEketal.g:5370:5: lv_catchClauses_6_0= ruleXCatchClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getCatchClausesXCatchClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_catchClauses_6_0=ruleXCatchClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"catchClauses",
            	      						lv_catchClauses_6_0,
            	      						"jbase.Jbase.XCatchClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalEketal.g:5387:3: (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==71) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalEketal.g:5388:4: otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    {
                    otherlv_7=(Token)match(input,71,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:5392:4: ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    // InternalEketal.g:5393:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:5393:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    // InternalEketal.g:5394:6: lv_finallyExpression_8_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyExpressionXBlockExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_8_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
                      						}
                      						set(
                      							current,
                      							"finallyExpression",
                      							lv_finallyExpression_8_0,
                      							"jbase.Jbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesStatement"


    // $ANTLR start "entryRuleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:5416:1: entryRuleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF ;
    public final EObject entryRuleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesVariableDeclaration = null;


        try {
            // InternalEketal.g:5416:78: (iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF )
            // InternalEketal.g:5417:2: iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesVariableDeclaration=ruleXJTryWithResourcesVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "ruleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:5423:1: ruleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5429:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalEketal.g:5430:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalEketal.g:5430:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            // InternalEketal.g:5431:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalEketal.g:5431:3: ()
            // InternalEketal.g:5432:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getXJTryWithResourcesVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:5438:3: ( (lv_final_1_0= 'final' ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==42) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalEketal.g:5439:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:5439:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:5440:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:5452:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:5453:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:5453:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:5454:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5471:3: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:5472:4: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:5472:4: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:5473:5: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getNameValidIDParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getEqualsSignKeyword_4());
              		
            }
            // InternalEketal.g:5494:3: ( (lv_right_5_0= ruleXExpression ) )
            // InternalEketal.g:5495:4: (lv_right_5_0= ruleXExpression )
            {
            // InternalEketal.g:5495:4: (lv_right_5_0= ruleXExpression )
            // InternalEketal.g:5496:5: lv_right_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getRightXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_right_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"right",
              						lv_right_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5513:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==16) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalEketal.g:5514:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalEketal.g:5514:4: (lv_semicolon_6_0= ';' )
                    // InternalEketal.g:5515:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getSemicolonSemicolonKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_6_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalEketal.g:5531:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalEketal.g:5531:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalEketal.g:5532:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalEketal.g:5538:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5544:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) )
            // InternalEketal.g:5545:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            {
            // InternalEketal.g:5545:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            // InternalEketal.g:5546:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            {
            // InternalEketal.g:5546:3: ()
            // InternalEketal.g:5547:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,70,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalEketal.g:5557:3: ( (lv_expression_2_0= ruleXBlockExpression ) )
            // InternalEketal.g:5558:4: (lv_expression_2_0= ruleXBlockExpression )
            {
            // InternalEketal.g:5558:4: (lv_expression_2_0= ruleXBlockExpression )
            // InternalEketal.g:5559:5: lv_expression_2_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXBlockExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_74);
            lv_expression_2_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5576:3: ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==72) ) {
                alt94=1;
            }
            else if ( (LA94_0==71) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalEketal.g:5577:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    {
                    // InternalEketal.g:5577:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    // InternalEketal.g:5578:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    {
                    // InternalEketal.g:5578:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt92=0;
                    loop92:
                    do {
                        int alt92=2;
                        int LA92_0 = input.LA(1);

                        if ( (LA92_0==72) ) {
                            alt92=1;
                        }


                        switch (alt92) {
                    	case 1 :
                    	    // InternalEketal.g:5579:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalEketal.g:5579:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalEketal.g:5580:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_73);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"jbase.Jbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt92 >= 1 ) break loop92;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(92, input);
                                throw eee;
                        }
                        cnt92++;
                    } while (true);

                    // InternalEketal.g:5597:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==71) && (synpred38_InternalEketal())) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalEketal.g:5598:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            {
                            // InternalEketal.g:5598:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalEketal.g:5599:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,71,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalEketal.g:5605:6: ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            // InternalEketal.g:5606:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            {
                            // InternalEketal.g:5606:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            // InternalEketal.g:5607:8: lv_finallyExpression_5_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"jbase.Jbase.XBlockExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:5627:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    {
                    // InternalEketal.g:5627:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    // InternalEketal.g:5628:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    {
                    otherlv_6=(Token)match(input,71,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalEketal.g:5632:5: ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    // InternalEketal.g:5633:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:5633:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    // InternalEketal.g:5634:7: lv_finallyExpression_7_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"jbase.Jbase.XBlockExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalEketal.g:5657:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalEketal.g:5657:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalEketal.g:5658:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalEketal.g:5664:1: ruleXCatchClause returns [EObject current=null] : ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5670:2: ( ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:5671:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:5671:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:5672:3: () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:5672:3: ()
            // InternalEketal.g:5673:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCatchClauseAccess().getXCatchClauseAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:5679:3: ( ( 'catch' )=>otherlv_1= 'catch' )
            // InternalEketal.g:5680:4: ( 'catch' )=>otherlv_1= 'catch'
            {
            otherlv_1=(Token)match(input,72,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getCatchKeyword_1());
              			
            }

            }

            otherlv_2=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5690:3: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:5691:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:5691:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:5692:5: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_3_0,
              						"jbase.Jbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5713:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:5714:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:5714:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:5715:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXBlockExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalEketal.g:5736:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalEketal.g:5736:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalEketal.g:5737:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalEketal.g:5743:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5749:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:5750:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:5750:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:5751:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:5751:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalEketal.g:5752:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalEketal.g:5759:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalEketal.g:5760:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalEketal.g:5760:5: ()
            // InternalEketal.g:5761:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalEketal.g:5777:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalEketal.g:5778:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalEketal.g:5778:4: (lv_param_3_0= ruleXExpression )
            // InternalEketal.g:5779:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5800:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:5801:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:5801:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:5802:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalEketal.g:5823:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalEketal.g:5823:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalEketal.g:5824:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalEketal.g:5830:1: ruleXPrimaryExpression returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XJArrayConstructorCall_0 = null;

        EObject this_XConstructorCall_1 = null;

        EObject this_XJFeatureCallWithArrayAccess_2 = null;

        EObject this_XLiteral_3 = null;

        EObject this_XParenthesizedExpression_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:5836:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) )
            // InternalEketal.g:5837:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            {
            // InternalEketal.g:5837:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            int alt95=5;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalEketal.g:5838:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    {
                    // InternalEketal.g:5838:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    // InternalEketal.g:5839:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJArrayConstructorCallParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayConstructorCall_0=ruleXJArrayConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJArrayConstructorCall_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:5865:3: this_XConstructorCall_1= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_1=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:5874:3: this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJFeatureCallWithArrayAccessParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJFeatureCallWithArrayAccess_2=ruleXJFeatureCallWithArrayAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJFeatureCallWithArrayAccess_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:5883:3: this_XLiteral_3= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_3=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:5892:3: this_XParenthesizedExpression_4= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_4=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalEketal.g:5904:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalEketal.g:5904:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalEketal.g:5905:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalEketal.g:5911:1: ruleXLiteral returns [EObject current=null] : (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XBooleanLiteral_0 = null;

        EObject this_XNumberLiteral_1 = null;

        EObject this_XNullLiteral_2 = null;

        EObject this_XCharLiteral_3 = null;

        EObject this_XStringLiteral_4 = null;

        EObject this_XJArrayLiteral_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:5917:2: ( (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) )
            // InternalEketal.g:5918:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            {
            // InternalEketal.g:5918:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            int alt96=6;
            switch ( input.LA(1) ) {
            case 93:
            case 94:
                {
                alt96=1;
                }
                break;
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt96=2;
                }
                break;
            case 95:
                {
                alt96=3;
                }
                break;
            case RULE_CHARACTER:
                {
                alt96=4;
                }
                break;
            case RULE_STRING:
                {
                alt96=5;
                }
                break;
            case 18:
                {
                alt96=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalEketal.g:5919:3: this_XBooleanLiteral_0= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_0=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:5928:3: this_XNumberLiteral_1= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_1=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:5937:3: this_XNullLiteral_2= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_2=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:5946:3: this_XCharLiteral_3= ruleXCharLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCharLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCharLiteral_3=ruleXCharLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCharLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:5955:3: this_XStringLiteral_4= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_4=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:5964:3: this_XJArrayLiteral_5= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXJArrayLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayLiteral_5=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJArrayLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXJArrayLiteral"
    // InternalEketal.g:5976:1: entryRuleXJArrayLiteral returns [EObject current=null] : iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF ;
    public final EObject entryRuleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayLiteral = null;


        try {
            // InternalEketal.g:5976:55: (iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF )
            // InternalEketal.g:5977:2: iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayLiteral=ruleXJArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayLiteral"


    // $ANTLR start "ruleXJArrayLiteral"
    // InternalEketal.g:5983:1: ruleXJArrayLiteral returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5989:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalEketal.g:5990:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalEketal.g:5990:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            // InternalEketal.g:5991:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalEketal.g:5991:3: ()
            // InternalEketal.g:5992:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayLiteralAccess().getXJArrayLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,18,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayLiteralAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:6002:3: ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_ID||(LA98_0>=RULE_CHARACTER && LA98_0<=RULE_DECIMAL)||LA98_0==18||LA98_0==22||LA98_0==28||(LA98_0>=40 && LA98_0<=41)||LA98_0==61||(LA98_0>=82 && LA98_0<=84)||(LA98_0>=87 && LA98_0<=88)||(LA98_0>=90 && LA98_0<=95)) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalEketal.g:6003:4: ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:6003:4: ( (lv_elements_2_0= ruleXExpression ) )
                    // InternalEketal.g:6004:5: (lv_elements_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:6004:5: (lv_elements_2_0= ruleXExpression )
                    // InternalEketal.g:6005:6: lv_elements_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_elements_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:6022:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==23) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // InternalEketal.g:6023:5: otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXJArrayLiteralAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:6027:5: ( (lv_elements_4_0= ruleXExpression ) )
                    	    // InternalEketal.g:6028:6: (lv_elements_4_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:6028:6: (lv_elements_4_0= ruleXExpression )
                    	    // InternalEketal.g:6029:7: lv_elements_4_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_elements_4_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayLiteralAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayLiteral"


    // $ANTLR start "entryRuleXCharLiteral"
    // InternalEketal.g:6056:1: entryRuleXCharLiteral returns [EObject current=null] : iv_ruleXCharLiteral= ruleXCharLiteral EOF ;
    public final EObject entryRuleXCharLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCharLiteral = null;


        try {
            // InternalEketal.g:6056:53: (iv_ruleXCharLiteral= ruleXCharLiteral EOF )
            // InternalEketal.g:6057:2: iv_ruleXCharLiteral= ruleXCharLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCharLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCharLiteral=ruleXCharLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCharLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCharLiteral"


    // $ANTLR start "ruleXCharLiteral"
    // InternalEketal.g:6063:1: ruleXCharLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) ;
    public final EObject ruleXCharLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6069:2: ( ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) )
            // InternalEketal.g:6070:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            {
            // InternalEketal.g:6070:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            // InternalEketal.g:6071:3: () ( (lv_value_1_0= RULE_CHARACTER ) )
            {
            // InternalEketal.g:6071:3: ()
            // InternalEketal.g:6072:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCharLiteralAccess().getXJCharLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6078:3: ( (lv_value_1_0= RULE_CHARACTER ) )
            // InternalEketal.g:6079:4: (lv_value_1_0= RULE_CHARACTER )
            {
            // InternalEketal.g:6079:4: (lv_value_1_0= RULE_CHARACTER )
            // InternalEketal.g:6080:5: lv_value_1_0= RULE_CHARACTER
            {
            lv_value_1_0=(Token)match(input,RULE_CHARACTER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXCharLiteralAccess().getValueCHARACTERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXCharLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.CHARACTER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCharLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalEketal.g:6100:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalEketal.g:6100:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalEketal.g:6101:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalEketal.g:6107:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6113:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalEketal.g:6114:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalEketal.g:6114:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalEketal.g:6115:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalEketal.g:6115:3: ()
            // InternalEketal.g:6116:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6122:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalEketal.g:6123:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalEketal.g:6123:4: (lv_value_1_0= RULE_STRING )
            // InternalEketal.g:6124:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleOpEquality"
    // InternalEketal.g:6144:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalEketal.g:6144:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalEketal.g:6145:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalEketal.g:6151:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6157:2: ( (kw= '==' | kw= '!=' ) )
            // InternalEketal.g:6158:2: (kw= '==' | kw= '!=' )
            {
            // InternalEketal.g:6158:2: (kw= '==' | kw= '!=' )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==74) ) {
                alt99=1;
            }
            else if ( (LA99_0==75) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalEketal.g:6159:3: kw= '=='
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6165:3: kw= '!='
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleOpMulti"
    // InternalEketal.g:6174:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalEketal.g:6174:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalEketal.g:6175:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalEketal.g:6181:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6187:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalEketal.g:6188:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalEketal.g:6188:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt100=3;
            switch ( input.LA(1) ) {
            case RULE_ANY:
                {
                alt100=1;
                }
                break;
            case 76:
                {
                alt100=2;
                }
                break;
            case 77:
                {
                alt100=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalEketal.g:6189:3: kw= '*'
                    {
                    kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6195:3: kw= '/'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6201:3: kw= '%'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleOpOther"
    // InternalEketal.g:6210:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalEketal.g:6210:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalEketal.g:6211:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalEketal.g:6217:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6223:2: ( ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) )
            // InternalEketal.g:6224:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            {
            // InternalEketal.g:6224:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==59) ) {
                alt102=1;
            }
            else if ( (LA102_0==78) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalEketal.g:6225:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalEketal.g:6225:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalEketal.g:6226:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,59,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:6231:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==59) ) {
                        int LA101_1 = input.LA(2);

                        if ( (LA101_1==EOF||LA101_1==RULE_ID||(LA101_1>=RULE_CHARACTER && LA101_1<=RULE_DECIMAL)||LA101_1==18||LA101_1==22||LA101_1==28||(LA101_1>=40 && LA101_1<=41)||LA101_1==61||(LA101_1>=82 && LA101_1<=84)||(LA101_1>=87 && LA101_1<=88)||(LA101_1>=90 && LA101_1<=95)) ) {
                            alt101=2;
                        }
                        else if ( (LA101_1==59) && (synpred42_InternalEketal())) {
                            alt101=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 101, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalEketal.g:6232:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalEketal.g:6232:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalEketal.g:6233:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalEketal.g:6238:6: (kw= '>' kw= '>' )
                            // InternalEketal.g:6239:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,59,FOLLOW_77); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:6252:5: kw= '>'
                            {
                            kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6260:3: kw= '<<'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalEketal.g:6269:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalEketal.g:6269:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalEketal.g:6270:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalEketal.g:6276:1: ruleXAndExpression returns [EObject current=null] : (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseInclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6282:2: ( (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:6283:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:6283:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            // InternalEketal.g:6284:3: this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXBitwiseInclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_18);
            this_XBitwiseInclusiveOrExpression_0=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseInclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:6292:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==27) ) {
                    int LA103_2 = input.LA(2);

                    if ( (synpred43_InternalEketal()) ) {
                        alt103=1;
                    }


                }


                switch (alt103) {
            	case 1 :
            	    // InternalEketal.g:6293:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:6293:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalEketal.g:6294:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalEketal.g:6304:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalEketal.g:6305:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalEketal.g:6305:6: ()
            	    // InternalEketal.g:6306:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:6312:6: ( ( ruleOpAnd ) )
            	    // InternalEketal.g:6313:7: ( ruleOpAnd )
            	    {
            	    // InternalEketal.g:6313:7: ( ruleOpAnd )
            	    // InternalEketal.g:6314:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:6330:4: ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    // InternalEketal.g:6331:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    {
            	    // InternalEketal.g:6331:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    // InternalEketal.g:6332:6: lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXBitwiseInclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_rightOperand_3_0=ruleXBitwiseInclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseInclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:6354:1: entryRuleXBitwiseInclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseInclusiveOrExpression = null;


        try {
            // InternalEketal.g:6354:70: (iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF )
            // InternalEketal.g:6355:2: iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseInclusiveOrExpression=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseInclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseInclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:6361:1: ruleXBitwiseInclusiveOrExpression returns [EObject current=null] : (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseExclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6367:2: ( (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:6368:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:6368:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            // InternalEketal.g:6369:3: this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBitwiseExclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_78);
            this_XBitwiseExclusiveOrExpression_0=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseExclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:6377:3: ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==79) ) {
                    int LA104_2 = input.LA(2);

                    if ( (synpred44_InternalEketal()) ) {
                        alt104=1;
                    }


                }


                switch (alt104) {
            	case 1 :
            	    // InternalEketal.g:6378:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:6378:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) )
            	    // InternalEketal.g:6379:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:6389:5: ( () ( ( ruleOpInclusiveOr ) ) )
            	    // InternalEketal.g:6390:6: () ( ( ruleOpInclusiveOr ) )
            	    {
            	    // InternalEketal.g:6390:6: ()
            	    // InternalEketal.g:6391:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:6397:6: ( ( ruleOpInclusiveOr ) )
            	    // InternalEketal.g:6398:7: ( ruleOpInclusiveOr )
            	    {
            	    // InternalEketal.g:6398:7: ( ruleOpInclusiveOr )
            	    // InternalEketal.g:6399:8: ruleOpInclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpInclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:6415:4: ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    // InternalEketal.g:6416:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    {
            	    // InternalEketal.g:6416:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    // InternalEketal.g:6417:6: lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getRightOperandXBitwiseExclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_rightOperand_3_0=ruleXBitwiseExclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseExclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseInclusiveOrExpression"


    // $ANTLR start "entryRuleOpInclusiveOr"
    // InternalEketal.g:6439:1: entryRuleOpInclusiveOr returns [String current=null] : iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF ;
    public final String entryRuleOpInclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpInclusiveOr = null;


        try {
            // InternalEketal.g:6439:53: (iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF )
            // InternalEketal.g:6440:2: iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpInclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpInclusiveOr=ruleOpInclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpInclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpInclusiveOr"


    // $ANTLR start "ruleOpInclusiveOr"
    // InternalEketal.g:6446:1: ruleOpInclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOpInclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6452:2: (kw= '|' )
            // InternalEketal.g:6453:2: kw= '|'
            {
            kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpInclusiveOrAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpInclusiveOr"


    // $ANTLR start "entryRuleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:6461:1: entryRuleXBitwiseExclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseExclusiveOrExpression = null;


        try {
            // InternalEketal.g:6461:70: (iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF )
            // InternalEketal.g:6462:2: iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseExclusiveOrExpression=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseExclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseExclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:6468:1: ruleXBitwiseExclusiveOrExpression returns [EObject current=null] : (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) ;
    public final EObject ruleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6474:2: ( (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) )
            // InternalEketal.g:6475:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            {
            // InternalEketal.g:6475:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            // InternalEketal.g:6476:3: this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_79);
            this_XBitwiseAndExpression_0=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:6484:3: ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==80) ) {
                    int LA105_2 = input.LA(2);

                    if ( (synpred45_InternalEketal()) ) {
                        alt105=1;
                    }


                }


                switch (alt105) {
            	case 1 :
            	    // InternalEketal.g:6485:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    {
            	    // InternalEketal.g:6485:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) )
            	    // InternalEketal.g:6486:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:6496:5: ( () ( ( ruleOpExclusiveOr ) ) )
            	    // InternalEketal.g:6497:6: () ( ( ruleOpExclusiveOr ) )
            	    {
            	    // InternalEketal.g:6497:6: ()
            	    // InternalEketal.g:6498:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:6504:6: ( ( ruleOpExclusiveOr ) )
            	    // InternalEketal.g:6505:7: ( ruleOpExclusiveOr )
            	    {
            	    // InternalEketal.g:6505:7: ( ruleOpExclusiveOr )
            	    // InternalEketal.g:6506:8: ruleOpExclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpExclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:6522:4: ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    // InternalEketal.g:6523:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    {
            	    // InternalEketal.g:6523:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    // InternalEketal.g:6524:6: lv_rightOperand_3_0= ruleXBitwiseAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getRightOperandXBitwiseAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_79);
            	    lv_rightOperand_3_0=ruleXBitwiseAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseExclusiveOrExpression"


    // $ANTLR start "entryRuleOpExclusiveOr"
    // InternalEketal.g:6546:1: entryRuleOpExclusiveOr returns [String current=null] : iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF ;
    public final String entryRuleOpExclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpExclusiveOr = null;


        try {
            // InternalEketal.g:6546:53: (iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF )
            // InternalEketal.g:6547:2: iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpExclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpExclusiveOr=ruleOpExclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpExclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpExclusiveOr"


    // $ANTLR start "ruleOpExclusiveOr"
    // InternalEketal.g:6553:1: ruleOpExclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '^' ;
    public final AntlrDatatypeRuleToken ruleOpExclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6559:2: (kw= '^' )
            // InternalEketal.g:6560:2: kw= '^'
            {
            kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpExclusiveOrAccess().getCircumflexAccentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpExclusiveOr"


    // $ANTLR start "entryRuleXBitwiseAndExpression"
    // InternalEketal.g:6568:1: entryRuleXBitwiseAndExpression returns [EObject current=null] : iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF ;
    public final EObject entryRuleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseAndExpression = null;


        try {
            // InternalEketal.g:6568:62: (iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF )
            // InternalEketal.g:6569:2: iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseAndExpression=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseAndExpression"


    // $ANTLR start "ruleXBitwiseAndExpression"
    // InternalEketal.g:6575:1: ruleXBitwiseAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6581:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalEketal.g:6582:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalEketal.g:6582:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalEketal.g:6583:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_80);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:6591:3: ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==81) ) {
                    int LA106_2 = input.LA(2);

                    if ( (synpred46_InternalEketal()) ) {
                        alt106=1;
                    }


                }


                switch (alt106) {
            	case 1 :
            	    // InternalEketal.g:6592:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalEketal.g:6592:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) )
            	    // InternalEketal.g:6593:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) )
            	    {
            	    // InternalEketal.g:6603:5: ( () ( ( ruleOpBitwiseAnd ) ) )
            	    // InternalEketal.g:6604:6: () ( ( ruleOpBitwiseAnd ) )
            	    {
            	    // InternalEketal.g:6604:6: ()
            	    // InternalEketal.g:6605:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:6611:6: ( ( ruleOpBitwiseAnd ) )
            	    // InternalEketal.g:6612:7: ( ruleOpBitwiseAnd )
            	    {
            	    // InternalEketal.g:6612:7: ( ruleOpBitwiseAnd )
            	    // InternalEketal.g:6613:8: ruleOpBitwiseAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpBitwiseAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:6629:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalEketal.g:6630:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalEketal.g:6630:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalEketal.g:6631:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_80);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseAndExpression"


    // $ANTLR start "entryRuleOpBitwiseAnd"
    // InternalEketal.g:6653:1: entryRuleOpBitwiseAnd returns [String current=null] : iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF ;
    public final String entryRuleOpBitwiseAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpBitwiseAnd = null;


        try {
            // InternalEketal.g:6653:52: (iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF )
            // InternalEketal.g:6654:2: iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpBitwiseAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpBitwiseAnd=ruleOpBitwiseAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpBitwiseAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpBitwiseAnd"


    // $ANTLR start "ruleOpBitwiseAnd"
    // InternalEketal.g:6660:1: ruleOpBitwiseAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleOpBitwiseAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6666:2: (kw= '&' )
            // InternalEketal.g:6667:2: kw= '&'
            {
            kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpBitwiseAndAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpBitwiseAnd"


    // $ANTLR start "entryRuleOpUnary"
    // InternalEketal.g:6675:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalEketal.g:6675:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalEketal.g:6676:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalEketal.g:6682:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:6688:2: ( (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) )
            // InternalEketal.g:6689:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            {
            // InternalEketal.g:6689:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            int alt107=4;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt107=1;
                }
                break;
            case 82:
                {
                alt107=2;
                }
                break;
            case 83:
                {
                alt107=3;
                }
                break;
            case 84:
                {
                alt107=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalEketal.g:6690:3: kw= '!'
                    {
                    kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6696:3: kw= '-'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6702:3: kw= '+'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:6708:3: kw= '~'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:6717:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalEketal.g:6717:75: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalEketal.g:6718:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:6724:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:6730:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:6731:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:6731:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt110=2;
            alt110 = dfa110.predict(input);
            switch (alt110) {
                case 1 :
                    // InternalEketal.g:6732:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:6732:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:6733:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:6733:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:6734:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:6740:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:6741:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:6741:6: ()
                    // InternalEketal.g:6742:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:6754:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==RULE_ID||(LA109_0>=RULE_CHARACTER && LA109_0<=RULE_DECIMAL)||LA109_0==18||LA109_0==22||LA109_0==28||(LA109_0>=40 && LA109_0<=41)||LA109_0==61||(LA109_0>=82 && LA109_0<=85)||(LA109_0>=87 && LA109_0<=88)||(LA109_0>=90 && LA109_0<=95)) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalEketal.g:6755:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:6755:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:6756:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:6756:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:6757:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_76);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:6774:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop108:
                            do {
                                int alt108=2;
                                int LA108_0 = input.LA(1);

                                if ( (LA108_0==23) ) {
                                    alt108=1;
                                }


                                switch (alt108) {
                            	case 1 :
                            	    // InternalEketal.g:6775:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,23,FOLLOW_82); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:6779:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:6780:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:6780:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:6781:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_76);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop108;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6806:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalEketal.g:6818:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalEketal.g:6818:64: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalEketal.g:6819:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalEketal.g:6825:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:6831:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:6832:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:6832:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalEketal.g:6833:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:6833:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:6834:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:6834:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:6835:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:6841:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:6842:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:6842:6: ()
                    // InternalEketal.g:6843:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:6855:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==RULE_ID||(LA112_0>=RULE_CHARACTER && LA112_0<=RULE_DECIMAL)||LA112_0==18||LA112_0==22||LA112_0==28||(LA112_0>=40 && LA112_0<=41)||LA112_0==61||(LA112_0>=82 && LA112_0<=85)||(LA112_0>=87 && LA112_0<=88)||(LA112_0>=90 && LA112_0<=95)) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalEketal.g:6856:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:6856:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:6857:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:6857:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:6858:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_76);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:6875:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop111:
                            do {
                                int alt111=2;
                                int LA111_0 = input.LA(1);

                                if ( (LA111_0==23) ) {
                                    alt111=1;
                                }


                                switch (alt111) {
                            	case 1 :
                            	    // InternalEketal.g:6876:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,23,FOLLOW_82); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:6880:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:6881:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:6881:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:6882:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_76);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop111;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6907:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalEketal.g:6919:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalEketal.g:6919:52: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalEketal.g:6920:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalEketal.g:6926:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6932:2: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // InternalEketal.g:6933:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // InternalEketal.g:6933:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // InternalEketal.g:6934:3: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // InternalEketal.g:6934:3: ()
            // InternalEketal.g:6935:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,85,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
              		
            }
            // InternalEketal.g:6945:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:6946:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:6946:4: ( ruleQualifiedName )
            // InternalEketal.g:6947:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXAnnotationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_49);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6961:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==22) && (synpred49_InternalEketal())) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalEketal.g:6962:4: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // InternalEketal.g:6962:4: ( ( '(' )=>otherlv_3= '(' )
                    // InternalEketal.g:6963:5: ( '(' )=>otherlv_3= '('
                    {
                    otherlv_3=(Token)match(input,22,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                      				
                    }

                    }

                    // InternalEketal.g:6969:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt115=3;
                    alt115 = dfa115.predict(input);
                    switch (alt115) {
                        case 1 :
                            // InternalEketal.g:6970:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalEketal.g:6970:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalEketal.g:6971:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalEketal.g:6971:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalEketal.g:6972:7: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalEketal.g:6981:7: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalEketal.g:6982:8: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              								}
                              								add(
                              									current,
                              									"elementValuePairs",
                              									lv_elementValuePairs_4_0,
                              									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalEketal.g:6999:6: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop114:
                            do {
                                int alt114=2;
                                int LA114_0 = input.LA(1);

                                if ( (LA114_0==23) ) {
                                    alt114=1;
                                }


                                switch (alt114) {
                            	case 1 :
                            	    // InternalEketal.g:7000:7: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	      						
                            	    }
                            	    // InternalEketal.g:7004:7: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalEketal.g:7005:8: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalEketal.g:7014:8: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalEketal.g:7015:9: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"elementValuePairs",
                            	      										lv_elementValuePairs_6_0,
                            	      										"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop114;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:7035:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalEketal.g:7035:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalEketal.g:7036:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalEketal.g:7036:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalEketal.g:7037:7: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_20);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_7_0,
                              								"jbase.Jbase.XAnnotationElementValueOrCommaList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalEketal.g:7064:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalEketal.g:7064:68: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalEketal.g:7065:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalEketal.g:7071:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7077:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalEketal.g:7078:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalEketal.g:7078:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalEketal.g:7079:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalEketal.g:7079:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // InternalEketal.g:7080:4: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // InternalEketal.g:7089:4: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // InternalEketal.g:7090:5: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // InternalEketal.g:7090:5: ( ( ruleValidID ) )
            // InternalEketal.g:7091:6: ( ruleValidID )
            {
            // InternalEketal.g:7091:6: ( ruleValidID )
            // InternalEketal.g:7092:7: ruleValidID
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0());
              						
            }
            pushFollow(FOLLOW_46);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_1=(Token)match(input,46,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
              				
            }

            }


            }

            // InternalEketal.g:7112:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalEketal.g:7113:4: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalEketal.g:7113:4: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalEketal.g:7114:5: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"jbase.Jbase.XAnnotationElementValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalEketal.g:7135:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalEketal.g:7135:64: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalEketal.g:7136:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalEketal.g:7142:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:7148:2: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:7149:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:7149:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==85) ) {
                alt117=1;
            }
            else if ( (LA117_0==RULE_ID||(LA117_0>=RULE_CHARACTER && LA117_0<=RULE_DECIMAL)||LA117_0==18||LA117_0==22||LA117_0==28||(LA117_0>=40 && LA117_0<=41)||LA117_0==61||(LA117_0>=82 && LA117_0<=84)||(LA117_0>=87 && LA117_0<=88)||(LA117_0>=90 && LA117_0<=95)) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalEketal.g:7150:3: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7159:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalEketal.g:7171:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalEketal.g:7171:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalEketal.g:7172:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalEketal.g:7178:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7184:2: (this_XAssignment_0= ruleXAssignment )
            // InternalEketal.g:7185:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalEketal.g:7196:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalEketal.g:7196:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalEketal.g:7197:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalEketal.g:7203:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7209:2: (kw= '=' )
            // InternalEketal.g:7210:2: kw= '='
            {
            kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalEketal.g:7218:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalEketal.g:7218:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalEketal.g:7219:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalEketal.g:7225:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7231:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalEketal.g:7232:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalEketal.g:7232:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalEketal.g:7233:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_16);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7241:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==26) ) {
                    int LA118_2 = input.LA(2);

                    if ( (synpred53_InternalEketal()) ) {
                        alt118=1;
                    }


                }


                switch (alt118) {
            	case 1 :
            	    // InternalEketal.g:7242:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalEketal.g:7242:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalEketal.g:7243:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalEketal.g:7253:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalEketal.g:7254:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalEketal.g:7254:6: ()
            	    // InternalEketal.g:7255:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7261:6: ( ( ruleOpOr ) )
            	    // InternalEketal.g:7262:7: ( ruleOpOr )
            	    {
            	    // InternalEketal.g:7262:7: ( ruleOpOr )
            	    // InternalEketal.g:7263:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7279:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalEketal.g:7280:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalEketal.g:7280:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalEketal.g:7281:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalEketal.g:7303:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalEketal.g:7303:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalEketal.g:7304:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalEketal.g:7310:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7316:2: (kw= '||' )
            // InternalEketal.g:7317:2: kw= '||'
            {
            kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleOpAnd"
    // InternalEketal.g:7325:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalEketal.g:7325:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalEketal.g:7326:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalEketal.g:7332:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7338:2: (kw= '&&' )
            // InternalEketal.g:7339:2: kw= '&&'
            {
            kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalEketal.g:7347:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalEketal.g:7347:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalEketal.g:7348:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalEketal.g:7354:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7360:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalEketal.g:7361:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalEketal.g:7361:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalEketal.g:7362:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_84);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7370:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==74) ) {
                    int LA119_2 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt119=1;
                    }


                }
                else if ( (LA119_0==75) ) {
                    int LA119_3 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt119=1;
                    }


                }


                switch (alt119) {
            	case 1 :
            	    // InternalEketal.g:7371:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalEketal.g:7371:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalEketal.g:7372:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalEketal.g:7382:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalEketal.g:7383:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalEketal.g:7383:6: ()
            	    // InternalEketal.g:7384:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7390:6: ( ( ruleOpEquality ) )
            	    // InternalEketal.g:7391:7: ( ruleOpEquality )
            	    {
            	    // InternalEketal.g:7391:7: ( ruleOpEquality )
            	    // InternalEketal.g:7392:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7408:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalEketal.g:7409:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalEketal.g:7409:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalEketal.g:7410:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalEketal.g:7432:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalEketal.g:7432:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalEketal.g:7433:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalEketal.g:7439:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7445:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalEketal.g:7446:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalEketal.g:7446:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalEketal.g:7447:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_85);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7455:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop120:
            do {
                int alt120=3;
                switch ( input.LA(1) ) {
                case 58:
                    {
                    int LA120_2 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt120=2;
                    }


                    }
                    break;
                case 59:
                    {
                    int LA120_3 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt120=2;
                    }


                    }
                    break;
                case 86:
                    {
                    int LA120_4 = input.LA(2);

                    if ( (synpred55_InternalEketal()) ) {
                        alt120=1;
                    }


                    }
                    break;
                case 60:
                    {
                    int LA120_5 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt120=2;
                    }


                    }
                    break;

                }

                switch (alt120) {
            	case 1 :
            	    // InternalEketal.g:7456:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalEketal.g:7456:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalEketal.g:7457:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalEketal.g:7457:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalEketal.g:7458:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalEketal.g:7464:6: ( () otherlv_2= 'instanceof' )
            	    // InternalEketal.g:7465:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalEketal.g:7465:7: ()
            	    // InternalEketal.g:7466:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,86,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:7478:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalEketal.g:7479:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalEketal.g:7479:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalEketal.g:7480:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"jbase.Jbase.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:7499:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalEketal.g:7499:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalEketal.g:7500:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalEketal.g:7500:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalEketal.g:7501:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalEketal.g:7511:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalEketal.g:7512:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalEketal.g:7512:7: ()
            	    // InternalEketal.g:7513:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalEketal.g:7519:7: ( ( ruleOpCompare ) )
            	    // InternalEketal.g:7520:8: ( ruleOpCompare )
            	    {
            	    // InternalEketal.g:7520:8: ( ruleOpCompare )
            	    // InternalEketal.g:7521:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7537:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalEketal.g:7538:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalEketal.g:7538:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalEketal.g:7539:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalEketal.g:7562:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalEketal.g:7562:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalEketal.g:7563:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalEketal.g:7569:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7575:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalEketal.g:7576:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalEketal.g:7576:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt121=4;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt121=1;
                }
                break;
            case 58:
                {
                int LA121_2 = input.LA(2);

                if ( (LA121_2==EOF||LA121_2==RULE_ID||(LA121_2>=RULE_CHARACTER && LA121_2<=RULE_DECIMAL)||LA121_2==18||LA121_2==22||LA121_2==28||(LA121_2>=40 && LA121_2<=41)||LA121_2==61||(LA121_2>=82 && LA121_2<=84)||(LA121_2>=87 && LA121_2<=88)||(LA121_2>=90 && LA121_2<=95)) ) {
                    alt121=4;
                }
                else if ( (LA121_2==46) ) {
                    alt121=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 121, 2, input);

                    throw nvae;
                }
                }
                break;
            case 59:
                {
                alt121=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }

            switch (alt121) {
                case 1 :
                    // InternalEketal.g:7577:3: kw= '>='
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7583:3: (kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:7583:3: (kw= '<' kw= '=' )
                    // InternalEketal.g:7584:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,58,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:7596:3: kw= '>'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:7602:3: kw= '<'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalEketal.g:7611:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalEketal.g:7611:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalEketal.g:7612:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalEketal.g:7618:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7624:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalEketal.g:7625:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalEketal.g:7625:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalEketal.g:7626:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_86);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7634:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==59) ) {
                    int LA122_2 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt122=1;
                    }


                }
                else if ( (LA122_0==78) ) {
                    int LA122_3 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt122=1;
                    }


                }


                switch (alt122) {
            	case 1 :
            	    // InternalEketal.g:7635:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalEketal.g:7635:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalEketal.g:7636:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalEketal.g:7646:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalEketal.g:7647:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalEketal.g:7647:6: ()
            	    // InternalEketal.g:7648:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7654:6: ( ( ruleOpOther ) )
            	    // InternalEketal.g:7655:7: ( ruleOpOther )
            	    {
            	    // InternalEketal.g:7655:7: ( ruleOpOther )
            	    // InternalEketal.g:7656:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7672:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalEketal.g:7673:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalEketal.g:7673:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalEketal.g:7674:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_86);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalEketal.g:7696:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalEketal.g:7696:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalEketal.g:7697:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalEketal.g:7703:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7709:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalEketal.g:7710:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalEketal.g:7710:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalEketal.g:7711:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_87);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7719:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==83) ) {
                    int LA123_2 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt123=1;
                    }


                }
                else if ( (LA123_0==82) ) {
                    int LA123_3 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt123=1;
                    }


                }


                switch (alt123) {
            	case 1 :
            	    // InternalEketal.g:7720:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalEketal.g:7720:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalEketal.g:7721:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalEketal.g:7731:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalEketal.g:7732:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalEketal.g:7732:6: ()
            	    // InternalEketal.g:7733:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7739:6: ( ( ruleOpAdd ) )
            	    // InternalEketal.g:7740:7: ( ruleOpAdd )
            	    {
            	    // InternalEketal.g:7740:7: ( ruleOpAdd )
            	    // InternalEketal.g:7741:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7757:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalEketal.g:7758:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalEketal.g:7758:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalEketal.g:7759:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalEketal.g:7781:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalEketal.g:7781:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalEketal.g:7782:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalEketal.g:7788:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7794:2: ( (kw= '+' | kw= '-' ) )
            // InternalEketal.g:7795:2: (kw= '+' | kw= '-' )
            {
            // InternalEketal.g:7795:2: (kw= '+' | kw= '-' )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==83) ) {
                alt124=1;
            }
            else if ( (LA124_0==82) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalEketal.g:7796:3: kw= '+'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7802:3: kw= '-'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalEketal.g:7811:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalEketal.g:7811:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalEketal.g:7812:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalEketal.g:7818:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7824:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalEketal.g:7825:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalEketal.g:7825:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalEketal.g:7826:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7834:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop125:
            do {
                int alt125=2;
                switch ( input.LA(1) ) {
                case RULE_ANY:
                    {
                    int LA125_2 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt125=1;
                    }


                    }
                    break;
                case 76:
                    {
                    int LA125_3 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt125=1;
                    }


                    }
                    break;
                case 77:
                    {
                    int LA125_4 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt125=1;
                    }


                    }
                    break;

                }

                switch (alt125) {
            	case 1 :
            	    // InternalEketal.g:7835:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalEketal.g:7835:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalEketal.g:7836:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalEketal.g:7846:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalEketal.g:7847:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalEketal.g:7847:6: ()
            	    // InternalEketal.g:7848:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7854:6: ( ( ruleOpMulti ) )
            	    // InternalEketal.g:7855:7: ( ruleOpMulti )
            	    {
            	    // InternalEketal.g:7855:7: ( ruleOpMulti )
            	    // InternalEketal.g:7856:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_38);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7872:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalEketal.g:7873:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalEketal.g:7873:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalEketal.g:7874:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalEketal.g:7896:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalEketal.g:7896:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalEketal.g:7897:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalEketal.g:7903:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalEketal.g:7909:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalEketal.g:7910:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalEketal.g:7910:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==28||(LA126_0>=82 && LA126_0<=84)) ) {
                alt126=1;
            }
            else if ( (LA126_0==RULE_ID||(LA126_0>=RULE_CHARACTER && LA126_0<=RULE_DECIMAL)||LA126_0==18||LA126_0==22||(LA126_0>=40 && LA126_0<=41)||LA126_0==61||(LA126_0>=87 && LA126_0<=88)||(LA126_0>=90 && LA126_0<=95)) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalEketal.g:7911:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalEketal.g:7911:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalEketal.g:7912:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalEketal.g:7912:4: ()
                    // InternalEketal.g:7913:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalEketal.g:7919:4: ( ( ruleOpUnary ) )
                    // InternalEketal.g:7920:5: ( ruleOpUnary )
                    {
                    // InternalEketal.g:7920:5: ( ruleOpUnary )
                    // InternalEketal.g:7921:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:7935:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalEketal.g:7936:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalEketal.g:7936:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalEketal.g:7937:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7956:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalEketal.g:7968:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalEketal.g:7968:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalEketal.g:7969:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalEketal.g:7975:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7981:2: ( (kw= '++' | kw= '--' ) )
            // InternalEketal.g:7982:2: (kw= '++' | kw= '--' )
            {
            // InternalEketal.g:7982:2: (kw= '++' | kw= '--' )
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==87) ) {
                alt127=1;
            }
            else if ( (LA127_0==88) ) {
                alt127=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // InternalEketal.g:7983:3: kw= '++'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7989:3: kw= '--'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalEketal.g:7998:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalEketal.g:7998:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalEketal.g:7999:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalEketal.g:8005:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8011:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalEketal.g:8012:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalEketal.g:8012:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalEketal.g:8013:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalEketal.g:8013:3: ()
            // InternalEketal.g:8014:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,18,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:8028:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==RULE_ID||(LA129_0>=RULE_CHARACTER && LA129_0<=RULE_DECIMAL)||LA129_0==18||LA129_0==22||LA129_0==28||(LA129_0>=40 && LA129_0<=41)||LA129_0==61||(LA129_0>=82 && LA129_0<=84)||(LA129_0>=87 && LA129_0<=88)||(LA129_0>=90 && LA129_0<=95)) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalEketal.g:8029:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8029:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8030:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8030:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8031:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8048:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==23) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    // InternalEketal.g:8049:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8053:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:8054:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:8054:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:8055:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalEketal.g:8082:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalEketal.g:8082:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalEketal.g:8083:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalEketal.g:8089:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8095:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalEketal.g:8096:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalEketal.g:8096:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalEketal.g:8097:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalEketal.g:8097:3: ()
            // InternalEketal.g:8098:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,47,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:8112:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_ID||(LA131_0>=RULE_CHARACTER && LA131_0<=RULE_DECIMAL)||LA131_0==18||LA131_0==22||LA131_0==28||(LA131_0>=40 && LA131_0<=41)||LA131_0==61||(LA131_0>=82 && LA131_0<=84)||(LA131_0>=87 && LA131_0<=88)||(LA131_0>=90 && LA131_0<=95)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalEketal.g:8113:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8113:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8114:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8114:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8115:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_89);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8132:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==23) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalEketal.g:8133:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,23,FOLLOW_38); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8137:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:8138:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:8138:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:8139:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_89);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalEketal.g:8166:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalEketal.g:8166:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalEketal.g:8167:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalEketal.g:8173:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8179:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalEketal.g:8180:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalEketal.g:8180:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalEketal.g:8181:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalEketal.g:8181:3: ()
            // InternalEketal.g:8182:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:8188:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==RULE_ID||(LA133_0>=RULE_CHARACTER && LA133_0<=RULE_DECIMAL)||LA133_0==18||LA133_0==22||LA133_0==28||(LA133_0>=40 && LA133_0<=42)||LA133_0==61||(LA133_0>=82 && LA133_0<=84)||(LA133_0>=87 && LA133_0<=88)||(LA133_0>=90 && LA133_0<=95)) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalEketal.g:8189:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalEketal.g:8189:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalEketal.g:8190:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalEketal.g:8190:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalEketal.g:8191:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:8208:4: (otherlv_2= ';' )?
            	    int alt132=2;
            	    int LA132_0 = input.LA(1);

            	    if ( (LA132_0==16) ) {
            	        alt132=1;
            	    }
            	    switch (alt132) {
            	        case 1 :
            	            // InternalEketal.g:8209:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,16,FOLLOW_91); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalEketal.g:8219:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalEketal.g:8219:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalEketal.g:8220:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalEketal.g:8226:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:8232:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalEketal.g:8233:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalEketal.g:8233:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalEketal.g:8234:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,22,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_20);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalEketal.g:8254:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalEketal.g:8254:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalEketal.g:8255:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalEketal.g:8261:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:8267:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:8268:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:8268:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalEketal.g:8269:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    {
                    // InternalEketal.g:8269:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    // InternalEketal.g:8270:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XVariableDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:8300:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalEketal.g:8312:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalEketal.g:8312:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalEketal.g:8313:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalEketal.g:8319:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8325:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalEketal.g:8326:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalEketal.g:8326:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalEketal.g:8327:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalEketal.g:8327:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_ID) ) {
                int LA135_1 = input.LA(2);

                if ( (LA135_1==RULE_ID||LA135_1==39||LA135_1==47||LA135_1==58) ) {
                    alt135=1;
                }
            }
            switch (alt135) {
                case 1 :
                    // InternalEketal.g:8328:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:8328:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalEketal.g:8329:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:8346:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:8347:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:8347:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:8348:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalEketal.g:8369:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalEketal.g:8369:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalEketal.g:8370:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalEketal.g:8376:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8382:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalEketal.g:8383:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalEketal.g:8383:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt136=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt136=1;
                }
                break;
            case 90:
                {
                alt136=2;
                }
                break;
            case 41:
                {
                alt136=3;
                }
                break;
            case 40:
                {
                alt136=4;
                }
                break;
            case 91:
                {
                alt136=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }

            switch (alt136) {
                case 1 :
                    // InternalEketal.g:8384:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8395:3: kw= 'extends'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:8401:3: kw= 'static'
                    {
                    kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:8407:3: kw= 'import'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:8413:3: kw= 'extension'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalEketal.g:8422:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalEketal.g:8422:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalEketal.g:8423:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalEketal.g:8429:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8435:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalEketal.g:8436:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalEketal.g:8436:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==RULE_ID||(LA137_0>=40 && LA137_0<=41)||(LA137_0>=90 && LA137_0<=91)) ) {
                alt137=1;
            }
            else if ( (LA137_0==92) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalEketal.g:8437:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8448:3: kw= 'super'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalEketal.g:8457:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalEketal.g:8457:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalEketal.g:8458:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalEketal.g:8464:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalEketal.g:8470:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalEketal.g:8471:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalEketal.g:8471:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalEketal.g:8472:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalEketal.g:8472:3: ()
            // InternalEketal.g:8473:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:8479:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==93) ) {
                alt138=1;
            }
            else if ( (LA138_0==94) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // InternalEketal.g:8480:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8485:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalEketal.g:8485:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalEketal.g:8486:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalEketal.g:8486:5: (lv_isTrue_2_0= 'true' )
                    // InternalEketal.g:8487:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalEketal.g:8504:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalEketal.g:8504:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalEketal.g:8505:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalEketal.g:8511:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:8517:2: ( ( () otherlv_1= 'null' ) )
            // InternalEketal.g:8518:2: ( () otherlv_1= 'null' )
            {
            // InternalEketal.g:8518:2: ( () otherlv_1= 'null' )
            // InternalEketal.g:8519:3: () otherlv_1= 'null'
            {
            // InternalEketal.g:8519:3: ()
            // InternalEketal.g:8520:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalEketal.g:8534:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalEketal.g:8534:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalEketal.g:8535:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalEketal.g:8541:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8547:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalEketal.g:8548:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalEketal.g:8548:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalEketal.g:8549:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalEketal.g:8549:3: ()
            // InternalEketal.g:8550:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:8556:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalEketal.g:8557:4: (lv_value_1_0= ruleNumber )
            {
            // InternalEketal.g:8557:4: (lv_value_1_0= ruleNumber )
            // InternalEketal.g:8558:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalEketal.g:8579:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalEketal.g:8579:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalEketal.g:8580:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalEketal.g:8586:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8592:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalEketal.g:8593:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalEketal.g:8593:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalEketal.g:8594:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalEketal.g:8594:3: ()
            // InternalEketal.g:8595:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,96,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalEketal.g:8605:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalEketal.g:8606:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalEketal.g:8606:4: (lv_expression_2_0= ruleXExpression )
            // InternalEketal.g:8607:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalEketal.g:8628:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalEketal.g:8628:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalEketal.g:8629:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalEketal.g:8635:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8641:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalEketal.g:8642:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalEketal.g:8642:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalEketal.g:8643:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalEketal.g:8643:3: ()
            // InternalEketal.g:8644:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalEketal.g:8654:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalEketal.g:8655:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:8656:4: (lv_expression_2_0= ruleXExpression )
                    // InternalEketal.g:8657:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalEketal.g:8678:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalEketal.g:8678:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalEketal.g:8679:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalEketal.g:8685:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:8691:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalEketal.g:8692:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalEketal.g:8692:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalEketal.g:8693:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_92);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8703:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==39) ) {
                    int LA140_2 = input.LA(2);

                    if ( (LA140_2==RULE_ID) ) {
                        int LA140_3 = input.LA(3);

                        if ( (synpred62_InternalEketal()) ) {
                            alt140=1;
                        }


                    }


                }


                switch (alt140) {
            	case 1 :
            	    // InternalEketal.g:8704:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalEketal.g:8704:4: ( ( '.' )=>kw= '.' )
            	    // InternalEketal.g:8705:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_92);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalEketal.g:8727:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:8729:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalEketal.g:8730:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalEketal.g:8739:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:8746:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalEketal.g:8747:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalEketal.g:8747:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_HEX) ) {
                alt144=1;
            }
            else if ( ((LA144_0>=RULE_INT && LA144_0<=RULE_DECIMAL)) ) {
                alt144=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }
            switch (alt144) {
                case 1 :
                    // InternalEketal.g:8748:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8756:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalEketal.g:8756:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalEketal.g:8757:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalEketal.g:8757:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==RULE_INT) ) {
                        alt141=1;
                    }
                    else if ( (LA141_0==RULE_DECIMAL) ) {
                        alt141=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 141, 0, input);

                        throw nvae;
                    }
                    switch (alt141) {
                        case 1 :
                            // InternalEketal.g:8758:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalEketal.g:8766:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalEketal.g:8774:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==39) ) {
                        int LA143_1 = input.LA(2);

                        if ( ((LA143_1>=RULE_INT && LA143_1<=RULE_DECIMAL)) ) {
                            alt143=1;
                        }
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalEketal.g:8775:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,39,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalEketal.g:8780:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt142=2;
                            int LA142_0 = input.LA(1);

                            if ( (LA142_0==RULE_INT) ) {
                                alt142=1;
                            }
                            else if ( (LA142_0==RULE_DECIMAL) ) {
                                alt142=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 142, 0, input);

                                throw nvae;
                            }
                            switch (alt142) {
                                case 1 :
                                    // InternalEketal.g:8781:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalEketal.g:8789:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalEketal.g:8806:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalEketal.g:8806:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalEketal.g:8807:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalEketal.g:8813:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8819:2: ( (kw= '[' kw= ']' ) )
            // InternalEketal.g:8820:2: (kw= '[' kw= ']' )
            {
            // InternalEketal.g:8820:2: (kw= '[' kw= ']' )
            // InternalEketal.g:8821:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,47,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalEketal.g:8835:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalEketal.g:8835:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalEketal.g:8836:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalEketal.g:8842:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8848:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalEketal.g:8849:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalEketal.g:8849:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalEketal.g:8850:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalEketal.g:8850:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:8851:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:8851:4: ( ruleQualifiedName )
            // InternalEketal.g:8852:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_94);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:8866:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalEketal.g:8867:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalEketal.g:8867:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalEketal.g:8868:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,58,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalEketal.g:8874:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalEketal.g:8875:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalEketal.g:8875:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalEketal.g:8876:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8893:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==23) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalEketal.g:8894:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,23,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8898:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalEketal.g:8899:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalEketal.g:8899:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalEketal.g:8900:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_53);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,59,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalEketal.g:8922:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==39) ) {
                            int LA148_2 = input.LA(2);

                            if ( (LA148_2==RULE_ID) ) {
                                int LA148_3 = input.LA(3);

                                if ( (synpred64_InternalEketal()) ) {
                                    alt148=1;
                                }


                            }


                        }


                        switch (alt148) {
                    	case 1 :
                    	    // InternalEketal.g:8923:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalEketal.g:8923:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalEketal.g:8924:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalEketal.g:8930:6: ( () otherlv_7= '.' )
                    	    // InternalEketal.g:8931:7: () otherlv_7= '.'
                    	    {
                    	    // InternalEketal.g:8931:7: ()
                    	    // InternalEketal.g:8932:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:8944:5: ( ( ruleValidID ) )
                    	    // InternalEketal.g:8945:6: ( ruleValidID )
                    	    {
                    	    // InternalEketal.g:8945:6: ( ruleValidID )
                    	    // InternalEketal.g:8946:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_95);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:8960:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt147=2;
                    	    alt147 = dfa147.predict(input);
                    	    switch (alt147) {
                    	        case 1 :
                    	            // InternalEketal.g:8961:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalEketal.g:8961:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalEketal.g:8962:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,58,FOLLOW_54); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalEketal.g:8968:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalEketal.g:8969:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalEketal.g:8969:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalEketal.g:8970:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_53);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalEketal.g:8987:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop146:
                    	            do {
                    	                int alt146=2;
                    	                int LA146_0 = input.LA(1);

                    	                if ( (LA146_0==23) ) {
                    	                    alt146=1;
                    	                }


                    	                switch (alt146) {
                    	            	case 1 :
                    	            	    // InternalEketal.g:8988:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,23,FOLLOW_54); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalEketal.g:8992:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalEketal.g:8993:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalEketal.g:8993:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalEketal.g:8994:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_53);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop146;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,59,FOLLOW_92); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop148;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalEketal.g:9023:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalEketal.g:9023:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalEketal.g:9024:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalEketal.g:9030:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9036:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalEketal.g:9037:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalEketal.g:9037:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_ID) ) {
                alt150=1;
            }
            else if ( (LA150_0==49) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // InternalEketal.g:9038:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9047:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalEketal.g:9059:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalEketal.g:9059:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalEketal.g:9060:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalEketal.g:9066:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9072:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalEketal.g:9073:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalEketal.g:9073:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalEketal.g:9074:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalEketal.g:9074:3: ()
            // InternalEketal.g:9075:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,49,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalEketal.g:9085:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt153=3;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==90) ) {
                alt153=1;
            }
            else if ( (LA153_0==92) ) {
                alt153=2;
            }
            switch (alt153) {
                case 1 :
                    // InternalEketal.g:9086:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalEketal.g:9086:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalEketal.g:9087:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalEketal.g:9087:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalEketal.g:9088:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalEketal.g:9088:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalEketal.g:9089:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_80);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:9106:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==81) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // InternalEketal.g:9107:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalEketal.g:9107:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalEketal.g:9108:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9127:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalEketal.g:9127:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalEketal.g:9128:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalEketal.g:9128:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalEketal.g:9129:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalEketal.g:9129:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalEketal.g:9130:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_80);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:9147:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==81) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // InternalEketal.g:9148:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalEketal.g:9148:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalEketal.g:9149:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalEketal.g:9172:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalEketal.g:9172:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalEketal.g:9173:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalEketal.g:9179:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9185:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:9186:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:9186:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:9187:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,90,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalEketal.g:9191:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:9192:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:9192:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:9193:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalEketal.g:9214:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalEketal.g:9214:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalEketal.g:9215:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalEketal.g:9221:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9227:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:9228:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:9228:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:9229:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,81,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:9233:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:9234:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:9234:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:9235:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalEketal.g:9256:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalEketal.g:9256:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalEketal.g:9257:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalEketal.g:9263:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9269:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:9270:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:9270:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:9271:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,92,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalEketal.g:9275:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:9276:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:9276:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:9277:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalEketal.g:9298:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalEketal.g:9298:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalEketal.g:9299:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalEketal.g:9305:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9311:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:9312:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:9312:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:9313:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,81,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:9317:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:9318:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:9318:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:9319:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalEketal.g:9340:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalEketal.g:9340:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalEketal.g:9341:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalEketal.g:9347:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9353:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalEketal.g:9354:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalEketal.g:9354:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalEketal.g:9355:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_31);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,39,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalEketal.g:9379:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalEketal.g:9379:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalEketal.g:9380:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalEketal.g:9386:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalEketal.g:9392:2: (this_ID_0= RULE_ID )
            // InternalEketal.g:9393:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalEketal.g:9403:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalEketal.g:9403:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalEketal.g:9404:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalEketal.g:9410:1: ruleXImportSection returns [EObject current=null] : ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9416:2: ( ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalEketal.g:9417:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalEketal.g:9417:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt154=0;
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==40) && (synpred66_InternalEketal())) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalEketal.g:9418:3: ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalEketal.g:9419:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalEketal.g:9420:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"jbase.Jbase.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt154 >= 1 ) break loop154;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(154, input);
                        throw eee;
                }
                cnt154++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalEketal.g:9440:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalEketal.g:9440:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalEketal.g:9441:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalEketal.g:9447:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9453:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalEketal.g:9454:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalEketal.g:9454:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt155=0;
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==RULE_ID) ) {
                    int LA155_2 = input.LA(2);

                    if ( (LA155_2==39) ) {
                        alt155=1;
                    }


                }


                switch (alt155) {
            	case 1 :
            	    // InternalEketal.g:9455:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_31);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,39,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt155 >= 1 ) break loop155;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(155, input);
                        throw eee;
                }
                cnt155++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleTPrefix"
    // InternalEketal.g:9474:1: ruleTPrefix returns [Enumerator current=null] : ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) ;
    public final Enumerator ruleTPrefix() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalEketal.g:9480:2: ( ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) )
            // InternalEketal.g:9481:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            {
            // InternalEketal.g:9481:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==98) ) {
                alt156=1;
            }
            else if ( (LA156_0==99) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalEketal.g:9482:3: (enumLiteral_0= 'call' )
                    {
                    // InternalEketal.g:9482:3: (enumLiteral_0= 'call' )
                    // InternalEketal.g:9483:4: enumLiteral_0= 'call'
                    {
                    enumLiteral_0=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9490:3: (enumLiteral_1= 'execution' )
                    {
                    // InternalEketal.g:9490:3: (enumLiteral_1= 'execution' )
                    // InternalEketal.g:9491:4: enumLiteral_1= 'execution'
                    {
                    enumLiteral_1=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTPrefix"


    // $ANTLR start "ruleStateType"
    // InternalEketal.g:9501:1: ruleStateType returns [Enumerator current=null] : ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) ;
    public final Enumerator ruleStateType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:9507:2: ( ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) )
            // InternalEketal.g:9508:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            {
            // InternalEketal.g:9508:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            int alt157=3;
            switch ( input.LA(1) ) {
            case 100:
                {
                alt157=1;
                }
                break;
            case 101:
                {
                alt157=2;
                }
                break;
            case 102:
                {
                alt157=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }

            switch (alt157) {
                case 1 :
                    // InternalEketal.g:9509:3: (enumLiteral_0= 'state' )
                    {
                    // InternalEketal.g:9509:3: (enumLiteral_0= 'state' )
                    // InternalEketal.g:9510:4: enumLiteral_0= 'state'
                    {
                    enumLiteral_0=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9517:3: (enumLiteral_1= 'start' )
                    {
                    // InternalEketal.g:9517:3: (enumLiteral_1= 'start' )
                    // InternalEketal.g:9518:4: enumLiteral_1= 'start'
                    {
                    enumLiteral_1=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:9525:3: (enumLiteral_2= 'end' )
                    {
                    // InternalEketal.g:9525:3: (enumLiteral_2= 'end' )
                    // InternalEketal.g:9526:4: enumLiteral_2= 'end'
                    {
                    enumLiteral_2=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateType"


    // $ANTLR start "rulePos"
    // InternalEketal.g:9536:1: rulePos returns [Enumerator current=null] : ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) ;
    public final Enumerator rulePos() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:9542:2: ( ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) )
            // InternalEketal.g:9543:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            {
            // InternalEketal.g:9543:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            int alt158=3;
            switch ( input.LA(1) ) {
            case 103:
                {
                alt158=1;
                }
                break;
            case 104:
                {
                alt158=2;
                }
                break;
            case 105:
                {
                alt158=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // InternalEketal.g:9544:3: (enumLiteral_0= 'before' )
                    {
                    // InternalEketal.g:9544:3: (enumLiteral_0= 'before' )
                    // InternalEketal.g:9545:4: enumLiteral_0= 'before'
                    {
                    enumLiteral_0=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9552:3: (enumLiteral_1= 'around' )
                    {
                    // InternalEketal.g:9552:3: (enumLiteral_1= 'around' )
                    // InternalEketal.g:9553:4: enumLiteral_1= 'around'
                    {
                    enumLiteral_1=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:9560:3: (enumLiteral_2= 'after' )
                    {
                    // InternalEketal.g:9560:3: (enumLiteral_2= 'after' )
                    // InternalEketal.g:9561:4: enumLiteral_2= 'after'
                    {
                    enumLiteral_2=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePos"

    // $ANTLR start synpred1_InternalEketal
    public final void synpred1_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:105:5: ( ';' )
        // InternalEketal.g:105:6: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEketal

    // $ANTLR start synpred2_InternalEketal
    public final void synpred2_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:1870:4: ( ruleXBlockExpression )
        // InternalEketal.g:1870:5: ruleXBlockExpression
        {
        pushFollow(FOLLOW_2);
        ruleXBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEketal

    // $ANTLR start synpred4_InternalEketal
    public final void synpred4_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2023:4: ( ';' )
        // InternalEketal.g:2023:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalEketal

    // $ANTLR start synpred5_InternalEketal
    public final void synpred5_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2057:4: ( ( () ruleArrayBrackets ) )
        // InternalEketal.g:2057:5: ( () ruleArrayBrackets )
        {
        // InternalEketal.g:2057:5: ( () ruleArrayBrackets )
        // InternalEketal.g:2058:5: () ruleArrayBrackets
        {
        // InternalEketal.g:2058:5: ()
        // InternalEketal.g:2059:5: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalEketal

    // $ANTLR start synpred6_InternalEketal
    public final void synpred6_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2219:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )
        // InternalEketal.g:2219:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        {
        // InternalEketal.g:2219:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        // InternalEketal.g:2220:5: () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':'
        {
        // InternalEketal.g:2220:5: ()
        // InternalEketal.g:2221:5: 
        {
        }

        match(input,63,FOLLOW_10); if (state.failed) return ;
        match(input,22,FOLLOW_13); if (state.failed) return ;
        // InternalEketal.g:2224:5: ( ( ruleFullJvmFormalParameter ) )
        // InternalEketal.g:2225:6: ( ruleFullJvmFormalParameter )
        {
        // InternalEketal.g:2225:6: ( ruleFullJvmFormalParameter )
        // InternalEketal.g:2226:7: ruleFullJvmFormalParameter
        {
        pushFollow(FOLLOW_9);
        ruleFullJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalEketal

    // $ANTLR start synpred7_InternalEketal
    public final void synpred7_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2261:4: ( ( () 'try' ( ( '(' ) ) ) )
        // InternalEketal.g:2261:5: ( () 'try' ( ( '(' ) ) )
        {
        // InternalEketal.g:2261:5: ( () 'try' ( ( '(' ) ) )
        // InternalEketal.g:2262:5: () 'try' ( ( '(' ) )
        {
        // InternalEketal.g:2262:5: ()
        // InternalEketal.g:2263:5: 
        {
        }

        match(input,70,FOLLOW_10); if (state.failed) return ;
        // InternalEketal.g:2265:5: ( ( '(' ) )
        // InternalEketal.g:2266:6: ( '(' )
        {
        // InternalEketal.g:2266:6: ( '(' )
        // InternalEketal.g:2267:7: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalEketal

    // $ANTLR start synpred8_InternalEketal
    public final void synpred8_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2292:4: ( ( () 'synchronized' '(' ) )
        // InternalEketal.g:2292:5: ( () 'synchronized' '(' )
        {
        // InternalEketal.g:2292:5: ( () 'synchronized' '(' )
        // InternalEketal.g:2293:5: () 'synchronized' '('
        {
        // InternalEketal.g:2293:5: ()
        // InternalEketal.g:2294:5: 
        {
        }

        match(input,73,FOLLOW_10); if (state.failed) return ;
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalEketal

    // $ANTLR start synpred9_InternalEketal
    public final void synpred9_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2429:4: ( ';' )
        // InternalEketal.g:2429:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalEketal

    // $ANTLR start synpred11_InternalEketal
    public final void synpred11_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2711:5: ( ',' )
        // InternalEketal.g:2711:6: ','
        {
        match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalEketal

    // $ANTLR start synpred12_InternalEketal
    public final void synpred12_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2828:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )
        // InternalEketal.g:2828:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        {
        // InternalEketal.g:2828:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        // InternalEketal.g:2829:6: () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign
        {
        // InternalEketal.g:2829:6: ()
        // InternalEketal.g:2830:6: 
        {
        }

        // InternalEketal.g:2831:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:2832:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:2832:7: ( ruleFeatureCallID )
        // InternalEketal.g:2833:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_41);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,47,FOLLOW_38); if (state.failed) return ;
        // InternalEketal.g:2837:6: ( ( ruleXExpression ) )
        // InternalEketal.g:2838:7: ( ruleXExpression )
        {
        // InternalEketal.g:2838:7: ( ruleXExpression )
        // InternalEketal.g:2839:8: ruleXExpression
        {
        pushFollow(FOLLOW_42);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,48,FOLLOW_43); if (state.failed) return ;
        // InternalEketal.g:2843:6: ( '[' ( ( ruleXExpression ) ) ']' )*
        loop160:
        do {
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==47) ) {
                alt160=1;
            }


            switch (alt160) {
        	case 1 :
        	    // InternalEketal.g:2844:7: '[' ( ( ruleXExpression ) ) ']'
        	    {
        	    match(input,47,FOLLOW_38); if (state.failed) return ;
        	    // InternalEketal.g:2845:7: ( ( ruleXExpression ) )
        	    // InternalEketal.g:2846:8: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:2846:8: ( ruleXExpression )
        	    // InternalEketal.g:2847:9: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_42);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,48,FOLLOW_43); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop160;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalEketal

    // $ANTLR start synpred13_InternalEketal
    public final void synpred13_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2967:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:2967:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:2967:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:2968:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:2968:6: ()
        // InternalEketal.g:2969:6: 
        {
        }

        // InternalEketal.g:2970:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:2971:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:2971:7: ( ruleFeatureCallID )
        // InternalEketal.g:2972:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_43);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalEketal

    // $ANTLR start synpred14_InternalEketal
    public final void synpred14_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3044:7: ( ( () '?' ) )
        // InternalEketal.g:3044:8: ( () '?' )
        {
        // InternalEketal.g:3044:8: ( () '?' )
        // InternalEketal.g:3045:8: () '?'
        {
        // InternalEketal.g:3045:8: ()
        // InternalEketal.g:3046:8: 
        {
        }

        match(input,49,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalEketal

    // $ANTLR start synpred15_InternalEketal
    public final void synpred15_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3110:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalEketal.g:3110:8: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalEketal.g:3110:8: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalEketal.g:3111:8: () ( ( ruleOpMultiAssign ) )
        {
        // InternalEketal.g:3111:8: ()
        // InternalEketal.g:3112:8: 
        {
        }

        // InternalEketal.g:3113:8: ( ( ruleOpMultiAssign ) )
        // InternalEketal.g:3114:9: ( ruleOpMultiAssign )
        {
        // InternalEketal.g:3114:9: ( ruleOpMultiAssign )
        // InternalEketal.g:3115:10: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred15_InternalEketal

    // $ANTLR start synpred16_InternalEketal
    public final void synpred16_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3312:7: ( '[' )
        // InternalEketal.g:3312:8: '['
        {
        match(input,47,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalEketal

    // $ANTLR start synpred17_InternalEketal
    public final void synpred17_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3300:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:3300:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:3300:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:3301:5: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:3301:5: ()
        // InternalEketal.g:3302:5: 
        {
        }

        match(input,47,FOLLOW_38); if (state.failed) return ;
        // InternalEketal.g:3304:5: ( ( ruleXExpression ) )
        // InternalEketal.g:3305:6: ( ruleXExpression )
        {
        // InternalEketal.g:3305:6: ( ruleXExpression )
        // InternalEketal.g:3306:7: ruleXExpression
        {
        pushFollow(FOLLOW_42);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,48,FOLLOW_34); if (state.failed) return ;
        // InternalEketal.g:3310:5: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop161:
        do {
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==47) && (synpred16_InternalEketal())) {
                alt161=1;
            }


            switch (alt161) {
        	case 1 :
        	    // InternalEketal.g:3311:6: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:3311:6: ( ( '[' )=> '[' )
        	    // InternalEketal.g:3312:7: ( '[' )=> '['
        	    {
        	    match(input,47,FOLLOW_38); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:3315:6: ( ( ruleXExpression ) )
        	    // InternalEketal.g:3316:7: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:3316:7: ( ruleXExpression )
        	    // InternalEketal.g:3317:8: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_42);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,48,FOLLOW_34); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop161;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred17_InternalEketal

    // $ANTLR start synpred18_InternalEketal
    public final void synpred18_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3361:7: ( '[' )
        // InternalEketal.g:3361:8: '['
        {
        match(input,47,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_InternalEketal

    // $ANTLR start synpred19_InternalEketal
    public final void synpred19_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3437:5: ( ( '(' ) )
        // InternalEketal.g:3437:6: ( '(' )
        {
        // InternalEketal.g:3437:6: ( '(' )
        // InternalEketal.g:3438:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEketal

    // $ANTLR start synpred20_InternalEketal
    public final void synpred20_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3553:5: ( ( '<' ) )
        // InternalEketal.g:3553:6: ( '<' )
        {
        // InternalEketal.g:3553:6: ( '<' )
        // InternalEketal.g:3554:6: '<'
        {
        match(input,58,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalEketal

    // $ANTLR start synpred21_InternalEketal
    public final void synpred21_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3623:5: ( ( '(' ) )
        // InternalEketal.g:3623:6: ( '(' )
        {
        // InternalEketal.g:3623:6: ( '(' )
        // InternalEketal.g:3624:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEketal

    // $ANTLR start synpred23_InternalEketal
    public final void synpred23_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3801:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:3801:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:3801:6: ( ruleXJArrayDimension )
        // InternalEketal.g:3802:6: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalEketal

    // $ANTLR start synpred24_InternalEketal
    public final void synpred24_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3848:4: ( ( ruleXJArrayLiteral ) )
        // InternalEketal.g:3848:5: ( ruleXJArrayLiteral )
        {
        // InternalEketal.g:3848:5: ( ruleXJArrayLiteral )
        // InternalEketal.g:3849:5: ruleXJArrayLiteral
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalEketal

    // $ANTLR start synpred25_InternalEketal
    public final void synpred25_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3920:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )
        // InternalEketal.g:3920:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        {
        // InternalEketal.g:3920:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        // InternalEketal.g:3921:5: () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) )
        {
        // InternalEketal.g:3921:5: ()
        // InternalEketal.g:3922:5: 
        {
        }

        match(input,22,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:3924:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:3925:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:3925:6: ( ruleJvmTypeReference )
        // InternalEketal.g:3926:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_20);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,24,FOLLOW_38); if (state.failed) return ;
        // InternalEketal.g:3930:5: ( ( ruleXExpression ) )
        // InternalEketal.g:3931:6: ( ruleXExpression )
        {
        // InternalEketal.g:3931:6: ( ruleXExpression )
        // InternalEketal.g:3932:7: ruleXExpression
        {
        pushFollow(FOLLOW_2);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_InternalEketal

    // $ANTLR start synpred26_InternalEketal
    public final void synpred26_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4023:5: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4023:6: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4023:6: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4024:6: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4024:6: ()
        // InternalEketal.g:4025:6: 
        {
        }

        // InternalEketal.g:4026:6: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4027:7: ( ruleOpPostfix )
        {
        // InternalEketal.g:4027:7: ( ruleOpPostfix )
        // InternalEketal.g:4028:8: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_InternalEketal

    // $ANTLR start synpred27_InternalEketal
    public final void synpred27_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4091:6: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4091:7: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4091:7: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4092:7: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4092:7: ()
        // InternalEketal.g:4093:7: 
        {
        }

        // InternalEketal.g:4094:7: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4095:8: ( ruleOpPostfix )
        {
        // InternalEketal.g:4095:8: ( ruleOpPostfix )
        // InternalEketal.g:4096:9: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalEketal

    // $ANTLR start synpred28_InternalEketal
    public final void synpred28_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4141:9: ( '[' )
        // InternalEketal.g:4141:10: '['
        {
        match(input,47,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_InternalEketal

    // $ANTLR start synpred29_InternalEketal
    public final void synpred29_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4129:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:4129:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:4129:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:4130:7: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:4130:7: ()
        // InternalEketal.g:4131:7: 
        {
        }

        match(input,47,FOLLOW_38); if (state.failed) return ;
        // InternalEketal.g:4133:7: ( ( ruleXExpression ) )
        // InternalEketal.g:4134:8: ( ruleXExpression )
        {
        // InternalEketal.g:4134:8: ( ruleXExpression )
        // InternalEketal.g:4135:9: ruleXExpression
        {
        pushFollow(FOLLOW_42);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,48,FOLLOW_34); if (state.failed) return ;
        // InternalEketal.g:4139:7: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop162:
        do {
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==47) && (synpred28_InternalEketal())) {
                alt162=1;
            }


            switch (alt162) {
        	case 1 :
        	    // InternalEketal.g:4140:8: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:4140:8: ( ( '[' )=> '[' )
        	    // InternalEketal.g:4141:9: ( '[' )=> '['
        	    {
        	    match(input,47,FOLLOW_38); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:4144:8: ( ( ruleXExpression ) )
        	    // InternalEketal.g:4145:9: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:4145:9: ( ruleXExpression )
        	    // InternalEketal.g:4146:10: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_42);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,48,FOLLOW_34); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop162;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred29_InternalEketal

    // $ANTLR start synpred30_InternalEketal
    public final void synpred30_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4190:9: ( '[' )
        // InternalEketal.g:4190:10: '['
        {
        match(input,47,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred30_InternalEketal

    // $ANTLR start synpred31_InternalEketal
    public final void synpred31_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4253:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )
        // InternalEketal.g:4253:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        {
        // InternalEketal.g:4253:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        // InternalEketal.g:4254:6: () ( ( ruleArrayBrackets ) )* '.' 'class'
        {
        // InternalEketal.g:4254:6: ()
        // InternalEketal.g:4255:6: 
        {
        }

        // InternalEketal.g:4256:6: ( ( ruleArrayBrackets ) )*
        loop163:
        do {
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==47) ) {
                alt163=1;
            }


            switch (alt163) {
        	case 1 :
        	    // InternalEketal.g:4257:7: ( ruleArrayBrackets )
        	    {
        	    // InternalEketal.g:4257:7: ( ruleArrayBrackets )
        	    // InternalEketal.g:4258:8: ruleArrayBrackets
        	    {
        	    pushFollow(FOLLOW_59);
        	    ruleArrayBrackets();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop163;
            }
        } while (true);

        match(input,39,FOLLOW_60); if (state.failed) return ;
        match(input,62,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalEketal

    // $ANTLR start synpred32_InternalEketal
    public final void synpred32_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4305:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:4305:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:4305:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:4306:7: () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:4306:7: ()
        // InternalEketal.g:4307:7: 
        {
        }

        match(input,39,FOLLOW_61); if (state.failed) return ;
        // InternalEketal.g:4309:7: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:4310:8: ( ruleFeatureCallID )
        {
        // InternalEketal.g:4310:8: ( ruleFeatureCallID )
        // InternalEketal.g:4311:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_43);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEketal

    // $ANTLR start synpred33_InternalEketal
    public final void synpred33_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4377:6: ( ( () '.' ) )
        // InternalEketal.g:4377:7: ( () '.' )
        {
        // InternalEketal.g:4377:7: ( () '.' )
        // InternalEketal.g:4378:7: () '.'
        {
        // InternalEketal.g:4378:7: ()
        // InternalEketal.g:4379:7: 
        {
        }

        match(input,39,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEketal

    // $ANTLR start synpred34_InternalEketal
    public final void synpred34_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4415:7: ( ( '(' ) )
        // InternalEketal.g:4415:8: ( '(' )
        {
        // InternalEketal.g:4415:8: ( '(' )
        // InternalEketal.g:4416:8: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalEketal

    // $ANTLR start synpred36_InternalEketal
    public final void synpred36_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4855:5: ( 'else' )
        // InternalEketal.g:4855:6: 'else'
        {
        match(input,64,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalEketal

    // $ANTLR start synpred38_InternalEketal
    public final void synpred38_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5599:7: ( 'finally' )
        // InternalEketal.g:5599:8: 'finally'
        {
        match(input,71,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalEketal

    // $ANTLR start synpred41_InternalEketal
    public final void synpred41_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5839:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )
        // InternalEketal.g:5839:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        {
        // InternalEketal.g:5839:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        // InternalEketal.g:5840:5: () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) )
        {
        // InternalEketal.g:5840:5: ()
        // InternalEketal.g:5841:5: 
        {
        }

        match(input,61,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:5843:5: ( ( ruleQualifiedName ) )
        // InternalEketal.g:5844:6: ( ruleQualifiedName )
        {
        // InternalEketal.g:5844:6: ( ruleQualifiedName )
        // InternalEketal.g:5845:7: ruleQualifiedName
        {
        pushFollow(FOLLOW_41);
        ruleQualifiedName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:5848:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:5849:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:5849:6: ( ruleXJArrayDimension )
        // InternalEketal.g:5850:7: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalEketal

    // $ANTLR start synpred42_InternalEketal
    public final void synpred42_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6233:6: ( ( '>' '>' ) )
        // InternalEketal.g:6233:7: ( '>' '>' )
        {
        // InternalEketal.g:6233:7: ( '>' '>' )
        // InternalEketal.g:6234:7: '>' '>'
        {
        match(input,59,FOLLOW_77); if (state.failed) return ;
        match(input,59,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalEketal

    // $ANTLR start synpred43_InternalEketal
    public final void synpred43_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6294:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalEketal.g:6294:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalEketal.g:6294:6: ( () ( ( ruleOpAnd ) ) )
        // InternalEketal.g:6295:6: () ( ( ruleOpAnd ) )
        {
        // InternalEketal.g:6295:6: ()
        // InternalEketal.g:6296:6: 
        {
        }

        // InternalEketal.g:6297:6: ( ( ruleOpAnd ) )
        // InternalEketal.g:6298:7: ( ruleOpAnd )
        {
        // InternalEketal.g:6298:7: ( ruleOpAnd )
        // InternalEketal.g:6299:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred43_InternalEketal

    // $ANTLR start synpred44_InternalEketal
    public final void synpred44_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6379:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )
        // InternalEketal.g:6379:6: ( () ( ( ruleOpInclusiveOr ) ) )
        {
        // InternalEketal.g:6379:6: ( () ( ( ruleOpInclusiveOr ) ) )
        // InternalEketal.g:6380:6: () ( ( ruleOpInclusiveOr ) )
        {
        // InternalEketal.g:6380:6: ()
        // InternalEketal.g:6381:6: 
        {
        }

        // InternalEketal.g:6382:6: ( ( ruleOpInclusiveOr ) )
        // InternalEketal.g:6383:7: ( ruleOpInclusiveOr )
        {
        // InternalEketal.g:6383:7: ( ruleOpInclusiveOr )
        // InternalEketal.g:6384:8: ruleOpInclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpInclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalEketal

    // $ANTLR start synpred45_InternalEketal
    public final void synpred45_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6486:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )
        // InternalEketal.g:6486:6: ( () ( ( ruleOpExclusiveOr ) ) )
        {
        // InternalEketal.g:6486:6: ( () ( ( ruleOpExclusiveOr ) ) )
        // InternalEketal.g:6487:6: () ( ( ruleOpExclusiveOr ) )
        {
        // InternalEketal.g:6487:6: ()
        // InternalEketal.g:6488:6: 
        {
        }

        // InternalEketal.g:6489:6: ( ( ruleOpExclusiveOr ) )
        // InternalEketal.g:6490:7: ( ruleOpExclusiveOr )
        {
        // InternalEketal.g:6490:7: ( ruleOpExclusiveOr )
        // InternalEketal.g:6491:8: ruleOpExclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpExclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalEketal

    // $ANTLR start synpred46_InternalEketal
    public final void synpred46_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6593:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )
        // InternalEketal.g:6593:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        {
        // InternalEketal.g:6593:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        // InternalEketal.g:6594:6: () ( ( ruleOpBitwiseAnd ) )
        {
        // InternalEketal.g:6594:6: ()
        // InternalEketal.g:6595:6: 
        {
        }

        // InternalEketal.g:6596:6: ( ( ruleOpBitwiseAnd ) )
        // InternalEketal.g:6597:7: ( ruleOpBitwiseAnd )
        {
        // InternalEketal.g:6597:7: ( ruleOpBitwiseAnd )
        // InternalEketal.g:6598:8: ruleOpBitwiseAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpBitwiseAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalEketal

    // $ANTLR start synpred47_InternalEketal
    public final void synpred47_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6734:5: ( ( () '{' ) )
        // InternalEketal.g:6734:6: ( () '{' )
        {
        // InternalEketal.g:6734:6: ( () '{' )
        // InternalEketal.g:6735:6: () '{'
        {
        // InternalEketal.g:6735:6: ()
        // InternalEketal.g:6736:6: 
        {
        }

        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalEketal

    // $ANTLR start synpred48_InternalEketal
    public final void synpred48_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6835:5: ( ( () '{' ) )
        // InternalEketal.g:6835:6: ( () '{' )
        {
        // InternalEketal.g:6835:6: ( () '{' )
        // InternalEketal.g:6836:6: () '{'
        {
        // InternalEketal.g:6836:6: ()
        // InternalEketal.g:6837:6: 
        {
        }

        match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalEketal

    // $ANTLR start synpred49_InternalEketal
    public final void synpred49_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6963:5: ( '(' )
        // InternalEketal.g:6963:6: '('
        {
        match(input,22,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_InternalEketal

    // $ANTLR start synpred50_InternalEketal
    public final void synpred50_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6972:7: ( ( ( ( ruleValidID ) ) '=' ) )
        // InternalEketal.g:6972:8: ( ( ( ruleValidID ) ) '=' )
        {
        // InternalEketal.g:6972:8: ( ( ( ruleValidID ) ) '=' )
        // InternalEketal.g:6973:8: ( ( ruleValidID ) ) '='
        {
        // InternalEketal.g:6973:8: ( ( ruleValidID ) )
        // InternalEketal.g:6974:9: ( ruleValidID )
        {
        // InternalEketal.g:6974:9: ( ruleValidID )
        // InternalEketal.g:6975:10: ruleValidID
        {
        pushFollow(FOLLOW_46);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,46,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalEketal

    // $ANTLR start synpred53_InternalEketal
    public final void synpred53_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7243:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalEketal.g:7243:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalEketal.g:7243:6: ( () ( ( ruleOpOr ) ) )
        // InternalEketal.g:7244:6: () ( ( ruleOpOr ) )
        {
        // InternalEketal.g:7244:6: ()
        // InternalEketal.g:7245:6: 
        {
        }

        // InternalEketal.g:7246:6: ( ( ruleOpOr ) )
        // InternalEketal.g:7247:7: ( ruleOpOr )
        {
        // InternalEketal.g:7247:7: ( ruleOpOr )
        // InternalEketal.g:7248:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred53_InternalEketal

    // $ANTLR start synpred54_InternalEketal
    public final void synpred54_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7372:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalEketal.g:7372:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalEketal.g:7372:6: ( () ( ( ruleOpEquality ) ) )
        // InternalEketal.g:7373:6: () ( ( ruleOpEquality ) )
        {
        // InternalEketal.g:7373:6: ()
        // InternalEketal.g:7374:6: 
        {
        }

        // InternalEketal.g:7375:6: ( ( ruleOpEquality ) )
        // InternalEketal.g:7376:7: ( ruleOpEquality )
        {
        // InternalEketal.g:7376:7: ( ruleOpEquality )
        // InternalEketal.g:7377:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred54_InternalEketal

    // $ANTLR start synpred55_InternalEketal
    public final void synpred55_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7458:6: ( ( () 'instanceof' ) )
        // InternalEketal.g:7458:7: ( () 'instanceof' )
        {
        // InternalEketal.g:7458:7: ( () 'instanceof' )
        // InternalEketal.g:7459:7: () 'instanceof'
        {
        // InternalEketal.g:7459:7: ()
        // InternalEketal.g:7460:7: 
        {
        }

        match(input,86,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalEketal

    // $ANTLR start synpred56_InternalEketal
    public final void synpred56_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7501:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalEketal.g:7501:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalEketal.g:7501:7: ( () ( ( ruleOpCompare ) ) )
        // InternalEketal.g:7502:7: () ( ( ruleOpCompare ) )
        {
        // InternalEketal.g:7502:7: ()
        // InternalEketal.g:7503:7: 
        {
        }

        // InternalEketal.g:7504:7: ( ( ruleOpCompare ) )
        // InternalEketal.g:7505:8: ( ruleOpCompare )
        {
        // InternalEketal.g:7505:8: ( ruleOpCompare )
        // InternalEketal.g:7506:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalEketal

    // $ANTLR start synpred57_InternalEketal
    public final void synpred57_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7636:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalEketal.g:7636:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalEketal.g:7636:6: ( () ( ( ruleOpOther ) ) )
        // InternalEketal.g:7637:6: () ( ( ruleOpOther ) )
        {
        // InternalEketal.g:7637:6: ()
        // InternalEketal.g:7638:6: 
        {
        }

        // InternalEketal.g:7639:6: ( ( ruleOpOther ) )
        // InternalEketal.g:7640:7: ( ruleOpOther )
        {
        // InternalEketal.g:7640:7: ( ruleOpOther )
        // InternalEketal.g:7641:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred57_InternalEketal

    // $ANTLR start synpred58_InternalEketal
    public final void synpred58_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7721:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalEketal.g:7721:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalEketal.g:7721:6: ( () ( ( ruleOpAdd ) ) )
        // InternalEketal.g:7722:6: () ( ( ruleOpAdd ) )
        {
        // InternalEketal.g:7722:6: ()
        // InternalEketal.g:7723:6: 
        {
        }

        // InternalEketal.g:7724:6: ( ( ruleOpAdd ) )
        // InternalEketal.g:7725:7: ( ruleOpAdd )
        {
        // InternalEketal.g:7725:7: ( ruleOpAdd )
        // InternalEketal.g:7726:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred58_InternalEketal

    // $ANTLR start synpred59_InternalEketal
    public final void synpred59_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7836:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalEketal.g:7836:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalEketal.g:7836:6: ( () ( ( ruleOpMulti ) ) )
        // InternalEketal.g:7837:6: () ( ( ruleOpMulti ) )
        {
        // InternalEketal.g:7837:6: ()
        // InternalEketal.g:7838:6: 
        {
        }

        // InternalEketal.g:7839:6: ( ( ruleOpMulti ) )
        // InternalEketal.g:7840:7: ( ruleOpMulti )
        {
        // InternalEketal.g:7840:7: ( ruleOpMulti )
        // InternalEketal.g:7841:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalEketal

    // $ANTLR start synpred60_InternalEketal
    public final void synpred60_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8270:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalEketal.g:8270:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalEketal.g:8270:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalEketal.g:8271:5: () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalEketal.g:8271:5: ()
        // InternalEketal.g:8272:5: 
        {
        }

        // InternalEketal.g:8273:5: ( ( 'final' ) )?
        int alt164=2;
        int LA164_0 = input.LA(1);

        if ( (LA164_0==42) ) {
            alt164=1;
        }
        switch (alt164) {
            case 1 :
                // InternalEketal.g:8274:6: ( 'final' )
                {
                // InternalEketal.g:8274:6: ( 'final' )
                // InternalEketal.g:8275:7: 'final'
                {
                match(input,42,FOLLOW_3); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalEketal.g:8278:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:8279:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:8279:6: ( ruleJvmTypeReference )
        // InternalEketal.g:8280:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:8283:5: ( ( ruleValidID ) )
        // InternalEketal.g:8284:6: ( ruleValidID )
        {
        // InternalEketal.g:8284:6: ( ruleValidID )
        // InternalEketal.g:8285:7: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalEketal

    // $ANTLR start synpred61_InternalEketal
    public final void synpred61_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8655:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )
        // InternalEketal.g:
        {
        if ( input.LA(1)==RULE_ID||(input.LA(1)>=RULE_CHARACTER && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==18||input.LA(1)==22||input.LA(1)==28||(input.LA(1)>=40 && input.LA(1)<=41)||input.LA(1)==61||(input.LA(1)>=82 && input.LA(1)<=84)||(input.LA(1)>=87 && input.LA(1)<=88)||(input.LA(1)>=90 && input.LA(1)<=95) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred61_InternalEketal

    // $ANTLR start synpred62_InternalEketal
    public final void synpred62_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8705:5: ( '.' )
        // InternalEketal.g:8705:6: '.'
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalEketal

    // $ANTLR start synpred63_InternalEketal
    public final void synpred63_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8868:5: ( '<' )
        // InternalEketal.g:8868:6: '<'
        {
        match(input,58,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalEketal

    // $ANTLR start synpred64_InternalEketal
    public final void synpred64_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8924:6: ( ( () '.' ) )
        // InternalEketal.g:8924:7: ( () '.' )
        {
        // InternalEketal.g:8924:7: ( () '.' )
        // InternalEketal.g:8925:7: () '.'
        {
        // InternalEketal.g:8925:7: ()
        // InternalEketal.g:8926:7: 
        {
        }

        match(input,39,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalEketal

    // $ANTLR start synpred65_InternalEketal
    public final void synpred65_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8962:7: ( '<' )
        // InternalEketal.g:8962:8: '<'
        {
        match(input,58,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalEketal

    // $ANTLR start synpred66_InternalEketal
    public final void synpred66_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9418:3: ( 'import' )
        // InternalEketal.g:9418:4: 'import'
        {
        match(input,40,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred66_InternalEketal

    // Delegated rules

    public final boolean synpred13_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA33 dfa33 = new DFA33(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA147 dfa147 = new DFA147(this);
    static final String dfa_1s = "\46\uffff";
    static final String dfa_2s = "\1\4\1\0\44\uffff";
    static final String dfa_3s = "\1\141\1\0\44\uffff";
    static final String dfa_4s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_5s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\uffff\5\2\5\uffff\1\2\1\uffff\1\1\3\uffff\1\2\5\uffff\1\2\2\uffff\1\2\10\uffff\3\2\1\uffff\2\2\17\uffff\1\2\1\uffff\1\2\1\uffff\3\2\2\uffff\1\2\2\uffff\1\2\10\uffff\3\2\2\uffff\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1868:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\7\uffff";
    static final String dfa_8s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_9s = "\1\4\1\uffff\1\20\1\4\1\uffff\1\20\1\uffff";
    static final String dfa_10s = "\1\51\1\uffff\1\50\1\5\1\uffff\1\50\1\uffff";
    static final String dfa_11s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_12s = "\7\uffff}>";
    static final String[] dfa_13s = {
            "\1\2\44\uffff\1\1",
            "",
            "\2\4\25\uffff\1\3\1\4",
            "\1\5\1\6",
            "",
            "\2\4\25\uffff\1\3\1\4",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1915:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
    static final String dfa_14s = "\51\uffff";
    static final String dfa_15s = "\1\4\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_16s = "\1\141\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_17s = "\1\uffff\1\1\34\uffff\1\2\1\3\1\uffff\1\6\1\uffff\1\11\1\12\1\4\1\5\1\7\1\10";
    static final String dfa_18s = "\1\0\37\uffff\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\1\uffff\5\1\5\uffff\1\44\1\uffff\1\1\3\uffff\1\1\5\uffff\1\1\2\uffff\1\37\10\uffff\3\1\1\uffff\2\1\17\uffff\1\1\1\uffff\1\40\1\uffff\1\41\1\1\1\36\2\uffff\1\42\2\uffff\1\43\10\uffff\3\1\2\uffff\2\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2190:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_0 = input.LA(1);

                         
                        int index40_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA40_0==RULE_ID||(LA40_0>=RULE_CHARACTER && LA40_0<=RULE_DECIMAL)||LA40_0==18||LA40_0==22||LA40_0==28||(LA40_0>=40 && LA40_0<=42)||(LA40_0>=44 && LA40_0<=45)||LA40_0==61||LA40_0==66||(LA40_0>=82 && LA40_0<=84)||(LA40_0>=87 && LA40_0<=88)||(LA40_0>=90 && LA40_0<=97)) ) {s = 1;}

                        else if ( (LA40_0==67) ) {s = 30;}

                        else if ( (LA40_0==31) ) {s = 31;}

                        else if ( (LA40_0==63) ) {s = 32;}

                        else if ( (LA40_0==65) ) {s = 33;}

                        else if ( (LA40_0==70) ) {s = 34;}

                        else if ( (LA40_0==73) && (synpred8_InternalEketal())) {s = 35;}

                        else if ( (LA40_0==16) ) {s = 36;}

                         
                        input.seek(index40_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_32 = input.LA(1);

                         
                        int index40_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index40_32);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_34 = input.LA(1);

                         
                        int index40_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalEketal()) ) {s = 39;}

                        else if ( (true) ) {s = 40;}

                         
                        input.seek(index40_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\32\uffff";
    static final String dfa_21s = "\1\4\5\0\24\uffff";
    static final String dfa_22s = "\1\137\5\0\24\uffff";
    static final String dfa_23s = "\6\uffff\1\3\21\uffff\1\1\1\2";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\24\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\uffff\5\6\7\uffff\1\6\3\uffff\1\6\5\uffff\1\6\13\uffff\1\4\1\3\23\uffff\1\6\24\uffff\3\6\2\uffff\2\6\1\uffff\1\2\1\5\4\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "2825:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_1 = input.LA(1);

                         
                        int index51_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index51_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_2 = input.LA(1);

                         
                        int index51_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index51_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_3 = input.LA(1);

                         
                        int index51_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index51_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_4 = input.LA(1);

                         
                        int index51_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index51_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA51_5 = input.LA(1);

                         
                        int index51_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index51_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\17\uffff";
    static final String dfa_27s = "\1\14\16\uffff";
    static final String dfa_28s = "\1\4\13\0\3\uffff";
    static final String dfa_29s = "\1\141\13\0\3\uffff";
    static final String dfa_30s = "\14\uffff\1\3\1\1\1\2";
    static final String dfa_31s = "\1\uffff\1\5\1\6\1\0\1\7\1\1\1\10\1\2\1\11\1\3\1\12\1\4\3\uffff}>";
    static final String[] dfa_32s = {
            "\7\14\5\uffff\1\14\1\uffff\3\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\14\7\uffff\4\14\1\uffff\2\14\1\uffff\2\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\14\1\uffff\10\14\2\uffff\14\14\1\uffff\3\14\1\uffff\10\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3041:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_3 = input.LA(1);

                         
                        int index50_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_5 = input.LA(1);

                         
                        int index50_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA50_7 = input.LA(1);

                         
                        int index50_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA50_9 = input.LA(1);

                         
                        int index50_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA50_11 = input.LA(1);

                         
                        int index50_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalEketal()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA50_2 = input.LA(1);

                         
                        int index50_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA50_4 = input.LA(1);

                         
                        int index50_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA50_6 = input.LA(1);

                         
                        int index50_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA50_8 = input.LA(1);

                         
                        int index50_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_8);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA50_10 = input.LA(1);

                         
                        int index50_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index50_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\111\uffff";
    static final String dfa_34s = "\1\2\110\uffff";
    static final String dfa_35s = "\1\4\1\0\107\uffff";
    static final String dfa_36s = "\1\141\1\0\107\uffff";
    static final String dfa_37s = "\2\uffff\1\2\105\uffff\1\1";
    static final String dfa_38s = "\1\uffff\1\0\107\uffff}>";
    static final String[] dfa_39s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\7\uffff\4\2\1\uffff\2\2\1\uffff\1\1\16\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3299:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\1\1\110\uffff";
    static final String dfa_41s = "\1\4\1\uffff\1\0\106\uffff";
    static final String dfa_42s = "\1\141\1\uffff\1\0\106\uffff";
    static final String dfa_43s = "\1\uffff\1\2\106\uffff\1\1";
    static final String dfa_44s = "\2\uffff\1\0\106\uffff}>";
    static final String[] dfa_45s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\7\uffff\4\1\1\uffff\2\1\1\uffff\1\2\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_33;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 3359:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_2 = input.LA(1);

                         
                        int index54_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index54_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_46s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\1\1\2\2\1\uffff\3\2\2\uffff\1\2\7\uffff\4\2\1\uffff\2\2\1\uffff\17\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "3435:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_47s = {
            "\7\2\5\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\7\uffff\4\2\1\uffff\2\2\1\uffff\13\2\1\1\3\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "3551:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "3621:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\4\2\uffff\1\0\105\uffff";
    static final String dfa_49s = "\1\141\2\uffff\1\0\105\uffff";
    static final String dfa_50s = "\3\uffff\1\0\105\uffff}>";
    static final String[] dfa_51s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\7\uffff\4\1\1\uffff\2\1\1\uffff\1\3\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_33;
            this.eof = dfa_40;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_43;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 3799:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_52s = {
            "\7\2\5\uffff\1\2\1\uffff\1\1\2\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\7\uffff\4\2\1\uffff\2\2\1\uffff\17\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "3847:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\25\uffff";
    static final String dfa_54s = "\1\4\1\0\23\uffff";
    static final String dfa_55s = "\1\137\1\0\23\uffff";
    static final String dfa_56s = "\2\uffff\1\2\21\uffff\1\1";
    static final String dfa_57s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_58s = {
            "\1\2\1\uffff\5\2\7\uffff\1\2\3\uffff\1\1\21\uffff\2\2\23\uffff\1\2\31\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "3918:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalEketal()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\1\4\35\uffff\1\0\52\uffff";
    static final String dfa_60s = "\1\141\35\uffff\1\0\52\uffff";
    static final String dfa_61s = "\36\uffff\1\0\52\uffff}>";
    static final String[] dfa_62s = {
            "\7\1\5\uffff\1\1\1\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\7\uffff\4\1\1\uffff\2\1\1\uffff\1\36\16\1\1\uffff\10\1\2\uffff\14\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_33;
            this.eof = dfa_40;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_43;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "()* loopback of 4188:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_30 = input.LA(1);

                         
                        int index70_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index70_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "4413:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\24\uffff";
    static final String dfa_64s = "\1\4\1\0\22\uffff";
    static final String dfa_65s = "\1\137\1\0\22\uffff";
    static final String dfa_66s = "\2\uffff\1\3\5\uffff\1\4\10\uffff\1\5\1\1\1\2";
    static final String dfa_67s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_68s = {
            "\1\2\1\uffff\5\10\7\uffff\1\10\3\uffff\1\21\21\uffff\2\2\23\uffff\1\1\34\uffff\3\2\3\10",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "5837:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalEketal()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\1\4\1\0\30\uffff";
    static final String dfa_70s = "\1\137\1\0\30\uffff";
    static final String dfa_71s = "\2\uffff\1\2\26\uffff\1\1";
    static final String dfa_72s = "\1\uffff\1\0\30\uffff}>";
    static final String[] dfa_73s = {
            "\1\2\1\uffff\5\2\7\uffff\1\1\3\uffff\1\2\5\uffff\1\2\13\uffff\2\2\23\uffff\1\2\24\uffff\4\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6731:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6832:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\33\uffff";
    static final String dfa_75s = "\1\4\1\0\31\uffff";
    static final String dfa_76s = "\1\137\1\0\31\uffff";
    static final String dfa_77s = "\2\uffff\1\2\26\uffff\1\3\1\1";
    static final String dfa_78s = "\1\uffff\1\0\31\uffff}>";
    static final String[] dfa_79s = {
            "\1\1\1\uffff\5\2\7\uffff\1\2\3\uffff\1\2\1\uffff\1\31\3\uffff\1\2\13\uffff\2\2\23\uffff\1\2\24\uffff\4\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_74;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "6969:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_1 = input.LA(1);

                         
                        int index115_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalEketal()) ) {s = 26;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index115_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\31\uffff";
    static final String dfa_81s = "\1\4\1\uffff\1\0\26\uffff";
    static final String dfa_82s = "\1\137\1\uffff\1\0\26\uffff";
    static final String dfa_83s = "\1\uffff\1\1\1\uffff\1\2\25\uffff";
    static final String dfa_84s = "\1\0\1\uffff\1\1\26\uffff}>";
    static final String[] dfa_85s = {
            "\1\2\1\uffff\5\3\7\uffff\1\3\3\uffff\1\3\5\uffff\1\3\13\uffff\2\3\1\1\22\uffff\1\3\24\uffff\3\3\2\uffff\2\3\1\uffff\6\3",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "8268:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA134_0 = input.LA(1);

                         
                        int index134_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA134_0==42) && (synpred60_InternalEketal())) {s = 1;}

                        else if ( (LA134_0==RULE_ID) ) {s = 2;}

                        else if ( ((LA134_0>=RULE_CHARACTER && LA134_0<=RULE_DECIMAL)||LA134_0==18||LA134_0==22||LA134_0==28||(LA134_0>=40 && LA134_0<=41)||LA134_0==61||(LA134_0>=82 && LA134_0<=84)||(LA134_0>=87 && LA134_0<=88)||(LA134_0>=90 && LA134_0<=95)) ) {s = 3;}

                         
                        input.seek(index134_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA134_2 = input.LA(1);

                         
                        int index134_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalEketal()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index134_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 134, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\53\uffff";
    static final String dfa_87s = "\1\30\52\uffff";
    static final String dfa_88s = "\1\4\27\0\23\uffff";
    static final String dfa_89s = "\1\141\27\0\23\uffff";
    static final String dfa_90s = "\30\uffff\1\2\21\uffff\1\1";
    static final String dfa_91s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\23\uffff}>";
    static final String[] dfa_92s = {
            "\1\1\1\uffff\1\25\1\26\1\21\1\22\1\23\5\uffff\1\30\1\uffff\1\27\1\30\2\uffff\1\12\5\uffff\1\6\2\uffff\1\30\10\uffff\1\4\1\3\1\30\1\uffff\2\30\17\uffff\1\15\1\uffff\10\30\2\uffff\1\30\10\uffff\1\7\1\10\1\11\2\uffff\1\13\1\14\1\uffff\1\2\1\5\1\16\1\17\1\20\1\24\2\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_86;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "8654:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA139_2 = input.LA(1);

                         
                        int index139_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA139_3 = input.LA(1);

                         
                        int index139_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA139_4 = input.LA(1);

                         
                        int index139_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA139_5 = input.LA(1);

                         
                        int index139_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA139_6 = input.LA(1);

                         
                        int index139_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA139_7 = input.LA(1);

                         
                        int index139_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA139_8 = input.LA(1);

                         
                        int index139_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA139_9 = input.LA(1);

                         
                        int index139_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA139_10 = input.LA(1);

                         
                        int index139_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA139_11 = input.LA(1);

                         
                        int index139_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA139_12 = input.LA(1);

                         
                        int index139_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA139_13 = input.LA(1);

                         
                        int index139_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA139_14 = input.LA(1);

                         
                        int index139_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA139_15 = input.LA(1);

                         
                        int index139_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA139_16 = input.LA(1);

                         
                        int index139_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA139_17 = input.LA(1);

                         
                        int index139_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA139_18 = input.LA(1);

                         
                        int index139_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA139_19 = input.LA(1);

                         
                        int index139_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA139_20 = input.LA(1);

                         
                        int index139_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA139_21 = input.LA(1);

                         
                        int index139_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA139_22 = input.LA(1);

                         
                        int index139_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA139_23 = input.LA(1);

                         
                        int index139_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index139_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\120\uffff";
    static final String dfa_94s = "\1\2\117\uffff";
    static final String dfa_95s = "\1\4\1\0\116\uffff";
    static final String dfa_96s = "\1\141\1\0\116\uffff";
    static final String dfa_97s = "\2\uffff\1\2\114\uffff\1\1";
    static final String dfa_98s = "\1\uffff\1\0\116\uffff}>";
    static final String[] dfa_99s = {
            "\7\2\5\uffff\1\2\1\uffff\13\2\2\uffff\2\2\2\uffff\1\2\1\uffff\11\2\1\uffff\13\2\1\1\3\2\1\uffff\10\2\2\uffff\14\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[][] dfa_99 = unpackEncodedStringArray(dfa_99s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_93;
            this.eof = dfa_94;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_97;
            this.special = dfa_98;
            this.transition = dfa_99;
        }
        public String getDescription() {
            return "8866:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalEketal()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_93;
            this.eof = dfa_94;
            this.min = dfa_95;
            this.max = dfa_96;
            this.accept = dfa_97;
            this.special = dfa_98;
            this.transition = dfa_99;
        }
        public String getDescription() {
            return "8960:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_1 = input.LA(1);

                         
                        int index147_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalEketal()) ) {s = 79;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index147_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000010000030002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000010000020002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000006902280010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000040001000010L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000001800000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000040000000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000140000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000000F0410000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x00000000F0400000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x00000000E0400000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000600080710L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000600000700L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000080010L,0x0000007000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000110000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000004010000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000038000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000020000000010L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000080000000010L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xA0003706905D07D0L,0x00000003FD9C024EL});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400000800002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x20000706104407D0L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0FFE000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1800000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x20000706114407D0L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0400000000400002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0802000000000010L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0800000000800000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0002000000000010L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x20010706104407D0L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x00008006000407C2L,0x00000000E0000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000800000000002L,0x0000000001800000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000808000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000808000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000030000000010L,0x000000000C000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000030000000010L,0x000000001C000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000808000400002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0xA0003706905507D0L,0x00000003FD9C024EL});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x20000706104507D0L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000810000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000030L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0xA0003706905507D2L,0x00000003FD9C024EL});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000180L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x20000706104C07D0L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000880000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x20000706104C07D0L,0x00000000FDBC0000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x20000706104407D0L,0x00000000FDBC0000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x20000706114407D0L,0x00000000FDBC0000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000C00L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x1C00000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0800000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000002L,0x00000000000C0000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000022L,0x0000000000003000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0001000000800000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x20000706104507D2L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x20000706104407D2L,0x00000000FD9C0000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000600L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0400008000000002L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000014000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000012L});

}
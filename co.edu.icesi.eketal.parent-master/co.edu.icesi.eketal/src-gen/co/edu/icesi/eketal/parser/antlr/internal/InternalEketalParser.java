package co.edu.icesi.eketal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.icesi.eketal.services.EketalGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEketalParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_ANY", "RULE_INT", "RULE_CHARACTER", "RULE_HEX", "RULE_DECIMAL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "';'", "'eventclass'", "'protocol'", "'='", "'bindintf'", "'{'", "'}'", "':'", "'op'", "'('", "','", "')'", "'event'", "'||'", "'&&'", "'!'", "'host'", "'on'", "'if'", "'group'", "'jphost'", "'localhost'", "'.'", "'['", "'-'", "']'", "'automaton'", "'->'", "'ltl'", "'until'", "'next'", "'always'", "'eventually'", "'syncex'", "'reaction'", "'import'", "'static'", "'final'", "'...'", "'continue'", "'break'", "'?'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<'", "'>'", "'>='", "'new'", "'class'", "'for'", "'else'", "'while'", "'do'", "'switch'", "'default'", "'case'", "'try'", "'finally'", "'catch'", "'synchronized'", "'=='", "'!='", "'/'", "'%'", "'<<'", "'|'", "'^'", "'&'", "'+'", "'~'", "'@'", "'instanceof'", "'++'", "'--'", "'#'", "'extends'", "'extension'", "'super'", "'false'", "'true'", "'null'", "'throw'", "'return'", "'UDP'", "'TCP'", "'TCP_NIO2'", "'call'", "'execution'", "'state'", "'start'", "'end'", "'before'", "'around'", "'after'"
    };
    public static final int RULE_HEX=9;
    public static final int T__50=50;
    public static final int RULE_CHARACTER=8;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_ANY=6;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=11;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=10;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=12;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=13;
    public static final int RULE_ANY_OTHER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalEketalParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEketalParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEketalParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEketal.g"; }



     	private EketalGrammarAccess grammarAccess;

        public InternalEketalParser(TokenStream input, EketalGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected EketalGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalEketal.g:65:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalEketal.g:65:46: (iv_ruleModel= ruleModel EOF )
            // InternalEketal.g:66:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalEketal.g:72:1: ruleModel returns [EObject current=null] : ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_importSection_3_0 = null;

        EObject lv_typeDeclaration_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:78:2: ( ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? ) )
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            {
            // InternalEketal.g:79:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )? )
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )? ( (lv_importSection_3_0= ruleXImportSection ) )? ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            {
            // InternalEketal.g:80:3: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )? )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==15) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalEketal.g:81:4: otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) ( ( ';' )=>otherlv_2= ';' )?
                    {
                    otherlv_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:85:4: ( (lv_name_1_0= ruleQualifiedName ) )
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    {
                    // InternalEketal.g:86:5: (lv_name_1_0= ruleQualifiedName )
                    // InternalEketal.g:87:6: lv_name_1_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_name_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.eclipse.xtext.xbase.Xbase.QualifiedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:104:4: ( ( ';' )=>otherlv_2= ';' )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==16) && (synpred1_InternalEketal())) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalEketal.g:105:5: ( ';' )=>otherlv_2= ';'
                            {
                            otherlv_2=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getModelAccess().getSemicolonKeyword_0_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalEketal.g:112:3: ( (lv_importSection_3_0= ruleXImportSection ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==51) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    {
                    // InternalEketal.g:113:4: (lv_importSection_3_0= ruleXImportSection )
                    // InternalEketal.g:114:5: lv_importSection_3_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getImportSectionXImportSectionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_3_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:131:3: ( (lv_typeDeclaration_4_0= ruleEventClass ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    {
                    // InternalEketal.g:132:4: (lv_typeDeclaration_4_0= ruleEventClass )
                    // InternalEketal.g:133:5: lv_typeDeclaration_4_0= ruleEventClass
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getTypeDeclarationEventClassParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDeclaration_4_0=ruleEventClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"typeDeclaration",
                      						lv_typeDeclaration_4_0,
                      						"co.edu.icesi.eketal.Eketal.EventClass");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleEventClass"
    // InternalEketal.g:154:1: entryRuleEventClass returns [EObject current=null] : iv_ruleEventClass= ruleEventClass EOF ;
    public final EObject entryRuleEventClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventClass = null;


        try {
            // InternalEketal.g:154:51: (iv_ruleEventClass= ruleEventClass EOF )
            // InternalEketal.g:155:2: iv_ruleEventClass= ruleEventClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventClass=ruleEventClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventClass"


    // $ANTLR start "ruleEventClass"
    // InternalEketal.g:161:1: ruleEventClass returns [EObject current=null] : (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )? (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDecl ) )* otherlv_10= '}' ) ;
    public final EObject ruleEventClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_interface_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Enumerator lv_protocol_4_0 = null;

        EObject lv_declarations_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:167:2: ( (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )? (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDecl ) )* otherlv_10= '}' ) )
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )? (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDecl ) )* otherlv_10= '}' )
            {
            // InternalEketal.g:168:2: (otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )? (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDecl ) )* otherlv_10= '}' )
            // InternalEketal.g:169:3: otherlv_0= 'eventclass' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )? (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )? otherlv_8= '{' ( (lv_declarations_9_0= ruleDecl ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEventClassAccess().getEventclassKeyword_0());
              		
            }
            // InternalEketal.g:173:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:174:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:175:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEventClassAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEventClassRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalEketal.g:191:3: (otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==18) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalEketal.g:192:4: otherlv_2= 'protocol' otherlv_3= '=' ( (lv_protocol_4_0= ruleProtocol ) )
                    {
                    otherlv_2=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getEventClassAccess().getProtocolKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,19,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEventClassAccess().getEqualsSignKeyword_2_1());
                      			
                    }
                    // InternalEketal.g:200:4: ( (lv_protocol_4_0= ruleProtocol ) )
                    // InternalEketal.g:201:5: (lv_protocol_4_0= ruleProtocol )
                    {
                    // InternalEketal.g:201:5: (lv_protocol_4_0= ruleProtocol )
                    // InternalEketal.g:202:6: lv_protocol_4_0= ruleProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEventClassAccess().getProtocolProtocolEnumRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_protocol_4_0=ruleProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEventClassRule());
                      						}
                      						set(
                      							current,
                      							"protocol",
                      							lv_protocol_4_0,
                      							"co.edu.icesi.eketal.Eketal.Protocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:220:3: (otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==20) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalEketal.g:221:4: otherlv_5= 'bindintf' otherlv_6= '=' ( (lv_interface_7_0= RULE_STRING ) )
                    {
                    otherlv_5=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEventClassAccess().getBindintfKeyword_3_0());
                      			
                    }
                    otherlv_6=(Token)match(input,19,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getEventClassAccess().getEqualsSignKeyword_3_1());
                      			
                    }
                    // InternalEketal.g:229:4: ( (lv_interface_7_0= RULE_STRING ) )
                    // InternalEketal.g:230:5: (lv_interface_7_0= RULE_STRING )
                    {
                    // InternalEketal.g:230:5: (lv_interface_7_0= RULE_STRING )
                    // InternalEketal.g:231:6: lv_interface_7_0= RULE_STRING
                    {
                    lv_interface_7_0=(Token)match(input,RULE_STRING,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interface_7_0, grammarAccess.getEventClassAccess().getInterfaceSTRINGTerminalRuleCall_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getEventClassRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"interface",
                      							lv_interface_7_0,
                      							"jbase.Jbase.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,21,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getEventClassAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalEketal.g:252:3: ( (lv_declarations_9_0= ruleDecl ) )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==RULE_ID||LA7_0==24||LA7_0==28||LA7_0==35||LA7_0==42||LA7_0==44||(LA7_0>=49 && LA7_0<=50)) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalEketal.g:253:4: (lv_declarations_9_0= ruleDecl )
            	    {
            	    // InternalEketal.g:253:4: (lv_declarations_9_0= ruleDecl )
            	    // InternalEketal.g:254:5: lv_declarations_9_0= ruleDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEventClassAccess().getDeclarationsDeclParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_declarations_9_0=ruleDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEventClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_9_0,
            	      						"co.edu.icesi.eketal.Eketal.Decl");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_10=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEventClassAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventClass"


    // $ANTLR start "entryRuleDecl"
    // InternalEketal.g:279:1: entryRuleDecl returns [EObject current=null] : iv_ruleDecl= ruleDecl EOF ;
    public final EObject entryRuleDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDecl = null;


        try {
            // InternalEketal.g:279:45: (iv_ruleDecl= ruleDecl EOF )
            // InternalEketal.g:280:2: iv_ruleDecl= ruleDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecl=ruleDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecl"


    // $ANTLR start "ruleDecl"
    // InternalEketal.g:286:1: ruleDecl returns [EObject current=null] : (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl ) ;
    public final EObject ruleDecl() throws RecognitionException {
        EObject current = null;

        EObject this_Automaton_0 = null;

        EObject this_Ltl_1 = null;

        EObject this_Rc_2 = null;

        EObject this_MSig_3 = null;

        EObject this_JVarD_4 = null;

        EObject this_Group_5 = null;

        EObject this_EvDecl_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:292:2: ( (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl ) )
            // InternalEketal.g:293:2: (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl )
            {
            // InternalEketal.g:293:2: (this_Automaton_0= ruleAutomaton | this_Ltl_1= ruleLtl | this_Rc_2= ruleRc | this_MSig_3= ruleMSig | this_JVarD_4= ruleJVarD | this_Group_5= ruleGroup | this_EvDecl_6= ruleEvDecl )
            int alt8=7;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt8=1;
                }
                break;
            case 44:
                {
                alt8=2;
                }
                break;
            case 49:
            case 50:
                {
                alt8=3;
                }
                break;
            case 24:
                {
                alt8=4;
                }
                break;
            case RULE_ID:
                {
                alt8=5;
                }
                break;
            case 35:
                {
                alt8=6;
                }
                break;
            case 28:
                {
                alt8=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalEketal.g:294:3: this_Automaton_0= ruleAutomaton
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getAutomatonParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Automaton_0=ruleAutomaton();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Automaton_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:303:3: this_Ltl_1= ruleLtl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getLtlParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Ltl_1=ruleLtl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Ltl_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:312:3: this_Rc_2= ruleRc
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getRcParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Rc_2=ruleRc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Rc_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:321:3: this_MSig_3= ruleMSig
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getMSigParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MSig_3=ruleMSig();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MSig_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:330:3: this_JVarD_4= ruleJVarD
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getJVarDParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JVarD_4=ruleJVarD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JVarD_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:339:3: this_Group_5= ruleGroup
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getGroupParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Group_5=ruleGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Group_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:348:3: this_EvDecl_6= ruleEvDecl
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclAccess().getEvDeclParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EvDecl_6=ruleEvDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EvDecl_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecl"


    // $ANTLR start "entryRuleJVarD"
    // InternalEketal.g:360:1: entryRuleJVarD returns [EObject current=null] : iv_ruleJVarD= ruleJVarD EOF ;
    public final EObject entryRuleJVarD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJVarD = null;


        try {
            // InternalEketal.g:360:46: (iv_ruleJVarD= ruleJVarD EOF )
            // InternalEketal.g:361:2: iv_ruleJVarD= ruleJVarD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJVarDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJVarD=ruleJVarD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJVarD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJVarD"


    // $ANTLR start "ruleJVarD"
    // InternalEketal.g:367:1: ruleJVarD returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJVarD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:373:2: ( ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:374:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:374:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:375:3: ( (lv_name_0_0= ruleValidID ) ) otherlv_1= ':' ( (lv_type_2_0= ruleJvmTypeReference ) )
            {
            // InternalEketal.g:375:3: ( (lv_name_0_0= ruleValidID ) )
            // InternalEketal.g:376:4: (lv_name_0_0= ruleValidID )
            {
            // InternalEketal.g:376:4: (lv_name_0_0= ruleValidID )
            // InternalEketal.g:377:5: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getNameValidIDParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJVarDAccess().getColonKeyword_1());
              		
            }
            // InternalEketal.g:398:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:399:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:399:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:400:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJVarDAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJVarDRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJVarD"


    // $ANTLR start "entryRuleMSig"
    // InternalEketal.g:421:1: entryRuleMSig returns [EObject current=null] : iv_ruleMSig= ruleMSig EOF ;
    public final EObject entryRuleMSig() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMSig = null;


        try {
            // InternalEketal.g:421:45: (iv_ruleMSig= ruleMSig EOF )
            // InternalEketal.g:422:2: iv_ruleMSig= ruleMSig EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMSigRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMSig=ruleMSig();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMSig; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMSig"


    // $ANTLR start "ruleMSig"
    // InternalEketal.g:428:1: ruleMSig returns [EObject current=null] : (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleMSig() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_body_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:434:2: ( (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:435:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:435:2: (otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:436:3: otherlv_0= 'op' ( (lv_name_1_0= ruleValidID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )? ( (lv_body_9_0= ruleXBlockExpression ) )
            {
            otherlv_0=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMSigAccess().getOpKeyword_0());
              		
            }
            // InternalEketal.g:440:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:441:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:441:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:442:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMSigAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:463:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ID||LA10_0==53) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalEketal.g:464:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:464:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:465:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:465:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:466:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:483:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==26) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // InternalEketal.g:484:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getMSigAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:488:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:489:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:489:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:490:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMSigAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMSigRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMSigAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:513:3: (otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==23) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalEketal.g:514:4: otherlv_7= ':' ( (lv_type_8_0= ruleJvmTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getMSigAccess().getColonKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:518:4: ( (lv_type_8_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:519:5: (lv_type_8_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:519:5: (lv_type_8_0= ruleJvmTypeReference )
                    // InternalEketal.g:520:6: lv_type_8_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMSigAccess().getTypeJvmTypeReferenceParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_type_8_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMSigRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_8_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:538:3: ( (lv_body_9_0= ruleXBlockExpression ) )
            // InternalEketal.g:539:4: (lv_body_9_0= ruleXBlockExpression )
            {
            // InternalEketal.g:539:4: (lv_body_9_0= ruleXBlockExpression )
            // InternalEketal.g:540:5: lv_body_9_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMSigAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_9_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMSigRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMSig"


    // $ANTLR start "entryRuleEvDecl"
    // InternalEketal.g:561:1: entryRuleEvDecl returns [EObject current=null] : iv_ruleEvDecl= ruleEvDecl EOF ;
    public final EObject entryRuleEvDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEvDecl = null;


        try {
            // InternalEketal.g:561:47: (iv_ruleEvDecl= ruleEvDecl EOF )
            // InternalEketal.g:562:2: iv_ruleEvDecl= ruleEvDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEvDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvDecl=ruleEvDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEvDecl"


    // $ANTLR start "ruleEvDecl"
    // InternalEketal.g:568:1: ruleEvDecl returns [EObject current=null] : (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) ;
    public final EObject ruleEvDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_eventos_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:574:2: ( (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' ) )
            // InternalEketal.g:575:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            {
            // InternalEketal.g:575:2: (otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';' )
            // InternalEketal.g:576:3: otherlv_0= 'event' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= ':' ( (lv_eventos_8_0= ruleOrEvent ) )* otherlv_9= ';'
            {
            otherlv_0=(Token)match(input,28,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEvDeclAccess().getEventKeyword_0());
              		
            }
            // InternalEketal.g:580:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:581:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:581:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:582:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getEvDeclAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEvDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getEvDeclAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:602:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_ID||LA13_0==53) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalEketal.g:603:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:603:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:604:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:604:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:605:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEvDeclRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:622:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==26) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalEketal.g:623:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getEvDeclAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:627:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:628:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:628:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:629:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEvDeclAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEvDeclRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEvDeclAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,23,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEvDeclAccess().getColonKeyword_5());
              		
            }
            // InternalEketal.g:656:3: ( (lv_eventos_8_0= ruleOrEvent ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==25||(LA14_0>=31 && LA14_0<=34)||(LA14_0>=108 && LA14_0<=109)) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalEketal.g:657:4: (lv_eventos_8_0= ruleOrEvent )
            	    {
            	    // InternalEketal.g:657:4: (lv_eventos_8_0= ruleOrEvent )
            	    // InternalEketal.g:658:5: lv_eventos_8_0= ruleOrEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEvDeclAccess().getEventosOrEventParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_eventos_8_0=ruleOrEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEvDeclRule());
            	      					}
            	      					add(
            	      						current,
            	      						"eventos",
            	      						lv_eventos_8_0,
            	      						"co.edu.icesi.eketal.Eketal.OrEvent");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_9=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEvDeclAccess().getSemicolonKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEvDecl"


    // $ANTLR start "entryRuleOrEvent"
    // InternalEketal.g:683:1: entryRuleOrEvent returns [EObject current=null] : iv_ruleOrEvent= ruleOrEvent EOF ;
    public final EObject entryRuleOrEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrEvent = null;


        try {
            // InternalEketal.g:683:48: (iv_ruleOrEvent= ruleOrEvent EOF )
            // InternalEketal.g:684:2: iv_ruleOrEvent= ruleOrEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrEvent=ruleOrEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrEvent"


    // $ANTLR start "ruleOrEvent"
    // InternalEketal.g:690:1: ruleOrEvent returns [EObject current=null] : (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) ;
    public final EObject ruleOrEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_AndEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:696:2: ( (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* ) )
            // InternalEketal.g:697:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            {
            // InternalEketal.g:697:2: (this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )* )
            // InternalEketal.g:698:3: this_AndEvent_0= ruleAndEvent ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrEventAccess().getAndEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_AndEvent_0=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:706:3: ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==29) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalEketal.g:707:4: () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleAndEvent ) )
            	    {
            	    // InternalEketal.g:707:4: ()
            	    // InternalEketal.g:708:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrEventAccess().getOrEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:714:4: ( (lv_op_2_0= '||' ) )
            	    // InternalEketal.g:715:5: (lv_op_2_0= '||' )
            	    {
            	    // InternalEketal.g:715:5: (lv_op_2_0= '||' )
            	    // InternalEketal.g:716:6: lv_op_2_0= '||'
            	    {
            	    lv_op_2_0=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getOrEventAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getOrEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "||");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:728:4: ( (lv_right_3_0= ruleAndEvent ) )
            	    // InternalEketal.g:729:5: (lv_right_3_0= ruleAndEvent )
            	    {
            	    // InternalEketal.g:729:5: (lv_right_3_0= ruleAndEvent )
            	    // InternalEketal.g:730:6: lv_right_3_0= ruleAndEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrEventAccess().getRightAndEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_right_3_0=ruleAndEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.AndEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrEvent"


    // $ANTLR start "entryRuleAndEvent"
    // InternalEketal.g:752:1: entryRuleAndEvent returns [EObject current=null] : iv_ruleAndEvent= ruleAndEvent EOF ;
    public final EObject entryRuleAndEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndEvent = null;


        try {
            // InternalEketal.g:752:49: (iv_ruleAndEvent= ruleAndEvent EOF )
            // InternalEketal.g:753:2: iv_ruleAndEvent= ruleAndEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndEvent=ruleAndEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndEvent"


    // $ANTLR start "ruleAndEvent"
    // InternalEketal.g:759:1: ruleAndEvent returns [EObject current=null] : (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) ;
    public final EObject ruleAndEvent() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_NotEvent_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:765:2: ( (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* ) )
            // InternalEketal.g:766:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            {
            // InternalEketal.g:766:2: (this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )* )
            // InternalEketal.g:767:3: this_NotEvent_0= ruleNotEvent ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndEventAccess().getNotEventParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_NotEvent_0=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotEvent_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:775:3: ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==30) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalEketal.g:776:4: () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleNotEvent ) )
            	    {
            	    // InternalEketal.g:776:4: ()
            	    // InternalEketal.g:777:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndEventAccess().getAndEventLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:783:4: ( (lv_op_2_0= '&&' ) )
            	    // InternalEketal.g:784:5: (lv_op_2_0= '&&' )
            	    {
            	    // InternalEketal.g:784:5: (lv_op_2_0= '&&' )
            	    // InternalEketal.g:785:6: lv_op_2_0= '&&'
            	    {
            	    lv_op_2_0=(Token)match(input,30,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getAndEventAccess().getOpAmpersandAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAndEventRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "&&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:797:4: ( (lv_right_3_0= ruleNotEvent ) )
            	    // InternalEketal.g:798:5: (lv_right_3_0= ruleNotEvent )
            	    {
            	    // InternalEketal.g:798:5: (lv_right_3_0= ruleNotEvent )
            	    // InternalEketal.g:799:6: lv_right_3_0= ruleNotEvent
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndEventAccess().getRightNotEventParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_right_3_0=ruleNotEvent();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndEventRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.NotEvent");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndEvent"


    // $ANTLR start "entryRuleNotEvent"
    // InternalEketal.g:821:1: entryRuleNotEvent returns [EObject current=null] : iv_ruleNotEvent= ruleNotEvent EOF ;
    public final EObject entryRuleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotEvent = null;


        try {
            // InternalEketal.g:821:49: (iv_ruleNotEvent= ruleNotEvent EOF )
            // InternalEketal.g:822:2: iv_ruleNotEvent= ruleNotEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNotEvent=ruleNotEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotEvent"


    // $ANTLR start "ruleNotEvent"
    // InternalEketal.g:828:1: ruleNotEvent returns [EObject current=null] : (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) ;
    public final EObject ruleNotEvent() throws RecognitionException {
        EObject current = null;

        EObject this_AtomEvent_0 = null;

        EObject this_UnaryExpresion_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:834:2: ( (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion ) )
            // InternalEketal.g:835:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            {
            // InternalEketal.g:835:2: (this_AtomEvent_0= ruleAtomEvent | this_UnaryExpresion_1= ruleUnaryExpresion )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==25||(LA17_0>=32 && LA17_0<=34)||(LA17_0>=108 && LA17_0<=109)) ) {
                alt17=1;
            }
            else if ( (LA17_0==31) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEketal.g:836:3: this_AtomEvent_0= ruleAtomEvent
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getAtomEventParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AtomEvent_0=ruleAtomEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomEvent_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:845:3: this_UnaryExpresion_1= ruleUnaryExpresion
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotEventAccess().getUnaryExpresionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnaryExpresion_1=ruleUnaryExpresion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnaryExpresion_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotEvent"


    // $ANTLR start "entryRuleUnaryExpresion"
    // InternalEketal.g:857:1: entryRuleUnaryExpresion returns [EObject current=null] : iv_ruleUnaryExpresion= ruleUnaryExpresion EOF ;
    public final EObject entryRuleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpresion = null;


        try {
            // InternalEketal.g:857:55: (iv_ruleUnaryExpresion= ruleUnaryExpresion EOF )
            // InternalEketal.g:858:2: iv_ruleUnaryExpresion= ruleUnaryExpresion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpresionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpresion=ruleUnaryExpresion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpresion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpresion"


    // $ANTLR start "ruleUnaryExpresion"
    // InternalEketal.g:864:1: ruleUnaryExpresion returns [EObject current=null] : ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) ;
    public final EObject ruleUnaryExpresion() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:870:2: ( ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) ) )
            // InternalEketal.g:871:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            {
            // InternalEketal.g:871:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) ) )
            // InternalEketal.g:872:3: () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleAtomEvent ) )
            {
            // InternalEketal.g:872:3: ()
            // InternalEketal.g:873:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnaryExpresionAccess().getUnaryEventAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:879:3: ( (lv_op_1_0= '!' ) )
            // InternalEketal.g:880:4: (lv_op_1_0= '!' )
            {
            // InternalEketal.g:880:4: (lv_op_1_0= '!' )
            // InternalEketal.g:881:5: lv_op_1_0= '!'
            {
            lv_op_1_0=(Token)match(input,31,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getUnaryExpresionAccess().getOpExclamationMarkKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnaryExpresionRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "!");
              				
            }

            }


            }

            // InternalEketal.g:893:3: ( (lv_expr_2_0= ruleAtomEvent ) )
            // InternalEketal.g:894:4: (lv_expr_2_0= ruleAtomEvent )
            {
            // InternalEketal.g:894:4: (lv_expr_2_0= ruleAtomEvent )
            // InternalEketal.g:895:5: lv_expr_2_0= ruleAtomEvent
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUnaryExpresionAccess().getExprAtomEventParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUnaryExpresionRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.AtomEvent");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpresion"


    // $ANTLR start "entryRuleAtomEvent"
    // InternalEketal.g:916:1: entryRuleAtomEvent returns [EObject current=null] : iv_ruleAtomEvent= ruleAtomEvent EOF ;
    public final EObject entryRuleAtomEvent() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomEvent = null;


        try {
            // InternalEketal.g:916:50: (iv_ruleAtomEvent= ruleAtomEvent EOF )
            // InternalEketal.g:917:2: iv_ruleAtomEvent= ruleAtomEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAtomEvent=ruleAtomEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomEvent"


    // $ANTLR start "ruleAtomEvent"
    // InternalEketal.g:923:1: ruleAtomEvent returns [EObject current=null] : ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) ;
    public final EObject ruleAtomEvent() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_tipoEvento_0_0 = null;

        EObject this_OrEvent_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:929:2: ( ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) ) )
            // InternalEketal.g:930:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            {
            // InternalEketal.g:930:2: ( ( (lv_tipoEvento_0_0= ruleEventPredicate ) ) | (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=32 && LA18_0<=34)||(LA18_0>=108 && LA18_0<=109)) ) {
                alt18=1;
            }
            else if ( (LA18_0==25) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalEketal.g:931:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    {
                    // InternalEketal.g:931:3: ( (lv_tipoEvento_0_0= ruleEventPredicate ) )
                    // InternalEketal.g:932:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    {
                    // InternalEketal.g:932:4: (lv_tipoEvento_0_0= ruleEventPredicate )
                    // InternalEketal.g:933:5: lv_tipoEvento_0_0= ruleEventPredicate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAtomEventAccess().getTipoEventoEventPredicateParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_tipoEvento_0_0=ruleEventPredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAtomEventRule());
                      					}
                      					set(
                      						current,
                      						"tipoEvento",
                      						lv_tipoEvento_0_0,
                      						"co.edu.icesi.eketal.Eketal.EventPredicate");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:951:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    {
                    // InternalEketal.g:951:3: (otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')' )
                    // InternalEketal.g:952:4: otherlv_1= '(' this_OrEvent_2= ruleOrEvent otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomEventAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomEventAccess().getOrEventParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_25);
                    this_OrEvent_2=ruleOrEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OrEvent_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomEventAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomEvent"


    // $ANTLR start "entryRuleEventPredicate"
    // InternalEketal.g:973:1: entryRuleEventPredicate returns [EObject current=null] : iv_ruleEventPredicate= ruleEventPredicate EOF ;
    public final EObject entryRuleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEventPredicate = null;


        try {
            // InternalEketal.g:973:55: (iv_ruleEventPredicate= ruleEventPredicate EOF )
            // InternalEketal.g:974:2: iv_ruleEventPredicate= ruleEventPredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventPredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventPredicate=ruleEventPredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventPredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEventPredicate"


    // $ANTLR start "ruleEventPredicate"
    // InternalEketal.g:980:1: ruleEventPredicate returns [EObject current=null] : (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) ;
    public final EObject ruleEventPredicate() throws RecognitionException {
        EObject current = null;

        EObject this_KindAttribute_0 = null;

        EObject this_Trigger_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:986:2: ( (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger ) )
            // InternalEketal.g:987:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            {
            // InternalEketal.g:987:2: (this_KindAttribute_0= ruleKindAttribute | this_Trigger_1= ruleTrigger )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=32 && LA19_0<=34)) ) {
                alt19=1;
            }
            else if ( ((LA19_0>=108 && LA19_0<=109)) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEketal.g:988:3: this_KindAttribute_0= ruleKindAttribute
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getKindAttributeParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_KindAttribute_0=ruleKindAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KindAttribute_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:997:3: this_Trigger_1= ruleTrigger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEventPredicateAccess().getTriggerParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Trigger_1=ruleTrigger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Trigger_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEventPredicate"


    // $ANTLR start "entryRuleKindAttribute"
    // InternalEketal.g:1009:1: entryRuleKindAttribute returns [EObject current=null] : iv_ruleKindAttribute= ruleKindAttribute EOF ;
    public final EObject entryRuleKindAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKindAttribute = null;


        try {
            // InternalEketal.g:1009:54: (iv_ruleKindAttribute= ruleKindAttribute EOF )
            // InternalEketal.g:1010:2: iv_ruleKindAttribute= ruleKindAttribute EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKindAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKindAttribute=ruleKindAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKindAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKindAttribute"


    // $ANTLR start "ruleKindAttribute"
    // InternalEketal.g:1016:1: ruleKindAttribute returns [EObject current=null] : ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) ;
    public final EObject ruleKindAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_condition_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1022:2: ( ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) ) )
            // InternalEketal.g:1023:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            {
            // InternalEketal.g:1023:2: ( (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' ) | (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' ) | (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) ) )
            int alt20=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt20=1;
                }
                break;
            case 33:
                {
                alt20=2;
                }
                break;
            case 34:
                {
                alt20=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalEketal.g:1024:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    {
                    // InternalEketal.g:1024:3: (otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')' )
                    // InternalEketal.g:1025:4: otherlv_0= 'host' otherlv_1= '(' ( (otherlv_2= RULE_ID ) ) otherlv_3= ')'
                    {
                    otherlv_0=(Token)match(input,32,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getKindAttributeAccess().getHostKeyword_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalEketal.g:1033:4: ( (otherlv_2= RULE_ID ) )
                    // InternalEketal.g:1034:5: (otherlv_2= RULE_ID )
                    {
                    // InternalEketal.g:1034:5: (otherlv_2= RULE_ID )
                    // InternalEketal.g:1035:6: otherlv_2= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_2=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getKindAttributeAccess().getHostgroupGroupCrossReference_0_2_0());
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1052:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    {
                    // InternalEketal.g:1052:3: (otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')' )
                    // InternalEketal.g:1053:4: otherlv_4= 'on' otherlv_5= '(' ( (otherlv_6= RULE_ID ) ) otherlv_7= ')'
                    {
                    otherlv_4=(Token)match(input,33,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getKindAttributeAccess().getOnKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getKindAttributeAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalEketal.g:1061:4: ( (otherlv_6= RULE_ID ) )
                    // InternalEketal.g:1062:5: (otherlv_6= RULE_ID )
                    {
                    // InternalEketal.g:1062:5: (otherlv_6= RULE_ID )
                    // InternalEketal.g:1063:6: otherlv_6= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKindAttributeRule());
                      						}
                      					
                    }
                    otherlv_6=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_6, grammarAccess.getKindAttributeAccess().getOngroupGroupCrossReference_1_2_0());
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getKindAttributeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:1080:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    {
                    // InternalEketal.g:1080:3: (otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) ) )
                    // InternalEketal.g:1081:4: otherlv_8= 'if' ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    {
                    otherlv_8=(Token)match(input,34,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getKindAttributeAccess().getIfKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:1085:4: ( (lv_condition_9_0= ruleXParenthesizedExpression ) )
                    // InternalEketal.g:1086:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    {
                    // InternalEketal.g:1086:5: (lv_condition_9_0= ruleXParenthesizedExpression )
                    // InternalEketal.g:1087:6: lv_condition_9_0= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKindAttributeAccess().getConditionXParenthesizedExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_9_0=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKindAttributeRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XParenthesizedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKindAttribute"


    // $ANTLR start "entryRuleTrigger"
    // InternalEketal.g:1109:1: entryRuleTrigger returns [EObject current=null] : iv_ruleTrigger= ruleTrigger EOF ;
    public final EObject entryRuleTrigger() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTrigger = null;


        try {
            // InternalEketal.g:1109:48: (iv_ruleTrigger= ruleTrigger EOF )
            // InternalEketal.g:1110:2: iv_ruleTrigger= ruleTrigger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTriggerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTrigger=ruleTrigger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTrigger; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTrigger"


    // $ANTLR start "ruleTrigger"
    // InternalEketal.g:1116:1: ruleTrigger returns [EObject current=null] : ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) ;
    public final EObject ruleTrigger() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Enumerator lv_triggerType_0_0 = null;

        EObject lv_returndef_2_0 = null;

        AntlrDatatypeRuleToken lv_esig_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_params_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1122:2: ( ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' ) )
            // InternalEketal.g:1123:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            {
            // InternalEketal.g:1123:2: ( ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')' )
            // InternalEketal.g:1124:3: ( (lv_triggerType_0_0= ruleTPrefix ) ) otherlv_1= '(' ( (lv_returndef_2_0= ruleTypeReturn ) )? ( (lv_esig_3_0= ruleQualifiedName ) ) otherlv_4= '(' ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )? otherlv_8= ')' otherlv_9= ')'
            {
            // InternalEketal.g:1124:3: ( (lv_triggerType_0_0= ruleTPrefix ) )
            // InternalEketal.g:1125:4: (lv_triggerType_0_0= ruleTPrefix )
            {
            // InternalEketal.g:1125:4: (lv_triggerType_0_0= ruleTPrefix )
            // InternalEketal.g:1126:5: lv_triggerType_0_0= ruleTPrefix
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getTriggerTypeTPrefixEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_triggerType_0_0=ruleTPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"triggerType",
              						lv_triggerType_0_0,
              						"co.edu.icesi.eketal.Eketal.TPrefix");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,25,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalEketal.g:1147:3: ( (lv_returndef_2_0= ruleTypeReturn ) )?
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalEketal.g:1148:4: (lv_returndef_2_0= ruleTypeReturn )
                    {
                    // InternalEketal.g:1148:4: (lv_returndef_2_0= ruleTypeReturn )
                    // InternalEketal.g:1149:5: lv_returndef_2_0= ruleTypeReturn
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTriggerAccess().getReturndefTypeReturnParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_returndef_2_0=ruleTypeReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTriggerRule());
                      					}
                      					set(
                      						current,
                      						"returndef",
                      						lv_returndef_2_0,
                      						"co.edu.icesi.eketal.Eketal.TypeReturn");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:1166:3: ( (lv_esig_3_0= ruleQualifiedName ) )
            // InternalEketal.g:1167:4: (lv_esig_3_0= ruleQualifiedName )
            {
            // InternalEketal.g:1167:4: (lv_esig_3_0= ruleQualifiedName )
            // InternalEketal.g:1168:5: lv_esig_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTriggerAccess().getEsigQualifiedNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_esig_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTriggerRule());
              					}
              					set(
              						current,
              						"esig",
              						lv_esig_3_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,25,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTriggerAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:1189:3: ( ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalEketal.g:1190:4: ( (lv_params_5_0= ruleJvmTypeReference ) ) (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    {
                    // InternalEketal.g:1190:4: ( (lv_params_5_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1191:5: (lv_params_5_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1191:5: (lv_params_5_0= ruleJvmTypeReference )
                    // InternalEketal.g:1192:6: lv_params_5_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_params_5_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTriggerRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_5_0,
                      							"jbase.Jbase.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1209:4: (otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==26) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalEketal.g:1210:5: otherlv_6= ',' ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    {
                    	    otherlv_6=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getTriggerAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1214:5: ( (lv_params_7_0= ruleJvmTypeReference ) )
                    	    // InternalEketal.g:1215:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    {
                    	    // InternalEketal.g:1215:6: (lv_params_7_0= ruleJvmTypeReference )
                    	    // InternalEketal.g:1216:7: lv_params_7_0= ruleJvmTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTriggerAccess().getParamsJvmTypeReferenceParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_params_7_0=ruleJvmTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTriggerRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_7_0,
                    	      								"jbase.Jbase.JvmTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,27,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_9=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getTriggerAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTrigger"


    // $ANTLR start "entryRuleTypeReturn"
    // InternalEketal.g:1247:1: entryRuleTypeReturn returns [EObject current=null] : iv_ruleTypeReturn= ruleTypeReturn EOF ;
    public final EObject entryRuleTypeReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeReturn = null;


        try {
            // InternalEketal.g:1247:51: (iv_ruleTypeReturn= ruleTypeReturn EOF )
            // InternalEketal.g:1248:2: iv_ruleTypeReturn= ruleTypeReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReturnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReturn=ruleTypeReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReturn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeReturn"


    // $ANTLR start "ruleTypeReturn"
    // InternalEketal.g:1254:1: ruleTypeReturn returns [EObject current=null] : ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleTypeReturn() throws RecognitionException {
        EObject current = null;

        Token lv_astk_0_0=null;
        EObject lv_jvmRef_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1260:2: ( ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:1261:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:1261:2: ( ( (lv_astk_0_0= RULE_ANY ) ) | ( (lv_jvmRef_1_0= ruleJvmTypeReference ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_ANY) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_ID) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEketal.g:1262:3: ( (lv_astk_0_0= RULE_ANY ) )
                    {
                    // InternalEketal.g:1262:3: ( (lv_astk_0_0= RULE_ANY ) )
                    // InternalEketal.g:1263:4: (lv_astk_0_0= RULE_ANY )
                    {
                    // InternalEketal.g:1263:4: (lv_astk_0_0= RULE_ANY )
                    // InternalEketal.g:1264:5: lv_astk_0_0= RULE_ANY
                    {
                    lv_astk_0_0=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_astk_0_0, grammarAccess.getTypeReturnAccess().getAstkANYTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeReturnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"astk",
                      						lv_astk_0_0,
                      						"co.edu.icesi.eketal.Eketal.ANY");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1281:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    {
                    // InternalEketal.g:1281:3: ( (lv_jvmRef_1_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:1282:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:1282:4: (lv_jvmRef_1_0= ruleJvmTypeReference )
                    // InternalEketal.g:1283:5: lv_jvmRef_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeReturnAccess().getJvmRefJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_jvmRef_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeReturnRule());
                      					}
                      					set(
                      						current,
                      						"jvmRef",
                      						lv_jvmRef_1_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeReturn"


    // $ANTLR start "entryRuleGroup"
    // InternalEketal.g:1304:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // InternalEketal.g:1304:46: (iv_ruleGroup= ruleGroup EOF )
            // InternalEketal.g:1305:2: iv_ruleGroup= ruleGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGroup=ruleGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // InternalEketal.g:1311:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_hosts_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1317:2: ( (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' ) )
            // InternalEketal.g:1318:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            {
            // InternalEketal.g:1318:2: (otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}' )
            // InternalEketal.g:1319:3: otherlv_0= 'group' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_hosts_3_0= ruleHost ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
              		
            }
            // InternalEketal.g:1323:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1324:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1324:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1325:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGroupRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,21,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:1345:3: ( (lv_hosts_3_0= ruleHost ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==RULE_ID||(LA25_0>=RULE_ANY && LA25_0<=RULE_INT)||(LA25_0>=36 && LA25_0<=37)||LA25_0==39) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalEketal.g:1346:4: (lv_hosts_3_0= ruleHost )
            	    {
            	    // InternalEketal.g:1346:4: (lv_hosts_3_0= ruleHost )
            	    // InternalEketal.g:1347:5: lv_hosts_3_0= ruleHost
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGroupAccess().getHostsHostParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_28);
            	    lv_hosts_3_0=ruleHost();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGroupRule());
            	      					}
            	      					add(
            	      						current,
            	      						"hosts",
            	      						lv_hosts_3_0,
            	      						"co.edu.icesi.eketal.Eketal.Host");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            otherlv_4=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleHost"
    // InternalEketal.g:1372:1: entryRuleHost returns [EObject current=null] : iv_ruleHost= ruleHost EOF ;
    public final EObject entryRuleHost() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHost = null;


        try {
            // InternalEketal.g:1372:45: (iv_ruleHost= ruleHost EOF )
            // InternalEketal.g:1373:2: iv_ruleHost= ruleHost EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHost=ruleHost();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHost; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHost"


    // $ANTLR start "ruleHost"
    // InternalEketal.g:1379:1: ruleHost returns [EObject current=null] : ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleHost() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_ip_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1385:2: ( ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) ) )
            // InternalEketal.g:1386:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalEketal.g:1386:2: ( ( (lv_ip_0_0= ruleIp ) ) | ( (otherlv_1= RULE_ID ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_ANY && LA26_0<=RULE_INT)||(LA26_0>=36 && LA26_0<=37)||LA26_0==39) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ID) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEketal.g:1387:3: ( (lv_ip_0_0= ruleIp ) )
                    {
                    // InternalEketal.g:1387:3: ( (lv_ip_0_0= ruleIp ) )
                    // InternalEketal.g:1388:4: (lv_ip_0_0= ruleIp )
                    {
                    // InternalEketal.g:1388:4: (lv_ip_0_0= ruleIp )
                    // InternalEketal.g:1389:5: lv_ip_0_0= ruleIp
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHostAccess().getIpIpParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ip_0_0=ruleIp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHostRule());
                      					}
                      					set(
                      						current,
                      						"ip",
                      						lv_ip_0_0,
                      						"co.edu.icesi.eketal.Eketal.Ip");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:1407:3: ( (otherlv_1= RULE_ID ) )
                    {
                    // InternalEketal.g:1407:3: ( (otherlv_1= RULE_ID ) )
                    // InternalEketal.g:1408:4: (otherlv_1= RULE_ID )
                    {
                    // InternalEketal.g:1408:4: (otherlv_1= RULE_ID )
                    // InternalEketal.g:1409:5: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHostRule());
                      					}
                      				
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getHostAccess().getGroupIdGroupCrossReference_1_0());
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHost"


    // $ANTLR start "entryRuleIp"
    // InternalEketal.g:1424:1: entryRuleIp returns [String current=null] : iv_ruleIp= ruleIp EOF ;
    public final String entryRuleIp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIp = null;


        try {
            // InternalEketal.g:1424:42: (iv_ruleIp= ruleIp EOF )
            // InternalEketal.g:1425:2: iv_ruleIp= ruleIp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIp=ruleIp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIp"


    // $ANTLR start "ruleIp"
    // InternalEketal.g:1431:1: ruleIp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) ) ) ;
    public final AntlrDatatypeRuleToken ruleIp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_INT_6=null;
        Token this_INT_8=null;
        Token this_ANY_9=null;
        Token this_INT_11=null;
        Token this_INT_13=null;


        	enterRule();

        try {
            // InternalEketal.g:1437:2: ( (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) ) ) )
            // InternalEketal.g:1438:2: (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) ) )
            {
            // InternalEketal.g:1438:2: (kw= 'jphost' | kw= 'localhost' | ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) ) )
            int alt31=3;
            switch ( input.LA(1) ) {
            case 36:
                {
                alt31=1;
                }
                break;
            case 37:
                {
                alt31=2;
                }
                break;
            case RULE_ANY:
            case RULE_INT:
            case 39:
                {
                alt31=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalEketal.g:1439:3: kw= 'jphost'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getJphostKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:1445:3: kw= 'localhost'
                    {
                    kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIpAccess().getLocalhostKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:1451:3: ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) )
                    {
                    // InternalEketal.g:1451:3: ( (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) ) )
                    // InternalEketal.g:1452:4: (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )? (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) )
                    {
                    // InternalEketal.g:1452:4: (this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )? )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==RULE_INT) ) {
                        int LA29_1 = input.LA(2);

                        if ( (LA29_1==38) ) {
                            alt29=1;
                        }
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalEketal.g:1453:5: this_INT_2= RULE_INT kw= '.' (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )?
                            {
                            this_INT_2=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_2, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_0());
                              				
                            }
                            kw=(Token)match(input,38,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_1());
                              				
                            }
                            // InternalEketal.g:1465:5: (this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )? )?
                            int alt28=2;
                            int LA28_0 = input.LA(1);

                            if ( (LA28_0==RULE_INT) ) {
                                int LA28_1 = input.LA(2);

                                if ( (LA28_1==38) ) {
                                    alt28=1;
                                }
                            }
                            switch (alt28) {
                                case 1 :
                                    // InternalEketal.g:1466:6: this_INT_4= RULE_INT kw= '.' (this_INT_6= RULE_INT kw= '.' )?
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_2_0());
                                      					
                                    }
                                    kw=(Token)match(input,38,FOLLOW_30); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_2_1());
                                      					
                                    }
                                    // InternalEketal.g:1478:6: (this_INT_6= RULE_INT kw= '.' )?
                                    int alt27=2;
                                    int LA27_0 = input.LA(1);

                                    if ( (LA27_0==RULE_INT) ) {
                                        int LA27_1 = input.LA(2);

                                        if ( (LA27_1==38) ) {
                                            alt27=1;
                                        }
                                    }
                                    switch (alt27) {
                                        case 1 :
                                            // InternalEketal.g:1479:7: this_INT_6= RULE_INT kw= '.'
                                            {
                                            this_INT_6=(Token)match(input,RULE_INT,FOLLOW_29); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              							current.merge(this_INT_6);
                                              						
                                            }
                                            if ( state.backtracking==0 ) {

                                              							newLeafNode(this_INT_6, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_0_2_2_0());
                                              						
                                            }
                                            kw=(Token)match(input,38,FOLLOW_30); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              							current.merge(kw);
                                              							newLeafNode(kw, grammarAccess.getIpAccess().getFullStopKeyword_2_0_2_2_1());
                                              						
                                            }

                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalEketal.g:1494:4: (this_INT_8= RULE_INT | this_ANY_9= RULE_ANY | (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' ) )
                    int alt30=3;
                    switch ( input.LA(1) ) {
                    case RULE_INT:
                        {
                        alt30=1;
                        }
                        break;
                    case RULE_ANY:
                        {
                        alt30=2;
                        }
                        break;
                    case 39:
                        {
                        alt30=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;
                    }

                    switch (alt30) {
                        case 1 :
                            // InternalEketal.g:1495:5: this_INT_8= RULE_INT
                            {
                            this_INT_8=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_8);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_8, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalEketal.g:1503:5: this_ANY_9= RULE_ANY
                            {
                            this_ANY_9=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ANY_9);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ANY_9, grammarAccess.getIpAccess().getANYTerminalRuleCall_2_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalEketal.g:1511:5: (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' )
                            {
                            // InternalEketal.g:1511:5: (kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']' )
                            // InternalEketal.g:1512:6: kw= '[' this_INT_11= RULE_INT kw= '-' this_INT_13= RULE_INT kw= ']'
                            {
                            kw=(Token)match(input,39,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(kw);
                              						newLeafNode(kw, grammarAccess.getIpAccess().getLeftSquareBracketKeyword_2_1_2_0());
                              					
                            }
                            this_INT_11=(Token)match(input,RULE_INT,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_INT_11);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						newLeafNode(this_INT_11, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_1_2_1());
                              					
                            }
                            kw=(Token)match(input,40,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(kw);
                              						newLeafNode(kw, grammarAccess.getIpAccess().getHyphenMinusKeyword_2_1_2_2());
                              					
                            }
                            this_INT_13=(Token)match(input,RULE_INT,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_INT_13);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						newLeafNode(this_INT_13, grammarAccess.getIpAccess().getINTTerminalRuleCall_2_1_2_3());
                              					
                            }
                            kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(kw);
                              						newLeafNode(kw, grammarAccess.getIpAccess().getRightSquareBracketKeyword_2_1_2_4());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIp"


    // $ANTLR start "entryRuleAutomaton"
    // InternalEketal.g:1548:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalEketal.g:1548:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalEketal.g:1549:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalEketal.g:1555:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_steps_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1561:2: ( (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' ) )
            // InternalEketal.g:1562:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            {
            // InternalEketal.g:1562:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}' )
            // InternalEketal.g:1563:3: otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_steps_8_0= ruleStep ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalEketal.g:1567:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1568:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1568:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1569:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAutomatonRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAutomatonAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:1589:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_ID||LA33_0==53) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalEketal.g:1590:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:1590:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:1591:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:1591:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:1592:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAutomatonRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1609:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==26) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalEketal.g:1610:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1614:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:1615:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:1615:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:1616:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAutomatonAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAutomatonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAutomatonAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,21,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getAutomatonAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:1643:3: ( (lv_steps_8_0= ruleStep ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_ID||(LA34_0>=110 && LA34_0<=112)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalEketal.g:1644:4: (lv_steps_8_0= ruleStep )
            	    {
            	    // InternalEketal.g:1644:4: (lv_steps_8_0= ruleStep )
            	    // InternalEketal.g:1645:5: lv_steps_8_0= ruleStep
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAutomatonAccess().getStepsStepParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_steps_8_0=ruleStep();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"steps",
            	      						lv_steps_8_0,
            	      						"co.edu.icesi.eketal.Eketal.Step");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            otherlv_9=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getAutomatonAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleStep"
    // InternalEketal.g:1670:1: entryRuleStep returns [EObject current=null] : iv_ruleStep= ruleStep EOF ;
    public final EObject entryRuleStep() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStep = null;


        try {
            // InternalEketal.g:1670:45: (iv_ruleStep= ruleStep EOF )
            // InternalEketal.g:1671:2: iv_ruleStep= ruleStep EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStepRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStep=ruleStep();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStep; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStep"


    // $ANTLR start "ruleStep"
    // InternalEketal.g:1677:1: ruleStep returns [EObject current=null] : ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) ;
    public final EObject ruleStep() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Enumerator lv_type_0_0 = null;

        EObject lv_transitions_4_0 = null;

        EObject lv_transitions_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1683:2: ( ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' ) )
            // InternalEketal.g:1684:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            {
            // InternalEketal.g:1684:2: ( ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';' )
            // InternalEketal.g:1685:3: ( (lv_type_0_0= ruleStateType ) )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )? otherlv_10= ';'
            {
            // InternalEketal.g:1685:3: ( (lv_type_0_0= ruleStateType ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=110 && LA35_0<=112)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalEketal.g:1686:4: (lv_type_0_0= ruleStateType )
                    {
                    // InternalEketal.g:1686:4: (lv_type_0_0= ruleStateType )
                    // InternalEketal.g:1687:5: lv_type_0_0= ruleStateType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStepAccess().getTypeStateTypeEnumRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_type_0_0=ruleStateType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStepRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"co.edu.icesi.eketal.Eketal.StateType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:1704:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1705:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1705:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1706:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getStepAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStepRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            // InternalEketal.g:1722:3: (otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )* )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==23) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalEketal.g:1723:4: otherlv_2= ':' otherlv_3= '(' ( (lv_transitions_4_0= ruleTransDef ) ) otherlv_5= ')' (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    {
                    otherlv_2=(Token)match(input,23,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getStepAccess().getColonKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalEketal.g:1731:4: ( (lv_transitions_4_0= ruleTransDef ) )
                    // InternalEketal.g:1732:5: (lv_transitions_4_0= ruleTransDef )
                    {
                    // InternalEketal.g:1732:5: (lv_transitions_4_0= ruleTransDef )
                    // InternalEketal.g:1733:6: lv_transitions_4_0= ruleTransDef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_transitions_4_0=ruleTransDef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStepRule());
                      						}
                      						add(
                      							current,
                      							"transitions",
                      							lv_transitions_4_0,
                      							"co.edu.icesi.eketal.Eketal.TransDef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,27,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_3());
                      			
                    }
                    // InternalEketal.g:1754:4: (otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')' )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==29) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalEketal.g:1755:5: otherlv_6= '||' otherlv_7= '(' ( (lv_transitions_8_0= ruleTransDef ) )* otherlv_9= ')'
                    	    {
                    	    otherlv_6=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getStepAccess().getVerticalLineVerticalLineKeyword_2_4_0());
                    	      				
                    	    }
                    	    otherlv_7=(Token)match(input,25,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getStepAccess().getLeftParenthesisKeyword_2_4_1());
                    	      				
                    	    }
                    	    // InternalEketal.g:1763:5: ( (lv_transitions_8_0= ruleTransDef ) )*
                    	    loop36:
                    	    do {
                    	        int alt36=2;
                    	        int LA36_0 = input.LA(1);

                    	        if ( (LA36_0==RULE_ID) ) {
                    	            alt36=1;
                    	        }


                    	        switch (alt36) {
                    	    	case 1 :
                    	    	    // InternalEketal.g:1764:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    {
                    	    	    // InternalEketal.g:1764:6: (lv_transitions_8_0= ruleTransDef )
                    	    	    // InternalEketal.g:1765:7: lv_transitions_8_0= ruleTransDef
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							newCompositeNode(grammarAccess.getStepAccess().getTransitionsTransDefParserRuleCall_2_4_2_0());
                    	    	      						
                    	    	    }
                    	    	    pushFollow(FOLLOW_27);
                    	    	    lv_transitions_8_0=ruleTransDef();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      							if (current==null) {
                    	    	      								current = createModelElementForParent(grammarAccess.getStepRule());
                    	    	      							}
                    	    	      							add(
                    	    	      								current,
                    	    	      								"transitions",
                    	    	      								lv_transitions_8_0,
                    	    	      								"co.edu.icesi.eketal.Eketal.TransDef");
                    	    	      							afterParserOrEnumRuleCall();
                    	    	      						
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop36;
                    	        }
                    	    } while (true);

                    	    otherlv_9=(Token)match(input,27,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getStepAccess().getRightParenthesisKeyword_2_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getStepAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStep"


    // $ANTLR start "entryRuleTransDef"
    // InternalEketal.g:1796:1: entryRuleTransDef returns [EObject current=null] : iv_ruleTransDef= ruleTransDef EOF ;
    public final EObject entryRuleTransDef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransDef = null;


        try {
            // InternalEketal.g:1796:49: (iv_ruleTransDef= ruleTransDef EOF )
            // InternalEketal.g:1797:2: iv_ruleTransDef= ruleTransDef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransDefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTransDef=ruleTransDef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransDef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransDef"


    // $ANTLR start "ruleTransDef"
    // InternalEketal.g:1803:1: ruleTransDef returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) ;
    public final EObject ruleTransDef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalEketal.g:1809:2: ( ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) ) )
            // InternalEketal.g:1810:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            {
            // InternalEketal.g:1810:2: ( ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) ) )
            // InternalEketal.g:1811:3: ( (otherlv_0= RULE_ID ) ) otherlv_1= '->' ( (otherlv_2= RULE_ID ) )
            {
            // InternalEketal.g:1811:3: ( (otherlv_0= RULE_ID ) )
            // InternalEketal.g:1812:4: (otherlv_0= RULE_ID )
            {
            // InternalEketal.g:1812:4: (otherlv_0= RULE_ID )
            // InternalEketal.g:1813:5: otherlv_0= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_0=(Token)match(input,RULE_ID,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_0, grammarAccess.getTransDefAccess().getEventEvDeclCrossReference_0_0());
              				
            }

            }


            }

            otherlv_1=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTransDefAccess().getHyphenMinusGreaterThanSignKeyword_1());
              		
            }
            // InternalEketal.g:1828:3: ( (otherlv_2= RULE_ID ) )
            // InternalEketal.g:1829:4: (otherlv_2= RULE_ID )
            {
            // InternalEketal.g:1829:4: (otherlv_2= RULE_ID )
            // InternalEketal.g:1830:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTransDefRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getTransDefAccess().getTargetStepCrossReference_2_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransDef"


    // $ANTLR start "entryRuleLtl"
    // InternalEketal.g:1845:1: entryRuleLtl returns [EObject current=null] : iv_ruleLtl= ruleLtl EOF ;
    public final EObject entryRuleLtl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtl = null;


        try {
            // InternalEketal.g:1845:44: (iv_ruleLtl= ruleLtl EOF )
            // InternalEketal.g:1846:2: iv_ruleLtl= ruleLtl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtl=ruleLtl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtl"


    // $ANTLR start "ruleLtl"
    // InternalEketal.g:1852:1: ruleLtl returns [EObject current=null] : (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlThen ) ) otherlv_9= '}' ) ;
    public final EObject ruleLtl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_params_3_0 = null;

        EObject lv_params_5_0 = null;

        EObject lv_predicate_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1858:2: ( (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlThen ) ) otherlv_9= '}' ) )
            // InternalEketal.g:1859:2: (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlThen ) ) otherlv_9= '}' )
            {
            // InternalEketal.g:1859:2: (otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlThen ) ) otherlv_9= '}' )
            // InternalEketal.g:1860:3: otherlv_0= 'ltl' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_6= ')' otherlv_7= '{' ( (lv_predicate_8_0= ruleLtlThen ) ) otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLtlAccess().getLtlKeyword_0());
              		
            }
            // InternalEketal.g:1864:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalEketal.g:1865:4: (lv_name_1_0= RULE_ID )
            {
            // InternalEketal.g:1865:4: (lv_name_1_0= RULE_ID )
            // InternalEketal.g:1866:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLtlAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLtlAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:1886:3: ( ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_ID||LA40_0==53) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalEketal.g:1887:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) ) (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalEketal.g:1887:4: ( (lv_params_3_0= ruleFullJvmFormalParameter ) )
                    // InternalEketal.g:1888:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    {
                    // InternalEketal.g:1888:5: (lv_params_3_0= ruleFullJvmFormalParameter )
                    // InternalEketal.g:1889:6: lv_params_3_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLtlAccess().getParamsFullJvmFormalParameterParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_params_3_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLtlRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_3_0,
                      							"jbase.Jbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:1906:4: (otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==26) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalEketal.g:1907:5: otherlv_4= ',' ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLtlAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:1911:5: ( (lv_params_5_0= ruleFullJvmFormalParameter ) )
                    	    // InternalEketal.g:1912:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalEketal.g:1912:6: (lv_params_5_0= ruleFullJvmFormalParameter )
                    	    // InternalEketal.g:1913:7: lv_params_5_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLtlAccess().getParamsFullJvmFormalParameterParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_params_5_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLtlRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_5_0,
                    	      								"jbase.Jbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getLtlAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_7=(Token)match(input,21,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getLtlAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:1940:3: ( (lv_predicate_8_0= ruleLtlThen ) )
            // InternalEketal.g:1941:4: (lv_predicate_8_0= ruleLtlThen )
            {
            // InternalEketal.g:1941:4: (lv_predicate_8_0= ruleLtlThen )
            // InternalEketal.g:1942:5: lv_predicate_8_0= ruleLtlThen
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlAccess().getPredicateLtlThenParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_predicate_8_0=ruleLtlThen();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_8_0,
              						"co.edu.icesi.eketal.Eketal.LtlThen");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLtlAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtl"


    // $ANTLR start "entryRuleLtlThen"
    // InternalEketal.g:1967:1: entryRuleLtlThen returns [EObject current=null] : iv_ruleLtlThen= ruleLtlThen EOF ;
    public final EObject entryRuleLtlThen() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlThen = null;


        try {
            // InternalEketal.g:1967:48: (iv_ruleLtlThen= ruleLtlThen EOF )
            // InternalEketal.g:1968:2: iv_ruleLtlThen= ruleLtlThen EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlThenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlThen=ruleLtlThen();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlThen; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlThen"


    // $ANTLR start "ruleLtlThen"
    // InternalEketal.g:1974:1: ruleLtlThen returns [EObject current=null] : (this_LtlOr_0= ruleLtlOr ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )* ) ;
    public final EObject ruleLtlThen() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlOr_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:1980:2: ( (this_LtlOr_0= ruleLtlOr ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )* ) )
            // InternalEketal.g:1981:2: (this_LtlOr_0= ruleLtlOr ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )* )
            {
            // InternalEketal.g:1981:2: (this_LtlOr_0= ruleLtlOr ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )* )
            // InternalEketal.g:1982:3: this_LtlOr_0= ruleLtlOr ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlThenAccess().getLtlOrParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_40);
            this_LtlOr_0=ruleLtlOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlOr_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:1990:3: ( () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==43) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalEketal.g:1991:4: () ( (lv_op_2_0= '->' ) ) ( (lv_right_3_0= ruleLtlOr ) )
            	    {
            	    // InternalEketal.g:1991:4: ()
            	    // InternalEketal.g:1992:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlThenAccess().getLtlThenLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:1998:4: ( (lv_op_2_0= '->' ) )
            	    // InternalEketal.g:1999:5: (lv_op_2_0= '->' )
            	    {
            	    // InternalEketal.g:1999:5: (lv_op_2_0= '->' )
            	    // InternalEketal.g:2000:6: lv_op_2_0= '->'
            	    {
            	    lv_op_2_0=(Token)match(input,43,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlThenAccess().getOpHyphenMinusGreaterThanSignKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlThenRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "->");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2012:4: ( (lv_right_3_0= ruleLtlOr ) )
            	    // InternalEketal.g:2013:5: (lv_right_3_0= ruleLtlOr )
            	    {
            	    // InternalEketal.g:2013:5: (lv_right_3_0= ruleLtlOr )
            	    // InternalEketal.g:2014:6: lv_right_3_0= ruleLtlOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlThenAccess().getRightLtlOrParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_right_3_0=ruleLtlOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlThenRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlThen"


    // $ANTLR start "entryRuleLtlOr"
    // InternalEketal.g:2036:1: entryRuleLtlOr returns [EObject current=null] : iv_ruleLtlOr= ruleLtlOr EOF ;
    public final EObject entryRuleLtlOr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlOr = null;


        try {
            // InternalEketal.g:2036:46: (iv_ruleLtlOr= ruleLtlOr EOF )
            // InternalEketal.g:2037:2: iv_ruleLtlOr= ruleLtlOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlOr=ruleLtlOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlOr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlOr"


    // $ANTLR start "ruleLtlOr"
    // InternalEketal.g:2043:1: ruleLtlOr returns [EObject current=null] : (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* ) ;
    public final EObject ruleLtlOr() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlAnd_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2049:2: ( (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* ) )
            // InternalEketal.g:2050:2: (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* )
            {
            // InternalEketal.g:2050:2: (this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )* )
            // InternalEketal.g:2051:3: this_LtlAnd_0= ruleLtlAnd ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlOrAccess().getLtlAndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_LtlAnd_0=ruleLtlAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlAnd_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2059:3: ( () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==29) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalEketal.g:2060:4: () ( (lv_op_2_0= '||' ) ) ( (lv_right_3_0= ruleLtlAnd ) )
            	    {
            	    // InternalEketal.g:2060:4: ()
            	    // InternalEketal.g:2061:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlOrAccess().getLtlOrLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2067:4: ( (lv_op_2_0= '||' ) )
            	    // InternalEketal.g:2068:5: (lv_op_2_0= '||' )
            	    {
            	    // InternalEketal.g:2068:5: (lv_op_2_0= '||' )
            	    // InternalEketal.g:2069:6: lv_op_2_0= '||'
            	    {
            	    lv_op_2_0=(Token)match(input,29,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlOrAccess().getOpVerticalLineVerticalLineKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlOrRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "||");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2081:4: ( (lv_right_3_0= ruleLtlAnd ) )
            	    // InternalEketal.g:2082:5: (lv_right_3_0= ruleLtlAnd )
            	    {
            	    // InternalEketal.g:2082:5: (lv_right_3_0= ruleLtlAnd )
            	    // InternalEketal.g:2083:6: lv_right_3_0= ruleLtlAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlOrAccess().getRightLtlAndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_right_3_0=ruleLtlAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlOrRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlOr"


    // $ANTLR start "entryRuleLtlAnd"
    // InternalEketal.g:2105:1: entryRuleLtlAnd returns [EObject current=null] : iv_ruleLtlAnd= ruleLtlAnd EOF ;
    public final EObject entryRuleLtlAnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAnd = null;


        try {
            // InternalEketal.g:2105:47: (iv_ruleLtlAnd= ruleLtlAnd EOF )
            // InternalEketal.g:2106:2: iv_ruleLtlAnd= ruleLtlAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAnd=ruleLtlAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAnd"


    // $ANTLR start "ruleLtlAnd"
    // InternalEketal.g:2112:1: ruleLtlAnd returns [EObject current=null] : (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* ) ;
    public final EObject ruleLtlAnd() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlUntil_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2118:2: ( (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* ) )
            // InternalEketal.g:2119:2: (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* )
            {
            // InternalEketal.g:2119:2: (this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )* )
            // InternalEketal.g:2120:3: this_LtlUntil_0= ruleLtlUntil ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlAndAccess().getLtlUntilParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_LtlUntil_0=ruleLtlUntil();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlUntil_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2128:3: ( () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==30) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalEketal.g:2129:4: () ( (lv_op_2_0= '&&' ) ) ( (lv_right_3_0= ruleLtlUntil ) )
            	    {
            	    // InternalEketal.g:2129:4: ()
            	    // InternalEketal.g:2130:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlAndAccess().getLtlAndLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2136:4: ( (lv_op_2_0= '&&' ) )
            	    // InternalEketal.g:2137:5: (lv_op_2_0= '&&' )
            	    {
            	    // InternalEketal.g:2137:5: (lv_op_2_0= '&&' )
            	    // InternalEketal.g:2138:6: lv_op_2_0= '&&'
            	    {
            	    lv_op_2_0=(Token)match(input,30,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlAndAccess().getOpAmpersandAmpersandKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlAndRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "&&");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2150:4: ( (lv_right_3_0= ruleLtlUntil ) )
            	    // InternalEketal.g:2151:5: (lv_right_3_0= ruleLtlUntil )
            	    {
            	    // InternalEketal.g:2151:5: (lv_right_3_0= ruleLtlUntil )
            	    // InternalEketal.g:2152:6: lv_right_3_0= ruleLtlUntil
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlAndAccess().getRightLtlUntilParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_right_3_0=ruleLtlUntil();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlAndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlUntil");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAnd"


    // $ANTLR start "entryRuleLtlUntil"
    // InternalEketal.g:2174:1: entryRuleLtlUntil returns [EObject current=null] : iv_ruleLtlUntil= ruleLtlUntil EOF ;
    public final EObject entryRuleLtlUntil() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlUntil = null;


        try {
            // InternalEketal.g:2174:49: (iv_ruleLtlUntil= ruleLtlUntil EOF )
            // InternalEketal.g:2175:2: iv_ruleLtlUntil= ruleLtlUntil EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlUntilRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlUntil=ruleLtlUntil();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlUntil; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlUntil"


    // $ANTLR start "ruleLtlUntil"
    // InternalEketal.g:2181:1: ruleLtlUntil returns [EObject current=null] : (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* ) ;
    public final EObject ruleLtlUntil() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_LtlUnary_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2187:2: ( (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* ) )
            // InternalEketal.g:2188:2: (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* )
            {
            // InternalEketal.g:2188:2: (this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )* )
            // InternalEketal.g:2189:3: this_LtlUnary_0= ruleLtlUnary ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLtlUntilAccess().getLtlUnaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_41);
            this_LtlUnary_0=ruleLtlUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LtlUnary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2197:3: ( () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==45) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalEketal.g:2198:4: () ( (lv_op_2_0= 'until' ) ) ( (lv_right_3_0= ruleLtlUnary ) )
            	    {
            	    // InternalEketal.g:2198:4: ()
            	    // InternalEketal.g:2199:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getLtlUntilAccess().getLtlUntilLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalEketal.g:2205:4: ( (lv_op_2_0= 'until' ) )
            	    // InternalEketal.g:2206:5: (lv_op_2_0= 'until' )
            	    {
            	    // InternalEketal.g:2206:5: (lv_op_2_0= 'until' )
            	    // InternalEketal.g:2207:6: lv_op_2_0= 'until'
            	    {
            	    lv_op_2_0=(Token)match(input,45,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getLtlUntilAccess().getOpUntilKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getLtlUntilRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "until");
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:2219:4: ( (lv_right_3_0= ruleLtlUnary ) )
            	    // InternalEketal.g:2220:5: (lv_right_3_0= ruleLtlUnary )
            	    {
            	    // InternalEketal.g:2220:5: (lv_right_3_0= ruleLtlUnary )
            	    // InternalEketal.g:2221:6: lv_right_3_0= ruleLtlUnary
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLtlUntilAccess().getRightLtlUnaryParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_41);
            	    lv_right_3_0=ruleLtlUnary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLtlUntilRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"co.edu.icesi.eketal.Eketal.LtlUnary");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlUntil"


    // $ANTLR start "entryRuleLtlUnary"
    // InternalEketal.g:2243:1: entryRuleLtlUnary returns [EObject current=null] : iv_ruleLtlUnary= ruleLtlUnary EOF ;
    public final EObject entryRuleLtlUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlUnary = null;


        try {
            // InternalEketal.g:2243:49: (iv_ruleLtlUnary= ruleLtlUnary EOF )
            // InternalEketal.g:2244:2: iv_ruleLtlUnary= ruleLtlUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlUnary=ruleLtlUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlUnary"


    // $ANTLR start "ruleLtlUnary"
    // InternalEketal.g:2250:1: ruleLtlUnary returns [EObject current=null] : (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot ) ;
    public final EObject ruleLtlUnary() throws RecognitionException {
        EObject current = null;

        EObject this_LtlAtom_0 = null;

        EObject this_LtlAlways_1 = null;

        EObject this_LtlNext_2 = null;

        EObject this_LtlEventually_3 = null;

        EObject this_LtlNot_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:2256:2: ( (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot ) )
            // InternalEketal.g:2257:2: (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot )
            {
            // InternalEketal.g:2257:2: (this_LtlAtom_0= ruleLtlAtom | this_LtlAlways_1= ruleLtlAlways | this_LtlNext_2= ruleLtlNext | this_LtlEventually_3= ruleLtlEventually | this_LtlNot_4= ruleLtlNot )
            int alt45=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 25:
                {
                alt45=1;
                }
                break;
            case 47:
                {
                alt45=2;
                }
                break;
            case 46:
                {
                alt45=3;
                }
                break;
            case 48:
                {
                alt45=4;
                }
                break;
            case 31:
                {
                alt45=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalEketal.g:2258:3: this_LtlAtom_0= ruleLtlAtom
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlAtomParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlAtom_0=ruleLtlAtom();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlAtom_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:2267:3: this_LtlAlways_1= ruleLtlAlways
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlAlwaysParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlAlways_1=ruleLtlAlways();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlAlways_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:2276:3: this_LtlNext_2= ruleLtlNext
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlNextParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlNext_2=ruleLtlNext();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlNext_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:2285:3: this_LtlEventually_3= ruleLtlEventually
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlEventuallyParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlEventually_3=ruleLtlEventually();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlEventually_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:2294:3: this_LtlNot_4= ruleLtlNot
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLtlUnaryAccess().getLtlNotParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlNot_4=ruleLtlNot();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlNot_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlUnary"


    // $ANTLR start "entryRuleLtlNext"
    // InternalEketal.g:2306:1: entryRuleLtlNext returns [EObject current=null] : iv_ruleLtlNext= ruleLtlNext EOF ;
    public final EObject entryRuleLtlNext() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlNext = null;


        try {
            // InternalEketal.g:2306:48: (iv_ruleLtlNext= ruleLtlNext EOF )
            // InternalEketal.g:2307:2: iv_ruleLtlNext= ruleLtlNext EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlNextRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlNext=ruleLtlNext();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlNext; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlNext"


    // $ANTLR start "ruleLtlNext"
    // InternalEketal.g:2313:1: ruleLtlNext returns [EObject current=null] : ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlNext() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2319:2: ( ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2320:2: ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2320:2: ( () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2321:3: () ( (lv_op_1_0= 'next' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2321:3: ()
            // InternalEketal.g:2322:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlNextAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2328:3: ( (lv_op_1_0= 'next' ) )
            // InternalEketal.g:2329:4: (lv_op_1_0= 'next' )
            {
            // InternalEketal.g:2329:4: (lv_op_1_0= 'next' )
            // InternalEketal.g:2330:5: lv_op_1_0= 'next'
            {
            lv_op_1_0=(Token)match(input,46,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlNextAccess().getOpNextKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlNextRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "next");
              				
            }

            }


            }

            // InternalEketal.g:2342:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2343:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2343:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2344:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlNextAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlNextRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlNext"


    // $ANTLR start "entryRuleLtlAlways"
    // InternalEketal.g:2365:1: entryRuleLtlAlways returns [EObject current=null] : iv_ruleLtlAlways= ruleLtlAlways EOF ;
    public final EObject entryRuleLtlAlways() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAlways = null;


        try {
            // InternalEketal.g:2365:50: (iv_ruleLtlAlways= ruleLtlAlways EOF )
            // InternalEketal.g:2366:2: iv_ruleLtlAlways= ruleLtlAlways EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAlwaysRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAlways=ruleLtlAlways();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAlways; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAlways"


    // $ANTLR start "ruleLtlAlways"
    // InternalEketal.g:2372:1: ruleLtlAlways returns [EObject current=null] : ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlAlways() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2378:2: ( ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2379:2: ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2379:2: ( () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2380:3: () ( (lv_op_1_0= 'always' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2380:3: ()
            // InternalEketal.g:2381:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlAlwaysAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2387:3: ( (lv_op_1_0= 'always' ) )
            // InternalEketal.g:2388:4: (lv_op_1_0= 'always' )
            {
            // InternalEketal.g:2388:4: (lv_op_1_0= 'always' )
            // InternalEketal.g:2389:5: lv_op_1_0= 'always'
            {
            lv_op_1_0=(Token)match(input,47,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlAlwaysAccess().getOpAlwaysKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlAlwaysRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "always");
              				
            }

            }


            }

            // InternalEketal.g:2401:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2402:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2402:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2403:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlAlwaysAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlAlwaysRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAlways"


    // $ANTLR start "entryRuleLtlEventually"
    // InternalEketal.g:2424:1: entryRuleLtlEventually returns [EObject current=null] : iv_ruleLtlEventually= ruleLtlEventually EOF ;
    public final EObject entryRuleLtlEventually() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlEventually = null;


        try {
            // InternalEketal.g:2424:54: (iv_ruleLtlEventually= ruleLtlEventually EOF )
            // InternalEketal.g:2425:2: iv_ruleLtlEventually= ruleLtlEventually EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlEventuallyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlEventually=ruleLtlEventually();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlEventually; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlEventually"


    // $ANTLR start "ruleLtlEventually"
    // InternalEketal.g:2431:1: ruleLtlEventually returns [EObject current=null] : ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlEventually() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2437:2: ( ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2438:2: ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2438:2: ( () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2439:3: () ( (lv_op_1_0= 'eventually' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2439:3: ()
            // InternalEketal.g:2440:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlEventuallyAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2446:3: ( (lv_op_1_0= 'eventually' ) )
            // InternalEketal.g:2447:4: (lv_op_1_0= 'eventually' )
            {
            // InternalEketal.g:2447:4: (lv_op_1_0= 'eventually' )
            // InternalEketal.g:2448:5: lv_op_1_0= 'eventually'
            {
            lv_op_1_0=(Token)match(input,48,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlEventuallyAccess().getOpEventuallyKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlEventuallyRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "eventually");
              				
            }

            }


            }

            // InternalEketal.g:2460:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2461:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2461:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2462:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlEventuallyAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlEventuallyRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlEventually"


    // $ANTLR start "entryRuleLtlNot"
    // InternalEketal.g:2483:1: entryRuleLtlNot returns [EObject current=null] : iv_ruleLtlNot= ruleLtlNot EOF ;
    public final EObject entryRuleLtlNot() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlNot = null;


        try {
            // InternalEketal.g:2483:47: (iv_ruleLtlNot= ruleLtlNot EOF )
            // InternalEketal.g:2484:2: iv_ruleLtlNot= ruleLtlNot EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlNotRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlNot=ruleLtlNot();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlNot; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlNot"


    // $ANTLR start "ruleLtlNot"
    // InternalEketal.g:2490:1: ruleLtlNot returns [EObject current=null] : ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) ;
    public final EObject ruleLtlNot() throws RecognitionException {
        EObject current = null;

        Token lv_op_1_0=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2496:2: ( ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) ) )
            // InternalEketal.g:2497:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            {
            // InternalEketal.g:2497:2: ( () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) ) )
            // InternalEketal.g:2498:3: () ( (lv_op_1_0= '!' ) ) ( (lv_expr_2_0= ruleLtlAtom ) )
            {
            // InternalEketal.g:2498:3: ()
            // InternalEketal.g:2499:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLtlNotAccess().getUnaryLtlAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2505:3: ( (lv_op_1_0= '!' ) )
            // InternalEketal.g:2506:4: (lv_op_1_0= '!' )
            {
            // InternalEketal.g:2506:4: (lv_op_1_0= '!' )
            // InternalEketal.g:2507:5: lv_op_1_0= '!'
            {
            lv_op_1_0=(Token)match(input,31,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_op_1_0, grammarAccess.getLtlNotAccess().getOpExclamationMarkKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLtlNotRule());
              					}
              					setWithLastConsumed(current, "op", lv_op_1_0, "!");
              				
            }

            }


            }

            // InternalEketal.g:2519:3: ( (lv_expr_2_0= ruleLtlAtom ) )
            // InternalEketal.g:2520:4: (lv_expr_2_0= ruleLtlAtom )
            {
            // InternalEketal.g:2520:4: (lv_expr_2_0= ruleLtlAtom )
            // InternalEketal.g:2521:5: lv_expr_2_0= ruleLtlAtom
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlNotAccess().getExprLtlAtomParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlNotRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"co.edu.icesi.eketal.Eketal.LtlAtom");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlNot"


    // $ANTLR start "entryRuleLtlAtom"
    // InternalEketal.g:2542:1: entryRuleLtlAtom returns [EObject current=null] : iv_ruleLtlAtom= ruleLtlAtom EOF ;
    public final EObject entryRuleLtlAtom() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlAtom = null;


        try {
            // InternalEketal.g:2542:48: (iv_ruleLtlAtom= ruleLtlAtom EOF )
            // InternalEketal.g:2543:2: iv_ruleLtlAtom= ruleLtlAtom EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlAtomRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlAtom=ruleLtlAtom();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlAtom; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlAtom"


    // $ANTLR start "ruleLtlAtom"
    // InternalEketal.g:2549:1: ruleLtlAtom returns [EObject current=null] : ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' ) ) ;
    public final EObject ruleLtlAtom() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_LtlThen_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:2555:2: ( ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' ) ) )
            // InternalEketal.g:2556:2: ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' ) )
            {
            // InternalEketal.g:2556:2: ( ( (otherlv_0= RULE_ID ) ) | (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_ID) ) {
                alt46=1;
            }
            else if ( (LA46_0==25) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalEketal.g:2557:3: ( (otherlv_0= RULE_ID ) )
                    {
                    // InternalEketal.g:2557:3: ( (otherlv_0= RULE_ID ) )
                    // InternalEketal.g:2558:4: (otherlv_0= RULE_ID )
                    {
                    // InternalEketal.g:2558:4: (otherlv_0= RULE_ID )
                    // InternalEketal.g:2559:5: otherlv_0= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLtlAtomRule());
                      					}
                      				
                    }
                    otherlv_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getLtlAtomAccess().getEventEvDeclCrossReference_0_0());
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2571:3: (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' )
                    {
                    // InternalEketal.g:2571:3: (otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')' )
                    // InternalEketal.g:2572:4: otherlv_1= '(' this_LtlThen_2= ruleLtlThen otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLtlAtomAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getLtlAtomAccess().getLtlThenParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_25);
                    this_LtlThen_2=ruleLtlThen();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_LtlThen_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLtlAtomAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlAtom"


    // $ANTLR start "entryRuleRc"
    // InternalEketal.g:2593:1: entryRuleRc returns [EObject current=null] : iv_ruleRc= ruleRc EOF ;
    public final EObject entryRuleRc() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRc = null;


        try {
            // InternalEketal.g:2593:43: (iv_ruleRc= ruleRc EOF )
            // InternalEketal.g:2594:2: iv_ruleRc= ruleRc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRcRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRc=ruleRc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRc"


    // $ANTLR start "ruleRc"
    // InternalEketal.g:2600:1: ruleRc returns [EObject current=null] : ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) ;
    public final EObject ruleRc() throws RecognitionException {
        EObject current = null;

        Token lv_syncex_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Enumerator lv_pos_2_0 = null;

        EObject lv_body_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2606:2: ( ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) ) )
            // InternalEketal.g:2607:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            {
            // InternalEketal.g:2607:2: ( ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) ) )
            // InternalEketal.g:2608:3: ( (lv_syncex_0_0= 'syncex' ) )? otherlv_1= 'reaction' ( (lv_pos_2_0= rulePos ) ) ( (otherlv_3= RULE_ID ) ) otherlv_4= '.' ( (otherlv_5= RULE_ID ) ) ( (lv_body_6_0= ruleBody ) )
            {
            // InternalEketal.g:2608:3: ( (lv_syncex_0_0= 'syncex' ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==49) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalEketal.g:2609:4: (lv_syncex_0_0= 'syncex' )
                    {
                    // InternalEketal.g:2609:4: (lv_syncex_0_0= 'syncex' )
                    // InternalEketal.g:2610:5: lv_syncex_0_0= 'syncex'
                    {
                    lv_syncex_0_0=(Token)match(input,49,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_syncex_0_0, grammarAccess.getRcAccess().getSyncexSyncexKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getRcRule());
                      					}
                      					setWithLastConsumed(current, "syncex", lv_syncex_0_0, "syncex");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,50,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRcAccess().getReactionKeyword_1());
              		
            }
            // InternalEketal.g:2626:3: ( (lv_pos_2_0= rulePos ) )
            // InternalEketal.g:2627:4: (lv_pos_2_0= rulePos )
            {
            // InternalEketal.g:2627:4: (lv_pos_2_0= rulePos )
            // InternalEketal.g:2628:5: lv_pos_2_0= rulePos
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getPosPosEnumRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_pos_2_0=rulePos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"pos",
              						lv_pos_2_0,
              						"co.edu.icesi.eketal.Eketal.Pos");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:2645:3: ( (otherlv_3= RULE_ID ) )
            // InternalEketal.g:2646:4: (otherlv_3= RULE_ID )
            {
            // InternalEketal.g:2646:4: (otherlv_3= RULE_ID )
            // InternalEketal.g:2647:5: otherlv_3= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_3=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_3, grammarAccess.getRcAccess().getAutomatonAutomatonCrossReference_3_0());
              				
            }

            }


            }

            otherlv_4=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRcAccess().getFullStopKeyword_4());
              		
            }
            // InternalEketal.g:2662:3: ( (otherlv_5= RULE_ID ) )
            // InternalEketal.g:2663:4: (otherlv_5= RULE_ID )
            {
            // InternalEketal.g:2663:4: (otherlv_5= RULE_ID )
            // InternalEketal.g:2664:5: otherlv_5= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRcRule());
              					}
              				
            }
            otherlv_5=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_5, grammarAccess.getRcAccess().getStateStepCrossReference_5_0());
              				
            }

            }


            }

            // InternalEketal.g:2675:3: ( (lv_body_6_0= ruleBody ) )
            // InternalEketal.g:2676:4: (lv_body_6_0= ruleBody )
            {
            // InternalEketal.g:2676:4: (lv_body_6_0= ruleBody )
            // InternalEketal.g:2677:5: lv_body_6_0= ruleBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRcAccess().getBodyBodyParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRcRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_6_0,
              						"co.edu.icesi.eketal.Eketal.Body");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRc"


    // $ANTLR start "entryRuleBody"
    // InternalEketal.g:2698:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalEketal.g:2698:45: (iv_ruleBody= ruleBody EOF )
            // InternalEketal.g:2699:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalEketal.g:2705:1: ruleBody returns [EObject current=null] : ( (lv_body_0_0= ruleXBlockExpression ) ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        EObject lv_body_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2711:2: ( ( (lv_body_0_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:2712:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:2712:2: ( (lv_body_0_0= ruleXBlockExpression ) )
            // InternalEketal.g:2713:3: (lv_body_0_0= ruleXBlockExpression )
            {
            // InternalEketal.g:2713:3: (lv_body_0_0= ruleXBlockExpression )
            // InternalEketal.g:2714:4: lv_body_0_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getBodyAccess().getBodyXBlockExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getBodyRule());
              				}
              				set(
              					current,
              					"body",
              					lv_body_0_0,
              					"jbase.Jbase.XBlockExpression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleXJStatementOrBlock"
    // InternalEketal.g:2734:1: entryRuleXJStatementOrBlock returns [EObject current=null] : iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF ;
    public final EObject entryRuleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJStatementOrBlock = null;


        try {
            // InternalEketal.g:2734:59: (iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF )
            // InternalEketal.g:2735:2: iv_ruleXJStatementOrBlock= ruleXJStatementOrBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJStatementOrBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJStatementOrBlock=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJStatementOrBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJStatementOrBlock"


    // $ANTLR start "ruleXJStatementOrBlock"
    // InternalEketal.g:2741:1: ruleXJStatementOrBlock returns [EObject current=null] : ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) ;
    public final EObject ruleXJStatementOrBlock() throws RecognitionException {
        EObject current = null;

        EObject this_XBlockExpression_0 = null;

        EObject this_XJSingleStatement_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:2747:2: ( ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement ) )
            // InternalEketal.g:2748:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            {
            // InternalEketal.g:2748:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalEketal.g:2749:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:2749:3: ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression )
                    // InternalEketal.g:2750:4: ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXBlockExpressionParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XBlockExpression_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2761:3: this_XJSingleStatement_1= ruleXJSingleStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJStatementOrBlockAccess().getXJSingleStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSingleStatement_1=ruleXJSingleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSingleStatement_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJStatementOrBlock"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalEketal.g:2773:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalEketal.g:2773:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalEketal.g:2774:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalEketal.g:2780:1: ruleXImportDeclaration returns [EObject current=null] : ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_wildcard_3_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_memberName_4_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2786:2: ( ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* ) )
            // InternalEketal.g:2787:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            {
            // InternalEketal.g:2787:2: ( ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )* )
            // InternalEketal.g:2788:3: ( ( 'import' )=>otherlv_0= 'import' ) ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) ) ( ( ';' )=>otherlv_7= ';' )*
            {
            // InternalEketal.g:2788:3: ( ( 'import' )=>otherlv_0= 'import' )
            // InternalEketal.g:2789:4: ( 'import' )=>otherlv_0= 'import'
            {
            otherlv_0=(Token)match(input,51,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              			
            }

            }

            // InternalEketal.g:2795:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )
            int alt50=3;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalEketal.g:2796:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    {
                    // InternalEketal.g:2796:4: ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) )
                    // InternalEketal.g:2797:5: ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    {
                    // InternalEketal.g:2797:5: ( (lv_static_1_0= 'static' ) )
                    // InternalEketal.g:2798:6: (lv_static_1_0= 'static' )
                    {
                    // InternalEketal.g:2798:6: (lv_static_1_0= 'static' )
                    // InternalEketal.g:2799:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,52,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", true, "static");
                      						
                    }

                    }


                    }

                    // InternalEketal.g:2811:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalEketal.g:2812:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalEketal.g:2812:6: ( ruleQualifiedNameInStaticImport )
                    // InternalEketal.g:2813:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_26);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:2827:5: ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) )
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==RULE_ANY) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==RULE_ID) ) {
                        alt49=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 49, 0, input);

                        throw nvae;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalEketal.g:2828:6: ( (lv_wildcard_3_0= '*' ) )
                            {
                            // InternalEketal.g:2828:6: ( (lv_wildcard_3_0= '*' ) )
                            // InternalEketal.g:2829:7: (lv_wildcard_3_0= '*' )
                            {
                            // InternalEketal.g:2829:7: (lv_wildcard_3_0= '*' )
                            // InternalEketal.g:2830:8: lv_wildcard_3_0= '*'
                            {
                            lv_wildcard_3_0=(Token)match(input,RULE_ANY,FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_3_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", true, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:2843:6: ( (lv_memberName_4_0= ruleValidID ) )
                            {
                            // InternalEketal.g:2843:6: ( (lv_memberName_4_0= ruleValidID ) )
                            // InternalEketal.g:2844:7: (lv_memberName_4_0= ruleValidID )
                            {
                            // InternalEketal.g:2844:7: (lv_memberName_4_0= ruleValidID )
                            // InternalEketal.g:2845:8: lv_memberName_4_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_2_1_0());
                              							
                            }
                            pushFollow(FOLLOW_46);
                            lv_memberName_4_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_4_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:2865:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalEketal.g:2865:4: ( ( ruleQualifiedName ) )
                    // InternalEketal.g:2866:5: ( ruleQualifiedName )
                    {
                    // InternalEketal.g:2866:5: ( ruleQualifiedName )
                    // InternalEketal.g:2867:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:2882:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalEketal.g:2882:4: ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) )
                    // InternalEketal.g:2883:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalEketal.g:2883:5: (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard )
                    // InternalEketal.g:2884:6: lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_importedNamespace_6_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_6_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:2902:3: ( ( ';' )=>otherlv_7= ';' )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==16) && (synpred4_InternalEketal())) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalEketal.g:2903:4: ( ';' )=>otherlv_7= ';'
            	    {
            	    otherlv_7=(Token)match(input,16,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalEketal.g:2913:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalEketal.g:2913:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalEketal.g:2914:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalEketal.g:2920:1: ruleJvmTypeReference returns [EObject current=null] : (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2926:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) )
            // InternalEketal.g:2927:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            {
            // InternalEketal.g:2927:2: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
            // InternalEketal.g:2928:3: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_47);
            this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_JvmParameterizedTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:2936:3: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==39) ) {
                    int LA52_2 = input.LA(2);

                    if ( (LA52_2==41) ) {
                        int LA52_3 = input.LA(3);

                        if ( (synpred5_InternalEketal()) ) {
                            alt52=1;
                        }


                    }


                }


                switch (alt52) {
            	case 1 :
            	    // InternalEketal.g:2937:4: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
            	    {
            	    // InternalEketal.g:2943:4: ( () ruleArrayBrackets )
            	    // InternalEketal.g:2944:5: () ruleArrayBrackets
            	    {
            	    // InternalEketal.g:2944:5: ()
            	    // InternalEketal.g:2945:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_1_0_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_47);
            	    ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalEketal.g:2964:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalEketal.g:2964:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalEketal.g:2965:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalEketal.g:2971:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token lv_varArgs_3_0=null;
        EObject lv_parameterType_2_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:2977:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) ) )
            // InternalEketal.g:2978:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            {
            // InternalEketal.g:2978:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) ) )
            // InternalEketal.g:2979:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_parameterType_2_0= ruleJvmTypeReference ) ) ( (lv_varArgs_3_0= '...' ) )? ( (lv_name_4_0= ruleValidID ) )
            {
            // InternalEketal.g:2979:3: ()
            // InternalEketal.g:2980:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFullJvmFormalParameterAccess().getXJJvmFormalParameterAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:2986:3: ( (lv_final_1_0= 'final' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==53) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEketal.g:2987:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:2987:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:2988:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,53,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getFullJvmFormalParameterAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:3000:3: ( (lv_parameterType_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:3001:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:3001:4: (lv_parameterType_2_0= ruleJvmTypeReference )
            // InternalEketal.g:3002:5: lv_parameterType_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_parameterType_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:3019:3: ( (lv_varArgs_3_0= '...' ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==54) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalEketal.g:3020:4: (lv_varArgs_3_0= '...' )
                    {
                    // InternalEketal.g:3020:4: (lv_varArgs_3_0= '...' )
                    // InternalEketal.g:3021:5: lv_varArgs_3_0= '...'
                    {
                    lv_varArgs_3_0=(Token)match(input,54,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_varArgs_3_0, grammarAccess.getFullJvmFormalParameterAccess().getVarArgsFullStopFullStopFullStopKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getFullJvmFormalParameterRule());
                      					}
                      					setWithLastConsumed(current, "varArgs", true, "...");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:3033:3: ( (lv_name_4_0= ruleValidID ) )
            // InternalEketal.g:3034:4: (lv_name_4_0= ruleValidID )
            {
            // InternalEketal.g:3034:4: (lv_name_4_0= ruleValidID )
            // InternalEketal.g:3035:5: lv_name_4_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_4_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXJSingleStatement"
    // InternalEketal.g:3056:1: entryRuleXJSingleStatement returns [EObject current=null] : iv_ruleXJSingleStatement= ruleXJSingleStatement EOF ;
    public final EObject entryRuleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSingleStatement = null;


        try {
            // InternalEketal.g:3056:58: (iv_ruleXJSingleStatement= ruleXJSingleStatement EOF )
            // InternalEketal.g:3057:2: iv_ruleXJSingleStatement= ruleXJSingleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSingleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSingleStatement=ruleXJSingleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSingleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSingleStatement"


    // $ANTLR start "ruleXJSingleStatement"
    // InternalEketal.g:3063:1: ruleXJSingleStatement returns [EObject current=null] : (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) ;
    public final EObject ruleXJSingleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_XJSemicolonStatement_0 = null;

        EObject this_XSwitchExpression_1 = null;

        EObject this_XIfExpression_2 = null;

        EObject this_XForLoopExpression_3 = null;

        EObject this_XBasicForLoopExpression_4 = null;

        EObject this_XWhileExpression_5 = null;

        EObject this_XJTryWithResourcesStatement_6 = null;

        EObject this_XTryCatchFinallyExpression_7 = null;

        EObject this_XSynchronizedExpression_8 = null;

        EObject this_XJEmptyStatement_9 = null;



        	enterRule();

        try {
            // InternalEketal.g:3069:2: ( (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement ) )
            // InternalEketal.g:3070:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            {
            // InternalEketal.g:3070:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )
            int alt55=10;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalEketal.g:3071:3: this_XJSemicolonStatement_0= ruleXJSemicolonStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJSemicolonStatementParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJSemicolonStatement_0=ruleXJSemicolonStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJSemicolonStatement_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:3080:3: this_XSwitchExpression_1= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSwitchExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_1=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3089:3: this_XIfExpression_2= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXIfExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_2=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3098:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    {
                    // InternalEketal.g:3098:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression )
                    // InternalEketal.g:3099:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXForLoopExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_3=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEketal.g:3122:3: this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXBasicForLoopExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_4=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:3131:3: this_XWhileExpression_5= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXWhileExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_5=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:3140:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    {
                    // InternalEketal.g:3140:3: ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement )
                    // InternalEketal.g:3141:4: ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJTryWithResourcesStatementParserRuleCall_6());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJTryWithResourcesStatement_6=ruleXJTryWithResourcesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJTryWithResourcesStatement_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEketal.g:3162:3: this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXTryCatchFinallyExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_7=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:3171:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    {
                    // InternalEketal.g:3171:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression )
                    // InternalEketal.g:3172:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXSynchronizedExpressionParserRuleCall_8());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_8=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:3189:3: this_XJEmptyStatement_9= ruleXJEmptyStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXJSingleStatementAccess().getXJEmptyStatementParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJEmptyStatement_9=ruleXJEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJEmptyStatement_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSingleStatement"


    // $ANTLR start "entryRuleXJSemicolonStatement"
    // InternalEketal.g:3201:1: entryRuleXJSemicolonStatement returns [EObject current=null] : iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF ;
    public final EObject entryRuleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSemicolonStatement = null;


        try {
            // InternalEketal.g:3201:61: (iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF )
            // InternalEketal.g:3202:2: iv_ruleXJSemicolonStatement= ruleXJSemicolonStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSemicolonStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSemicolonStatement=ruleXJSemicolonStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSemicolonStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSemicolonStatement"


    // $ANTLR start "ruleXJSemicolonStatement"
    // InternalEketal.g:3208:1: ruleXJSemicolonStatement returns [EObject current=null] : ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) ;
    public final EObject ruleXJSemicolonStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_2_0=null;
        EObject lv_expression_1_1 = null;

        EObject lv_expression_1_2 = null;

        EObject lv_expression_1_3 = null;

        EObject lv_expression_1_4 = null;

        EObject lv_expression_1_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:3214:2: ( ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? ) )
            // InternalEketal.g:3215:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            {
            // InternalEketal.g:3215:2: ( () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )? )
            // InternalEketal.g:3216:3: () ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) ) ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            {
            // InternalEketal.g:3216:3: ()
            // InternalEketal.g:3217:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSemicolonStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3223:3: ( ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) ) )
            // InternalEketal.g:3224:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            {
            // InternalEketal.g:3224:4: ( (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression ) )
            // InternalEketal.g:3225:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            {
            // InternalEketal.g:3225:5: (lv_expression_1_1= ruleXJBranchingStatement | lv_expression_1_2= ruleXExpressionOrVarDeclaration | lv_expression_1_3= ruleXDoWhileExpression | lv_expression_1_4= ruleXReturnExpression | lv_expression_1_5= ruleXThrowExpression )
            int alt56=5;
            switch ( input.LA(1) ) {
            case 55:
            case 56:
                {
                alt56=1;
                }
                break;
            case RULE_ID:
            case RULE_STRING:
            case RULE_INT:
            case RULE_CHARACTER:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 21:
            case 25:
            case 31:
            case 40:
            case 51:
            case 52:
            case 53:
            case 69:
            case 90:
            case 91:
            case 94:
            case 95:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
                {
                alt56=2;
                }
                break;
            case 74:
                {
                alt56=3;
                }
                break;
            case 104:
                {
                alt56=4;
                }
                break;
            case 103:
                {
                alt56=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalEketal.g:3226:6: lv_expression_1_1= ruleXJBranchingStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXJBranchingStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_1_1=ruleXJBranchingStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_1,
                      							"jbase.Jbase.XJBranchingStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:3242:6: lv_expression_1_2= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXExpressionOrVarDeclarationParserRuleCall_1_0_1());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_1_2=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_2,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:3258:6: lv_expression_1_3= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXDoWhileExpressionParserRuleCall_1_0_2());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_1_3=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_3,
                      							"jbase.Jbase.XDoWhileExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:3274:6: lv_expression_1_4= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXReturnExpressionParserRuleCall_1_0_3());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_1_4=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_4,
                      							"org.eclipse.xtext.xbase.Xbase.XReturnExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:3290:6: lv_expression_1_5= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJSemicolonStatementAccess().getExpressionXThrowExpressionParserRuleCall_1_0_4());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_1_5=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJSemicolonStatementRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_5,
                      							"org.eclipse.xtext.xbase.Xbase.XThrowExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalEketal.g:3308:3: ( ( ';' )=> (lv_semicolon_2_0= ';' ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==16) ) {
                int LA57_1 = input.LA(2);

                if ( (synpred9_InternalEketal()) ) {
                    alt57=1;
                }
            }
            switch (alt57) {
                case 1 :
                    // InternalEketal.g:3309:4: ( ';' )=> (lv_semicolon_2_0= ';' )
                    {
                    // InternalEketal.g:3310:4: (lv_semicolon_2_0= ';' )
                    // InternalEketal.g:3311:5: lv_semicolon_2_0= ';'
                    {
                    lv_semicolon_2_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_2_0, grammarAccess.getXJSemicolonStatementAccess().getSemicolonSemicolonKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJSemicolonStatementRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_2_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSemicolonStatement"


    // $ANTLR start "entryRuleXJEmptyStatement"
    // InternalEketal.g:3327:1: entryRuleXJEmptyStatement returns [EObject current=null] : iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF ;
    public final EObject entryRuleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJEmptyStatement = null;


        try {
            // InternalEketal.g:3327:57: (iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF )
            // InternalEketal.g:3328:2: iv_ruleXJEmptyStatement= ruleXJEmptyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJEmptyStatement=ruleXJEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJEmptyStatement"


    // $ANTLR start "ruleXJEmptyStatement"
    // InternalEketal.g:3334:1: ruleXJEmptyStatement returns [EObject current=null] : ( () ( (lv_semicolon_1_0= ';' ) ) ) ;
    public final EObject ruleXJEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_semicolon_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:3340:2: ( ( () ( (lv_semicolon_1_0= ';' ) ) ) )
            // InternalEketal.g:3341:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            {
            // InternalEketal.g:3341:2: ( () ( (lv_semicolon_1_0= ';' ) ) )
            // InternalEketal.g:3342:3: () ( (lv_semicolon_1_0= ';' ) )
            {
            // InternalEketal.g:3342:3: ()
            // InternalEketal.g:3343:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJEmptyStatementAccess().getXJSemicolonStatementAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3349:3: ( (lv_semicolon_1_0= ';' ) )
            // InternalEketal.g:3350:4: (lv_semicolon_1_0= ';' )
            {
            // InternalEketal.g:3350:4: (lv_semicolon_1_0= ';' )
            // InternalEketal.g:3351:5: lv_semicolon_1_0= ';'
            {
            lv_semicolon_1_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_semicolon_1_0, grammarAccess.getXJEmptyStatementAccess().getSemicolonSemicolonKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXJEmptyStatementRule());
              					}
              					setWithLastConsumed(current, "semicolon", lv_semicolon_1_0, ";");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJEmptyStatement"


    // $ANTLR start "entryRuleXJBranchingStatement"
    // InternalEketal.g:3367:1: entryRuleXJBranchingStatement returns [EObject current=null] : iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF ;
    public final EObject entryRuleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJBranchingStatement = null;


        try {
            // InternalEketal.g:3367:61: (iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF )
            // InternalEketal.g:3368:2: iv_ruleXJBranchingStatement= ruleXJBranchingStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJBranchingStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJBranchingStatement=ruleXJBranchingStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJBranchingStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJBranchingStatement"


    // $ANTLR start "ruleXJBranchingStatement"
    // InternalEketal.g:3374:1: ruleXJBranchingStatement returns [EObject current=null] : ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) ;
    public final EObject ruleXJBranchingStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;


        	enterRule();

        try {
            // InternalEketal.g:3380:2: ( ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) ) )
            // InternalEketal.g:3381:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            {
            // InternalEketal.g:3381:2: ( ( () otherlv_1= 'continue' ) | ( () otherlv_3= 'break' ) )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==55) ) {
                alt58=1;
            }
            else if ( (LA58_0==56) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalEketal.g:3382:3: ( () otherlv_1= 'continue' )
                    {
                    // InternalEketal.g:3382:3: ( () otherlv_1= 'continue' )
                    // InternalEketal.g:3383:4: () otherlv_1= 'continue'
                    {
                    // InternalEketal.g:3383:4: ()
                    // InternalEketal.g:3384:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJContinueStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_1=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXJBranchingStatementAccess().getContinueKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:3396:3: ( () otherlv_3= 'break' )
                    {
                    // InternalEketal.g:3396:3: ( () otherlv_3= 'break' )
                    // InternalEketal.g:3397:4: () otherlv_3= 'break'
                    {
                    // InternalEketal.g:3397:4: ()
                    // InternalEketal.g:3398:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXJBranchingStatementAccess().getXJBreakStatementAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getXJBranchingStatementAccess().getBreakKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJBranchingStatement"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalEketal.g:3413:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalEketal.g:3413:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalEketal.g:3414:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalEketal.g:3420:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3426:2: ( ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' ) )
            // InternalEketal.g:3427:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            {
            // InternalEketal.g:3427:2: ( () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}' )
            // InternalEketal.g:3428:3: () otherlv_1= '{' ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )* otherlv_3= '}'
            {
            // InternalEketal.g:3428:3: ()
            // InternalEketal.g:3429:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,21,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:3439:3: ( (lv_expressions_2_0= ruleXJStatementOrBlock ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( ((LA59_0>=RULE_ID && LA59_0<=RULE_STRING)||(LA59_0>=RULE_INT && LA59_0<=RULE_DECIMAL)||LA59_0==16||LA59_0==21||LA59_0==25||LA59_0==31||LA59_0==34||LA59_0==40||(LA59_0>=51 && LA59_0<=53)||(LA59_0>=55 && LA59_0<=56)||LA59_0==69||LA59_0==71||(LA59_0>=73 && LA59_0<=75)||LA59_0==78||LA59_0==81||(LA59_0>=90 && LA59_0<=91)||(LA59_0>=94 && LA59_0<=95)||(LA59_0>=97 && LA59_0<=104)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEketal.g:3440:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:3440:4: (lv_expressions_2_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:3441:5: lv_expressions_2_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXJStatementOrBlockParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_expressions_2_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_2_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            otherlv_3=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalEketal.g:3466:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalEketal.g:3466:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalEketal.g:3467:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalEketal.g:3473:1: ruleXVariableDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;

        EObject lv_additionalVariables_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3479:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* ) )
            // InternalEketal.g:3480:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            {
            // InternalEketal.g:3480:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )* )
            // InternalEketal.g:3481:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) ) (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )? ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            {
            // InternalEketal.g:3481:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) ) )
            // InternalEketal.g:3482:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            {
            // InternalEketal.g:3502:4: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) )
            // InternalEketal.g:3503:5: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) )
            {
            // InternalEketal.g:3503:5: ()
            // InternalEketal.g:3504:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXVariableDeclarationAccess().getXJVariableDeclarationAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalEketal.g:3510:5: ( (lv_final_1_0= 'final' ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==53) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalEketal.g:3511:6: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:3511:6: (lv_final_1_0= 'final' )
                    // InternalEketal.g:3512:7: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,53,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_final_1_0, grammarAccess.getXVariableDeclarationAccess().getFinalFinalKeyword_0_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "final", true, "final");
                      						
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:3524:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:3525:6: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:3525:6: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:3526:7: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"type",
              								lv_type_2_0,
              								"jbase.Jbase.JvmTypeReference");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:3543:5: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:3544:6: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:3544:6: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:3545:7: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_50);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
              							}
              							set(
              								current,
              								"name",
              								lv_name_3_0,
              								"org.eclipse.xtext.xbase.Xtype.ValidID");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:3564:3: (otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==19) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalEketal.g:3565:4: otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,19,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_1_0());
                      			
                    }
                    // InternalEketal.g:3569:4: ( (lv_right_5_0= ruleXExpression ) )
                    // InternalEketal.g:3570:5: (lv_right_5_0= ruleXExpression )
                    {
                    // InternalEketal.g:3570:5: (lv_right_5_0= ruleXExpression )
                    // InternalEketal.g:3571:6: lv_right_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_right_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_5_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalEketal.g:3589:3: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==26) ) {
                    int LA62_2 = input.LA(2);

                    if ( (LA62_2==RULE_ID) ) {
                        int LA62_3 = input.LA(3);

                        if ( (synpred11_InternalEketal()) ) {
                            alt62=1;
                        }


                    }


                }


                switch (alt62) {
            	case 1 :
            	    // InternalEketal.g:3590:4: ( ( ',' )=>otherlv_6= ',' ) ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    {
            	    // InternalEketal.g:3590:4: ( ( ',' )=>otherlv_6= ',' )
            	    // InternalEketal.g:3591:5: ( ',' )=>otherlv_6= ','
            	    {
            	    otherlv_6=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getCommaKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalEketal.g:3597:4: ( (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration ) )
            	    // InternalEketal.g:3598:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    {
            	    // InternalEketal.g:3598:5: (lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration )
            	    // InternalEketal.g:3599:6: lv_additionalVariables_7_0= ruleXJAdditionalXVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getAdditionalVariablesXJAdditionalXVariableDeclarationParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_additionalVariables_7_0=ruleXJAdditionalXVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"additionalVariables",
            	      							lv_additionalVariables_7_0,
            	      							"jbase.Jbase.XJAdditionalXVariableDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:3621:1: entryRuleXJAdditionalXVariableDeclaration returns [EObject current=null] : iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF ;
    public final EObject entryRuleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJAdditionalXVariableDeclaration = null;


        try {
            // InternalEketal.g:3621:73: (iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF )
            // InternalEketal.g:3622:2: iv_ruleXJAdditionalXVariableDeclaration= ruleXJAdditionalXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJAdditionalXVariableDeclaration=ruleXJAdditionalXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJAdditionalXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJAdditionalXVariableDeclaration"


    // $ANTLR start "ruleXJAdditionalXVariableDeclaration"
    // InternalEketal.g:3628:1: ruleXJAdditionalXVariableDeclaration returns [EObject current=null] : ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXJAdditionalXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3634:2: ( ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? ) )
            // InternalEketal.g:3635:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            {
            // InternalEketal.g:3635:2: ( () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )? )
            // InternalEketal.g:3636:3: () ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            {
            // InternalEketal.g:3636:3: ()
            // InternalEketal.g:3637:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJAdditionalXVariableDeclarationAccess().getXJAdditionalXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:3643:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:3644:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:3644:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:3645:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:3662:3: (otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==19) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEketal.g:3663:4: otherlv_2= '=' ( (lv_right_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,19,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXJAdditionalXVariableDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalEketal.g:3667:4: ( (lv_right_3_0= ruleXExpression ) )
                    // InternalEketal.g:3668:5: (lv_right_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:3668:5: (lv_right_3_0= ruleXExpression )
                    // InternalEketal.g:3669:6: lv_right_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJAdditionalXVariableDeclarationAccess().getRightXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJAdditionalXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJAdditionalXVariableDeclaration"


    // $ANTLR start "entryRuleXAssignment"
    // InternalEketal.g:3691:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalEketal.g:3691:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalEketal.g:3692:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalEketal.g:3698:1: ruleXAssignment returns [EObject current=null] : ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_value_13_0 = null;

        EObject this_XOrExpression_14 = null;

        EObject lv_then_17_0 = null;

        EObject lv_else_19_0 = null;

        EObject lv_rightOperand_22_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:3704:2: ( ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) ) )
            // InternalEketal.g:3705:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            {
            // InternalEketal.g:3705:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )
            int alt66=3;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalEketal.g:3706:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:3706:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
                    // InternalEketal.g:3707:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:3707:4: ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) )
                    // InternalEketal.g:3708:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    {
                    // InternalEketal.g:3735:5: ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign )
                    // InternalEketal.g:3736:6: () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign
                    {
                    // InternalEketal.g:3736:6: ()
                    // InternalEketal.g:3737:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXJAssignmentAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:3743:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:3744:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:3744:7: ( ruleFeatureCallID )
                    // InternalEketal.g:3745:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_54);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_2, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_2());
                      					
                    }
                    // InternalEketal.g:3763:6: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:3764:7: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:3764:7: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:3765:8: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_3_0());
                      							
                    }
                    pushFollow(FOLLOW_33);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      								}
                      								add(
                      									current,
                      									"indexes",
                      									lv_indexes_3_0,
                      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,41,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_4());
                      					
                    }
                    // InternalEketal.g:3786:6: (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==39) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalEketal.g:3787:7: otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXAssignmentAccess().getLeftSquareBracketKeyword_0_0_0_5_0());
                    	      						
                    	    }
                    	    // InternalEketal.g:3791:7: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:3792:8: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:3792:8: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:3793:9: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXAssignmentAccess().getIndexesXExpressionParserRuleCall_0_0_0_5_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"indexes",
                    	      										lv_indexes_6_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,41,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getXAssignmentAccess().getRightSquareBracketKeyword_0_0_0_5_2());
                    	      						
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_0_0_6());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3824:4: ( (lv_value_9_0= ruleXAssignment ) )
                    // InternalEketal.g:3825:5: (lv_value_9_0= ruleXAssignment )
                    {
                    // InternalEketal.g:3825:5: (lv_value_9_0= ruleXAssignment )
                    // InternalEketal.g:3826:6: lv_value_9_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_9_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_9_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:3845:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    {
                    // InternalEketal.g:3845:3: ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) )
                    // InternalEketal.g:3846:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) )
                    {
                    // InternalEketal.g:3846:4: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
                    // InternalEketal.g:3847:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    {
                    // InternalEketal.g:3858:5: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
                    // InternalEketal.g:3859:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
                    {
                    // InternalEketal.g:3859:6: ()
                    // InternalEketal.g:3860:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAssignmentAccess().getXAssignmentAction_1_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:3866:6: ( ( ruleFeatureCallID ) )
                    // InternalEketal.g:3867:7: ( ruleFeatureCallID )
                    {
                    // InternalEketal.g:3867:7: ( ruleFeatureCallID )
                    // InternalEketal.g:3868:8: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXAssignmentRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_55);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_1_0_0_2());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:3891:4: ( (lv_value_13_0= ruleXAssignment ) )
                    // InternalEketal.g:3892:5: (lv_value_13_0= ruleXAssignment )
                    {
                    // InternalEketal.g:3892:5: (lv_value_13_0= ruleXAssignment )
                    // InternalEketal.g:3893:6: lv_value_13_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_13_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_13_0,
                      							"jbase.Jbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:3912:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    {
                    // InternalEketal.g:3912:3: (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? )
                    // InternalEketal.g:3913:4: this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_56);
                    this_XOrExpression_14=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:3921:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?
                    int alt65=3;
                    alt65 = dfa65.predict(input);
                    switch (alt65) {
                        case 1 :
                            // InternalEketal.g:3922:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            {
                            // InternalEketal.g:3922:5: ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) )
                            // InternalEketal.g:3923:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) )
                            {
                            // InternalEketal.g:3923:6: ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) )
                            // InternalEketal.g:3924:7: ( ( () '?' ) )=> ( () otherlv_16= '?' )
                            {
                            // InternalEketal.g:3930:7: ( () otherlv_16= '?' )
                            // InternalEketal.g:3931:8: () otherlv_16= '?'
                            {
                            // InternalEketal.g:3931:8: ()
                            // InternalEketal.g:3932:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXJConditionalExpressionIfAction_2_1_0_0_0_0(),
                              										current);
                              								
                            }

                            }

                            otherlv_16=(Token)match(input,57,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(otherlv_16, grammarAccess.getXAssignmentAccess().getQuestionMarkKeyword_2_1_0_0_0_1());
                              							
                            }

                            }


                            }

                            // InternalEketal.g:3944:6: ( (lv_then_17_0= ruleXExpression ) )
                            // InternalEketal.g:3945:7: (lv_then_17_0= ruleXExpression )
                            {
                            // InternalEketal.g:3945:7: (lv_then_17_0= ruleXExpression )
                            // InternalEketal.g:3946:8: lv_then_17_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getThenXExpressionParserRuleCall_2_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_then_17_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"then",
                              									lv_then_17_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_18=(Token)match(input,23,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getXAssignmentAccess().getColonKeyword_2_1_0_2());
                              					
                            }
                            // InternalEketal.g:3967:6: ( (lv_else_19_0= ruleXExpression ) )
                            // InternalEketal.g:3968:7: (lv_else_19_0= ruleXExpression )
                            {
                            // InternalEketal.g:3968:7: (lv_else_19_0= ruleXExpression )
                            // InternalEketal.g:3969:8: lv_else_19_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getElseXExpressionParserRuleCall_2_1_0_3_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_19_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"else",
                              									lv_else_19_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:3988:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            {
                            // InternalEketal.g:3988:5: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) )
                            // InternalEketal.g:3989:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            {
                            // InternalEketal.g:3989:6: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalEketal.g:3990:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalEketal.g:4000:7: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalEketal.g:4001:8: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalEketal.g:4001:8: ()
                            // InternalEketal.g:4002:9: 
                            {
                            if ( state.backtracking==0 ) {

                              									current = forceCreateModelElementAndSet(
                              										grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_2_1_1_0_0_0(),
                              										current);
                              								
                            }

                            }

                            // InternalEketal.g:4008:8: ( ( ruleOpMultiAssign ) )
                            // InternalEketal.g:4009:9: ( ruleOpMultiAssign )
                            {
                            // InternalEketal.g:4009:9: ( ruleOpMultiAssign )
                            // InternalEketal.g:4010:10: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              										if (current==null) {
                              											current = createModelElement(grammarAccess.getXAssignmentRule());
                              										}
                              									
                            }
                            if ( state.backtracking==0 ) {

                              										newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_2_1_1_0_0_1_0());
                              									
                            }
                            pushFollow(FOLLOW_51);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										afterParserOrEnumRuleCall();
                              									
                            }

                            }


                            }


                            }


                            }

                            // InternalEketal.g:4026:6: ( (lv_rightOperand_22_0= ruleXAssignment ) )
                            // InternalEketal.g:4027:7: (lv_rightOperand_22_0= ruleXAssignment )
                            {
                            // InternalEketal.g:4027:7: (lv_rightOperand_22_0= ruleXAssignment )
                            // InternalEketal.g:4028:8: lv_rightOperand_22_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_22_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              								}
                              								set(
                              									current,
                              									"rightOperand",
                              									lv_rightOperand_22_0,
                              									"jbase.Jbase.XAssignment");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalEketal.g:4052:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalEketal.g:4052:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalEketal.g:4053:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalEketal.g:4059:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:4065:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalEketal.g:4066:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalEketal.g:4066:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | kw= '&=' | kw= '|=' | kw= '^=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt68=10;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt68=1;
                }
                break;
            case 59:
                {
                alt68=2;
                }
                break;
            case 60:
                {
                alt68=3;
                }
                break;
            case 61:
                {
                alt68=4;
                }
                break;
            case 62:
                {
                alt68=5;
                }
                break;
            case 63:
                {
                alt68=6;
                }
                break;
            case 64:
                {
                alt68=7;
                }
                break;
            case 65:
                {
                alt68=8;
                }
                break;
            case 66:
                {
                alt68=9;
                }
                break;
            case 67:
                {
                alt68=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // InternalEketal.g:4067:3: kw= '+='
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:4073:3: kw= '-='
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:4079:3: kw= '*='
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:4085:3: kw= '/='
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:4091:3: kw= '%='
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:4097:3: kw= '&='
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalEketal.g:4103:3: kw= '|='
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalEketal.g:4109:3: kw= '^='
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getCircumflexAccentEqualsSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalEketal.g:4115:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:4115:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalEketal.g:4116:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,66,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_0());
                      			
                    }
                    kw=(Token)match(input,66,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_8_1());
                      			
                    }
                    kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_8_2());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEketal.g:4133:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalEketal.g:4133:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalEketal.g:4134:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,67,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_0());
                      			
                    }
                    // InternalEketal.g:4139:4: (kw= '>' )?
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==67) ) {
                        alt67=1;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalEketal.g:4140:5: kw= '>'
                            {
                            kw=(Token)match(input,67,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_9_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_9_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:4156:1: entryRuleXJFeatureCallWithArrayAccess returns [EObject current=null] : iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF ;
    public final EObject entryRuleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJFeatureCallWithArrayAccess = null;


        try {
            // InternalEketal.g:4156:69: (iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF )
            // InternalEketal.g:4157:2: iv_ruleXJFeatureCallWithArrayAccess= ruleXJFeatureCallWithArrayAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJFeatureCallWithArrayAccess=ruleXJFeatureCallWithArrayAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJFeatureCallWithArrayAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJFeatureCallWithArrayAccess"


    // $ANTLR start "ruleXJFeatureCallWithArrayAccess"
    // InternalEketal.g:4163:1: ruleXJFeatureCallWithArrayAccess returns [EObject current=null] : (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) ;
    public final EObject ruleXJFeatureCallWithArrayAccess() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_XFeatureCall_0 = null;

        EObject lv_indexes_3_0 = null;

        EObject lv_indexes_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4169:2: ( (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? ) )
            // InternalEketal.g:4170:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            {
            // InternalEketal.g:4170:2: (this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )? )
            // InternalEketal.g:4171:3: this_XFeatureCall_0= ruleXFeatureCall ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_47);
            this_XFeatureCall_0=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:4179:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalEketal.g:4180:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    {
                    // InternalEketal.g:4204:4: ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* )
                    // InternalEketal.g:4205:5: () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    {
                    // InternalEketal.g:4205:5: ()
                    // InternalEketal.g:4206:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXJFeatureCallWithArrayAccessAccess().getXJArrayAccessExpressionArrayAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_2=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_1());
                      				
                    }
                    // InternalEketal.g:4216:5: ( (lv_indexes_3_0= ruleXExpression ) )
                    // InternalEketal.g:4217:6: (lv_indexes_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:4217:6: (lv_indexes_3_0= ruleXExpression )
                    // InternalEketal.g:4218:7: lv_indexes_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_33);
                    lv_indexes_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                      							}
                      							add(
                      								current,
                      								"indexes",
                      								lv_indexes_3_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,41,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_3());
                      				
                    }
                    // InternalEketal.g:4239:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*
                    loop69:
                    do {
                        int alt69=2;
                        alt69 = dfa69.predict(input);
                        switch (alt69) {
                    	case 1 :
                    	    // InternalEketal.g:4240:6: ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']'
                    	    {
                    	    // InternalEketal.g:4240:6: ( ( '[' )=>otherlv_5= '[' )
                    	    // InternalEketal.g:4241:7: ( '[' )=>otherlv_5= '['
                    	    {
                    	    otherlv_5=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getLeftSquareBracketKeyword_1_0_4_0());
                    	      						
                    	    }

                    	    }

                    	    // InternalEketal.g:4247:6: ( (lv_indexes_6_0= ruleXExpression ) )
                    	    // InternalEketal.g:4248:7: (lv_indexes_6_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:4248:7: (lv_indexes_6_0= ruleXExpression )
                    	    // InternalEketal.g:4249:8: lv_indexes_6_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getXJFeatureCallWithArrayAccessAccess().getIndexesXExpressionParserRuleCall_1_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_33);
                    	    lv_indexes_6_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getXJFeatureCallWithArrayAccessRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"indexes",
                    	      									lv_indexes_6_0,
                    	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,41,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getXJFeatureCallWithArrayAccessAccess().getRightSquareBracketKeyword_1_0_4_2());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJFeatureCallWithArrayAccess"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalEketal.g:4277:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalEketal.g:4277:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalEketal.g:4278:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalEketal.g:4284:1: ruleXFeatureCall returns [EObject current=null] : ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token lv_explicitOperationCall_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_featureCallArguments_3_0 = null;

        EObject lv_featureCallArguments_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4290:2: ( ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? ) )
            // InternalEketal.g:4291:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            {
            // InternalEketal.g:4291:2: ( () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )? )
            // InternalEketal.g:4292:3: () ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            {
            // InternalEketal.g:4292:3: ()
            // InternalEketal.g:4293:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:4299:3: ( ( ruleIdOrSuper ) )
            // InternalEketal.g:4300:4: ( ruleIdOrSuper )
            {
            // InternalEketal.g:4300:4: ( ruleIdOrSuper )
            // InternalEketal.g:4301:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_60);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:4315:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalEketal.g:4316:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')'
                    {
                    // InternalEketal.g:4316:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) )
                    // InternalEketal.g:4317:5: ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' )
                    {
                    // InternalEketal.g:4321:5: (lv_explicitOperationCall_2_0= '(' )
                    // InternalEketal.g:4322:6: lv_explicitOperationCall_2_0= '('
                    {
                    lv_explicitOperationCall_2_0=(Token)match(input,25,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_2_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4334:4: ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )?
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( ((LA72_0>=RULE_ID && LA72_0<=RULE_STRING)||(LA72_0>=RULE_INT && LA72_0<=RULE_DECIMAL)||LA72_0==21||LA72_0==25||LA72_0==31||LA72_0==40||(LA72_0>=51 && LA72_0<=52)||LA72_0==69||(LA72_0>=90 && LA72_0<=91)||(LA72_0>=94 && LA72_0<=95)||(LA72_0>=97 && LA72_0<=102)) ) {
                        alt72=1;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalEketal.g:4335:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:4335:5: ( (lv_featureCallArguments_3_0= ruleXExpression ) )
                            // InternalEketal.g:4336:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            {
                            // InternalEketal.g:4336:6: (lv_featureCallArguments_3_0= ruleXExpression )
                            // InternalEketal.g:4337:7: lv_featureCallArguments_3_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_17);
                            lv_featureCallArguments_3_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_3_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4354:5: (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )*
                            loop71:
                            do {
                                int alt71=2;
                                int LA71_0 = input.LA(1);

                                if ( (LA71_0==26) ) {
                                    alt71=1;
                                }


                                switch (alt71) {
                            	case 1 :
                            	    // InternalEketal.g:4355:6: otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    {
                            	    otherlv_4=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4359:6: ( (lv_featureCallArguments_5_0= ruleXExpression ) )
                            	    // InternalEketal.g:4360:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4360:7: (lv_featureCallArguments_5_0= ruleXExpression )
                            	    // InternalEketal.g:4361:8: lv_featureCallArguments_5_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_2_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_featureCallArguments_5_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"featureCallArguments",
                            	      									lv_featureCallArguments_5_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop71;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalEketal.g:4389:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalEketal.g:4389:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalEketal.g:4390:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalEketal.g:4396:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_explicitTypeArguments_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4402:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? ) )
            // InternalEketal.g:4403:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            {
            // InternalEketal.g:4403:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )? )
            // InternalEketal.g:4404:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            {
            // InternalEketal.g:4404:3: ()
            // InternalEketal.g:4405:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXJConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalEketal.g:4415:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:4416:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:4416:4: ( ruleQualifiedName )
            // InternalEketal.g:4417:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_62);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:4431:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalEketal.g:4432:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>'
                    {
                    // InternalEketal.g:4432:4: ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) )
                    // InternalEketal.g:4433:5: ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' )
                    {
                    // InternalEketal.g:4437:5: (lv_explicitTypeArguments_3_0= '<' )
                    // InternalEketal.g:4438:6: lv_explicitTypeArguments_3_0= '<'
                    {
                    lv_explicitTypeArguments_3_0=(Token)match(input,66,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitTypeArguments_3_0, grammarAccess.getXConstructorCallAccess().getExplicitTypeArgumentsLessThanSignKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitTypeArguments", true, "<");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4450:4: ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==RULE_ID||LA75_0==57) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalEketal.g:4451:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            {
                            // InternalEketal.g:4451:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                            // InternalEketal.g:4452:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            {
                            // InternalEketal.g:4452:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                            // InternalEketal.g:4453:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"typeArguments",
                              								lv_typeArguments_4_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4470:5: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                            loop74:
                            do {
                                int alt74=2;
                                int LA74_0 = input.LA(1);

                                if ( (LA74_0==26) ) {
                                    alt74=1;
                                }


                                switch (alt74) {
                            	case 1 :
                            	    // InternalEketal.g:4471:6: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    {
                            	    otherlv_5=(Token)match(input,26,FOLLOW_65); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4475:6: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                            	    // InternalEketal.g:4476:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    {
                            	    // InternalEketal.g:4476:7: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                            	    // InternalEketal.g:4477:8: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_64);
                            	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"typeArguments",
                            	      									lv_typeArguments_6_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop74;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,67,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalEketal.g:4501:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalEketal.g:4502:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')'
                    {
                    // InternalEketal.g:4502:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalEketal.g:4503:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalEketal.g:4507:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalEketal.g:4508:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,25,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", true, "(");
                      					
                    }

                    }


                    }

                    // InternalEketal.g:4520:4: ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( ((LA78_0>=RULE_ID && LA78_0<=RULE_STRING)||(LA78_0>=RULE_INT && LA78_0<=RULE_DECIMAL)||LA78_0==21||LA78_0==25||LA78_0==31||LA78_0==40||(LA78_0>=51 && LA78_0<=52)||LA78_0==69||(LA78_0>=90 && LA78_0<=91)||(LA78_0>=94 && LA78_0<=95)||(LA78_0>=97 && LA78_0<=102)) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalEketal.g:4521:5: ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalEketal.g:4521:5: ( (lv_arguments_9_0= ruleXExpression ) )
                            // InternalEketal.g:4522:6: (lv_arguments_9_0= ruleXExpression )
                            {
                            // InternalEketal.g:4522:6: (lv_arguments_9_0= ruleXExpression )
                            // InternalEketal.g:4523:7: lv_arguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_17);
                            lv_arguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:4540:5: (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==26) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // InternalEketal.g:4541:6: otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_10, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:4545:6: ( (lv_arguments_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:4546:7: (lv_arguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:4546:7: (lv_arguments_11_0= ruleXExpression )
                            	    // InternalEketal.g:4547:8: lv_arguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_arguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"arguments",
                            	      									lv_arguments_11_0,
                            	      									"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXJArrayConstructorCall"
    // InternalEketal.g:4575:1: entryRuleXJArrayConstructorCall returns [EObject current=null] : iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF ;
    public final EObject entryRuleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayConstructorCall = null;


        try {
            // InternalEketal.g:4575:63: (iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF )
            // InternalEketal.g:4576:2: iv_ruleXJArrayConstructorCall= ruleXJArrayConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayConstructorCall=ruleXJArrayConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayConstructorCall"


    // $ANTLR start "ruleXJArrayConstructorCall"
    // InternalEketal.g:4582:1: ruleXJArrayConstructorCall returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) ;
    public final EObject ruleXJArrayConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_dimensions_3_0 = null;

        EObject lv_indexes_4_0 = null;

        EObject lv_dimensions_6_0 = null;

        EObject lv_indexes_7_0 = null;

        EObject lv_arrayLiteral_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4588:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? ) )
            // InternalEketal.g:4589:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            {
            // InternalEketal.g:4589:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )? )
            // InternalEketal.g:4590:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) ) ( (lv_indexes_4_0= ruleXExpression ) )? otherlv_5= ']' ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )* ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            {
            // InternalEketal.g:4590:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) ) )
            // InternalEketal.g:4591:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=> ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            {
            // InternalEketal.g:4607:4: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) ) )
            // InternalEketal.g:4608:5: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            {
            // InternalEketal.g:4608:5: ()
            // InternalEketal.g:4609:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJArrayConstructorCallAccess().getXJArrayConstructorCallAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,69,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJArrayConstructorCallAccess().getNewKeyword_0_0_1());
              				
            }
            // InternalEketal.g:4619:5: ( ( ruleQualifiedName ) )
            // InternalEketal.g:4620:6: ( ruleQualifiedName )
            {
            // InternalEketal.g:4620:6: ( ruleQualifiedName )
            // InternalEketal.g:4621:7: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJArrayConstructorCallRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getTypeJvmTypeCrossReference_0_0_2_0());
              						
            }
            pushFollow(FOLLOW_54);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            // InternalEketal.g:4635:5: ( (lv_dimensions_3_0= ruleXJArrayDimension ) )
            // InternalEketal.g:4636:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            {
            // InternalEketal.g:4636:6: (lv_dimensions_3_0= ruleXJArrayDimension )
            // InternalEketal.g:4637:7: lv_dimensions_3_0= ruleXJArrayDimension
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_66);
            lv_dimensions_3_0=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
              							}
              							add(
              								current,
              								"dimensions",
              								lv_dimensions_3_0,
              								"jbase.Jbase.XJArrayDimension");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:4656:3: ( (lv_indexes_4_0= ruleXExpression ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( ((LA80_0>=RULE_ID && LA80_0<=RULE_STRING)||(LA80_0>=RULE_INT && LA80_0<=RULE_DECIMAL)||LA80_0==21||LA80_0==25||LA80_0==31||LA80_0==40||(LA80_0>=51 && LA80_0<=52)||LA80_0==69||(LA80_0>=90 && LA80_0<=91)||(LA80_0>=94 && LA80_0<=95)||(LA80_0>=97 && LA80_0<=102)) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalEketal.g:4657:4: (lv_indexes_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:4657:4: (lv_indexes_4_0= ruleXExpression )
                    // InternalEketal.g:4658:5: lv_indexes_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_33);
                    lv_indexes_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"indexes",
                      						lv_indexes_4_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,41,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:4679:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*
            loop82:
            do {
                int alt82=2;
                alt82 = dfa82.predict(input);
                switch (alt82) {
            	case 1 :
            	    // InternalEketal.g:4680:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']'
            	    {
            	    // InternalEketal.g:4680:4: ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) )
            	    // InternalEketal.g:4681:5: ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension )
            	    {
            	    // InternalEketal.g:4685:5: (lv_dimensions_6_0= ruleXJArrayDimension )
            	    // InternalEketal.g:4686:6: lv_dimensions_6_0= ruleXJArrayDimension
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getDimensionsXJArrayDimensionParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_dimensions_6_0=ruleXJArrayDimension();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"dimensions",
            	      							lv_dimensions_6_0,
            	      							"jbase.Jbase.XJArrayDimension");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:4703:4: ( (lv_indexes_7_0= ruleXExpression ) )?
            	    int alt81=2;
            	    int LA81_0 = input.LA(1);

            	    if ( ((LA81_0>=RULE_ID && LA81_0<=RULE_STRING)||(LA81_0>=RULE_INT && LA81_0<=RULE_DECIMAL)||LA81_0==21||LA81_0==25||LA81_0==31||LA81_0==40||(LA81_0>=51 && LA81_0<=52)||LA81_0==69||(LA81_0>=90 && LA81_0<=91)||(LA81_0>=94 && LA81_0<=95)||(LA81_0>=97 && LA81_0<=102)) ) {
            	        alt81=1;
            	    }
            	    switch (alt81) {
            	        case 1 :
            	            // InternalEketal.g:4704:5: (lv_indexes_7_0= ruleXExpression )
            	            {
            	            // InternalEketal.g:4704:5: (lv_indexes_7_0= ruleXExpression )
            	            // InternalEketal.g:4705:6: lv_indexes_7_0= ruleXExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getIndexesXExpressionParserRuleCall_3_1_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_33);
            	            lv_indexes_7_0=ruleXExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
            	              						}
            	              						add(
            	              							current,
            	              							"indexes",
            	              							lv_indexes_7_0,
            	              							"org.eclipse.xtext.xbase.Xbase.XExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_8=(Token)match(input,41,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getXJArrayConstructorCallAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalEketal.g:4727:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalEketal.g:4728:4: ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    {
                    // InternalEketal.g:4732:4: (lv_arrayLiteral_9_0= ruleXJArrayLiteral )
                    // InternalEketal.g:4733:5: lv_arrayLiteral_9_0= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXJArrayConstructorCallAccess().getArrayLiteralXJArrayLiteralParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arrayLiteral_9_0=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXJArrayConstructorCallRule());
                      					}
                      					set(
                      						current,
                      						"arrayLiteral",
                      						lv_arrayLiteral_9_0,
                      						"jbase.Jbase.XJArrayLiteral");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayConstructorCall"


    // $ANTLR start "entryRuleXJArrayDimension"
    // InternalEketal.g:4754:1: entryRuleXJArrayDimension returns [EObject current=null] : iv_ruleXJArrayDimension= ruleXJArrayDimension EOF ;
    public final EObject entryRuleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayDimension = null;


        try {
            // InternalEketal.g:4754:57: (iv_ruleXJArrayDimension= ruleXJArrayDimension EOF )
            // InternalEketal.g:4755:2: iv_ruleXJArrayDimension= ruleXJArrayDimension EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayDimensionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayDimension=ruleXJArrayDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayDimension; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayDimension"


    // $ANTLR start "ruleXJArrayDimension"
    // InternalEketal.g:4761:1: ruleXJArrayDimension returns [EObject current=null] : ( () otherlv_1= '[' ) ;
    public final EObject ruleXJArrayDimension() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:4767:2: ( ( () otherlv_1= '[' ) )
            // InternalEketal.g:4768:2: ( () otherlv_1= '[' )
            {
            // InternalEketal.g:4768:2: ( () otherlv_1= '[' )
            // InternalEketal.g:4769:3: () otherlv_1= '['
            {
            // InternalEketal.g:4769:3: ()
            // InternalEketal.g:4770:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayDimensionAccess().getXJArrayDimensionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayDimensionAccess().getLeftSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayDimension"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalEketal.g:4784:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalEketal.g:4784:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalEketal.g:4785:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalEketal.g:4791:1: ruleXCastedExpression returns [EObject current=null] : ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_target_4_0 = null;

        EObject this_XPostfixOperation_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:4797:2: ( ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation ) )
            // InternalEketal.g:4798:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            {
            // InternalEketal.g:4798:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalEketal.g:4799:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    {
                    // InternalEketal.g:4799:3: ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) )
                    // InternalEketal.g:4800:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    {
                    // InternalEketal.g:4817:4: ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) )
                    // InternalEketal.g:4818:5: () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) )
                    {
                    // InternalEketal.g:4818:5: ()
                    // InternalEketal.g:4819:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getXCastedExpressionAccess().getXCastedExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getXCastedExpressionAccess().getLeftParenthesisKeyword_0_0_1());
                      				
                    }
                    // InternalEketal.g:4829:5: ( (lv_type_2_0= ruleJvmTypeReference ) )
                    // InternalEketal.g:4830:6: (lv_type_2_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:4830:6: (lv_type_2_0= ruleJvmTypeReference )
                    // InternalEketal.g:4831:7: lv_type_2_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_0_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_25);
                    lv_type_2_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_2_0,
                      								"jbase.Jbase.JvmTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,27,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXCastedExpressionAccess().getRightParenthesisKeyword_0_0_3());
                      				
                    }
                    // InternalEketal.g:4852:5: ( (lv_target_4_0= ruleXExpression ) )
                    // InternalEketal.g:4853:6: (lv_target_4_0= ruleXExpression )
                    {
                    // InternalEketal.g:4853:6: (lv_target_4_0= ruleXExpression )
                    // InternalEketal.g:4854:7: lv_target_4_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTargetXExpressionParserRuleCall_0_0_4_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_4_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"target",
                      								lv_target_4_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:4874:3: this_XPostfixOperation_5= ruleXPostfixOperation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XPostfixOperation_5=ruleXPostfixOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XPostfixOperation_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalEketal.g:4886:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalEketal.g:4886:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalEketal.g:4887:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalEketal.g:4893:1: ruleXPostfixOperation returns [EObject current=null] : ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_operand_2_0 = null;

        EObject this_XMemberFeatureCall_3 = null;

        EObject lv_indexes_8_0 = null;

        EObject lv_indexes_11_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:4899:2: ( ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) ) )
            // InternalEketal.g:4900:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            {
            // InternalEketal.g:4900:2: ( ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) ) | (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? ) )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==94) && (synpred26_InternalEketal())) {
                alt87=1;
            }
            else if ( (LA87_0==95) && (synpred26_InternalEketal())) {
                alt87=1;
            }
            else if ( ((LA87_0>=RULE_ID && LA87_0<=RULE_STRING)||(LA87_0>=RULE_INT && LA87_0<=RULE_DECIMAL)||LA87_0==21||LA87_0==25||(LA87_0>=51 && LA87_0<=52)||LA87_0==69||(LA87_0>=97 && LA87_0<=102)) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalEketal.g:4901:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    {
                    // InternalEketal.g:4901:3: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) ) )
                    // InternalEketal.g:4902:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    {
                    // InternalEketal.g:4902:4: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                    // InternalEketal.g:4903:5: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalEketal.g:4913:5: ( () ( ( ruleOpPostfix ) ) )
                    // InternalEketal.g:4914:6: () ( ( ruleOpPostfix ) )
                    {
                    // InternalEketal.g:4914:6: ()
                    // InternalEketal.g:4915:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXPostfixOperationAccess().getXJPrefixOperationAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    // InternalEketal.g:4921:6: ( ( ruleOpPostfix ) )
                    // InternalEketal.g:4922:7: ( ruleOpPostfix )
                    {
                    // InternalEketal.g:4922:7: ( ruleOpPostfix )
                    // InternalEketal.g:4923:8: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      								}
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_51);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }

                    // InternalEketal.g:4939:4: ( (lv_operand_2_0= ruleXMemberFeatureCall ) )
                    // InternalEketal.g:4940:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    {
                    // InternalEketal.g:4940:5: (lv_operand_2_0= ruleXMemberFeatureCall )
                    // InternalEketal.g:4941:6: lv_operand_2_0= ruleXMemberFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXPostfixOperationAccess().getOperandXMemberFeatureCallParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"jbase.Jbase.XMemberFeatureCall");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:4960:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    {
                    // InternalEketal.g:4960:3: (this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )? )
                    // InternalEketal.g:4961:4: this_XMemberFeatureCall_3= ruleXMemberFeatureCall ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_68);
                    this_XMemberFeatureCall_3=ruleXMemberFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XMemberFeatureCall_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalEketal.g:4969:4: ( ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) ) | ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) ) )?
                    int alt86=3;
                    switch ( input.LA(1) ) {
                        case 94:
                            {
                            int LA86_1 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt86=1;
                            }
                            }
                            break;
                        case 95:
                            {
                            int LA86_2 = input.LA(2);

                            if ( (synpred27_InternalEketal()) ) {
                                alt86=1;
                            }
                            }
                            break;
                        case 39:
                            {
                            int LA86_3 = input.LA(2);

                            if ( (synpred29_InternalEketal()) ) {
                                alt86=2;
                            }
                            }
                            break;
                    }

                    switch (alt86) {
                        case 1 :
                            // InternalEketal.g:4970:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            {
                            // InternalEketal.g:4970:5: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )
                            // InternalEketal.g:4971:6: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                            {
                            // InternalEketal.g:4981:6: ( () ( ( ruleOpPostfix ) ) )
                            // InternalEketal.g:4982:7: () ( ( ruleOpPostfix ) )
                            {
                            // InternalEketal.g:4982:7: ()
                            // InternalEketal.g:4983:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalEketal.g:4989:7: ( ( ruleOpPostfix ) )
                            // InternalEketal.g:4990:8: ( ruleOpPostfix )
                            {
                            // InternalEketal.g:4990:8: ( ruleOpPostfix )
                            // InternalEketal.g:4991:9: ruleOpPostfix
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXPostfixOperationRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            ruleOpPostfix();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:5008:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            {
                            // InternalEketal.g:5008:5: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* ) )
                            // InternalEketal.g:5009:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            {
                            // InternalEketal.g:5033:6: ( () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )* )
                            // InternalEketal.g:5034:7: () otherlv_7= '[' ( (lv_indexes_8_0= ruleXExpression ) ) otherlv_9= ']' ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            {
                            // InternalEketal.g:5034:7: ()
                            // InternalEketal.g:5035:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXPostfixOperationAccess().getXJArrayAccessExpressionArrayAction_1_1_1_0_0(),
                              									current);
                              							
                            }

                            }

                            otherlv_7=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_7, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_1());
                              						
                            }
                            // InternalEketal.g:5045:7: ( (lv_indexes_8_0= ruleXExpression ) )
                            // InternalEketal.g:5046:8: (lv_indexes_8_0= ruleXExpression )
                            {
                            // InternalEketal.g:5046:8: (lv_indexes_8_0= ruleXExpression )
                            // InternalEketal.g:5047:9: lv_indexes_8_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_2_0());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            lv_indexes_8_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                              									}
                              									add(
                              										current,
                              										"indexes",
                              										lv_indexes_8_0,
                              										"org.eclipse.xtext.xbase.Xbase.XExpression");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_9=(Token)match(input,41,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_9, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_3());
                              						
                            }
                            // InternalEketal.g:5068:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*
                            loop85:
                            do {
                                int alt85=2;
                                alt85 = dfa85.predict(input);
                                switch (alt85) {
                            	case 1 :
                            	    // InternalEketal.g:5069:8: ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']'
                            	    {
                            	    // InternalEketal.g:5069:8: ( ( '[' )=>otherlv_10= '[' )
                            	    // InternalEketal.g:5070:9: ( '[' )=>otherlv_10= '['
                            	    {
                            	    otherlv_10=(Token)match(input,39,FOLLOW_51); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									newLeafNode(otherlv_10, grammarAccess.getXPostfixOperationAccess().getLeftSquareBracketKeyword_1_1_1_0_4_0());
                            	      								
                            	    }

                            	    }

                            	    // InternalEketal.g:5076:8: ( (lv_indexes_11_0= ruleXExpression ) )
                            	    // InternalEketal.g:5077:9: (lv_indexes_11_0= ruleXExpression )
                            	    {
                            	    // InternalEketal.g:5077:9: (lv_indexes_11_0= ruleXExpression )
                            	    // InternalEketal.g:5078:10: lv_indexes_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getXPostfixOperationAccess().getIndexesXExpressionParserRuleCall_1_1_1_0_4_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_33);
                            	    lv_indexes_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getXPostfixOperationRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"indexes",
                            	      											lv_indexes_11_0,
                            	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }

                            	    otherlv_12=(Token)match(input,41,FOLLOW_47); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								newLeafNode(otherlv_12, grammarAccess.getXPostfixOperationAccess().getRightSquareBracketKeyword_1_1_1_0_4_2());
                            	      							
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalEketal.g:5108:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalEketal.g:5108:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalEketal.g:5109:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalEketal.g:5115:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_11=null;
        Token lv_explicitOperationCall_13_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject this_XPrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_arrayDimensions_2_0 = null;

        EObject lv_value_9_0 = null;

        EObject lv_memberCallArguments_14_0 = null;

        EObject lv_memberCallArguments_16_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5121:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* ) )
            // InternalEketal.g:5122:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            {
            // InternalEketal.g:5122:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )* )
            // InternalEketal.g:5123:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:5131:3: ( ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) ) | ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? ) )*
            loop92:
            do {
                int alt92=4;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==39) ) {
                    int LA92_2 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt92=1;
                    }


                }
                else if ( (LA92_0==38) ) {
                    int LA92_3 = input.LA(2);

                    if ( (synpred31_InternalEketal()) ) {
                        alt92=1;
                    }
                    else if ( (synpred32_InternalEketal()) ) {
                        alt92=2;
                    }
                    else if ( (synpred33_InternalEketal()) ) {
                        alt92=3;
                    }


                }


                switch (alt92) {
            	case 1 :
            	    // InternalEketal.g:5132:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    {
            	    // InternalEketal.g:5132:4: ( ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            	    // InternalEketal.g:5133:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )=> ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    {
            	    // InternalEketal.g:5145:5: ( () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class' )
            	    // InternalEketal.g:5146:6: () ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )* otherlv_3= '.' otherlv_4= 'class'
            	    {
            	    // InternalEketal.g:5146:6: ()
            	    // InternalEketal.g:5147:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMemberFeatureCallAccess().getXJClassObjectTypeExpressionAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:5153:6: ( (lv_arrayDimensions_2_0= ruleArrayBrackets ) )*
            	    loop88:
            	    do {
            	        int alt88=2;
            	        int LA88_0 = input.LA(1);

            	        if ( (LA88_0==39) ) {
            	            alt88=1;
            	        }


            	        switch (alt88) {
            	    	case 1 :
            	    	    // InternalEketal.g:5154:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    {
            	    	    // InternalEketal.g:5154:7: (lv_arrayDimensions_2_0= ruleArrayBrackets )
            	    	    // InternalEketal.g:5155:8: lv_arrayDimensions_2_0= ruleArrayBrackets
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getArrayDimensionsArrayBracketsParserRuleCall_1_0_0_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FOLLOW_70);
            	    	    lv_arrayDimensions_2_0=ruleArrayBrackets();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"arrayDimensions",
            	    	      									lv_arrayDimensions_2_0,
            	    	      									"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop88;
            	        }
            	    } while (true);

            	    otherlv_3=(Token)match(input,38,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_3, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_2());
            	      					
            	    }
            	    otherlv_4=(Token)match(input,70,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_4, grammarAccess.getXMemberFeatureCallAccess().getClassKeyword_1_0_0_3());
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:5183:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    {
            	    // InternalEketal.g:5183:4: ( ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) )
            	    // InternalEketal.g:5184:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) )
            	    {
            	    // InternalEketal.g:5184:5: ( ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalEketal.g:5185:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalEketal.g:5197:6: ( () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalEketal.g:5198:7: () otherlv_6= '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalEketal.g:5198:7: ()
            	    // InternalEketal.g:5199:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_6=(Token)match(input,38,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_6, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1());
            	      						
            	    }
            	    // InternalEketal.g:5209:7: ( ( ruleFeatureCallID ) )
            	    // InternalEketal.g:5210:8: ( ruleFeatureCallID )
            	    {
            	    // InternalEketal.g:5210:8: ( ruleFeatureCallID )
            	    // InternalEketal.g:5211:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_55);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_1_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5234:5: ( (lv_value_9_0= ruleXAssignment ) )
            	    // InternalEketal.g:5235:6: (lv_value_9_0= ruleXAssignment )
            	    {
            	    // InternalEketal.g:5235:6: (lv_value_9_0= ruleXAssignment )
            	    // InternalEketal.g:5236:7: lv_value_9_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_value_9_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_9_0,
            	      								"jbase.Jbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalEketal.g:5255:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    {
            	    // InternalEketal.g:5255:4: ( ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )? )
            	    // InternalEketal.g:5256:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) ) ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    {
            	    // InternalEketal.g:5256:5: ( ( ( () '.' ) )=> ( () otherlv_11= '.' ) )
            	    // InternalEketal.g:5257:6: ( ( () '.' ) )=> ( () otherlv_11= '.' )
            	    {
            	    // InternalEketal.g:5263:6: ( () otherlv_11= '.' )
            	    // InternalEketal.g:5264:7: () otherlv_11= '.'
            	    {
            	    // InternalEketal.g:5264:7: ()
            	    // InternalEketal.g:5265:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_2_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_11=(Token)match(input,38,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_2_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5277:5: ( ( ruleIdOrSuper ) )
            	    // InternalEketal.g:5278:6: ( ruleIdOrSuper )
            	    {
            	    // InternalEketal.g:5278:6: ( ruleIdOrSuper )
            	    // InternalEketal.g:5279:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_74);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:5293:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?
            	    int alt91=2;
            	    alt91 = dfa91.predict(input);
            	    switch (alt91) {
            	        case 1 :
            	            // InternalEketal.g:5294:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')'
            	            {
            	            // InternalEketal.g:5294:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) )
            	            // InternalEketal.g:5295:7: ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' )
            	            {
            	            // InternalEketal.g:5299:7: (lv_explicitOperationCall_13_0= '(' )
            	            // InternalEketal.g:5300:8: lv_explicitOperationCall_13_0= '('
            	            {
            	            lv_explicitOperationCall_13_0=(Token)match(input,25,FOLLOW_61); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_13_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_2_2_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", true, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalEketal.g:5312:6: ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )?
            	            int alt90=2;
            	            int LA90_0 = input.LA(1);

            	            if ( ((LA90_0>=RULE_ID && LA90_0<=RULE_STRING)||(LA90_0>=RULE_INT && LA90_0<=RULE_DECIMAL)||LA90_0==21||LA90_0==25||LA90_0==31||LA90_0==40||(LA90_0>=51 && LA90_0<=52)||LA90_0==69||(LA90_0>=90 && LA90_0<=91)||(LA90_0>=94 && LA90_0<=95)||(LA90_0>=97 && LA90_0<=102)) ) {
            	                alt90=1;
            	            }
            	            switch (alt90) {
            	                case 1 :
            	                    // InternalEketal.g:5313:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalEketal.g:5313:7: ( (lv_memberCallArguments_14_0= ruleXExpression ) )
            	                    // InternalEketal.g:5314:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    {
            	                    // InternalEketal.g:5314:8: (lv_memberCallArguments_14_0= ruleXExpression )
            	                    // InternalEketal.g:5315:9: lv_memberCallArguments_14_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_17);
            	                    lv_memberCallArguments_14_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_14_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }

            	                    // InternalEketal.g:5332:7: (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )*
            	                    loop89:
            	                    do {
            	                        int alt89=2;
            	                        int LA89_0 = input.LA(1);

            	                        if ( (LA89_0==26) ) {
            	                            alt89=1;
            	                        }


            	                        switch (alt89) {
            	                    	case 1 :
            	                    	    // InternalEketal.g:5333:8: otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_15=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      								newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_2_2_1_1_0());
            	                    	      							
            	                    	    }
            	                    	    // InternalEketal.g:5337:8: ( (lv_memberCallArguments_16_0= ruleXExpression ) )
            	                    	    // InternalEketal.g:5338:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalEketal.g:5338:9: (lv_memberCallArguments_16_0= ruleXExpression )
            	                    	    // InternalEketal.g:5339:10: lv_memberCallArguments_16_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_2_2_1_1_1_0());
            	                    	      									
            	                    	    }
            	                    	    pushFollow(FOLLOW_17);
            	                    	    lv_memberCallArguments_16_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      										if (current==null) {
            	                    	      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      										}
            	                    	      										add(
            	                    	      											current,
            	                    	      											"memberCallArguments",
            	                    	      											lv_memberCallArguments_16_0,
            	                    	      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      										afterParserOrEnumRuleCall();
            	                    	      									
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop89;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }

            	            otherlv_17=(Token)match(input,27,FOLLOW_69); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_17, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_2_2_2());
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalEketal.g:5369:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalEketal.g:5369:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalEketal.g:5370:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalEketal.g:5376:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5382:2: ( ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5383:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5383:2: ( ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5384:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5384:3: ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalEketal.g:5385:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalEketal.g:5398:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalEketal.g:5399:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalEketal.g:5399:5: ()
            // InternalEketal.g:5400:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,25,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalEketal.g:5414:5: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:5415:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:5415:6: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:5416:7: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_14);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"jbase.Jbase.FullJvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,23,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalEketal.g:5439:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalEketal.g:5440:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalEketal.g:5440:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalEketal.g:5441:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,27,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5462:3: ( (lv_eachExpression_7_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5463:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5463:4: (lv_eachExpression_7_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5464:5: lv_eachExpression_7_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalEketal.g:5485:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalEketal.g:5485:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalEketal.g:5486:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalEketal.g:5492:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5498:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5499:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5499:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5500:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5500:3: ()
            // InternalEketal.g:5501:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,25,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5515:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( ((LA94_0>=RULE_ID && LA94_0<=RULE_STRING)||(LA94_0>=RULE_INT && LA94_0<=RULE_DECIMAL)||LA94_0==21||LA94_0==25||LA94_0==31||LA94_0==40||(LA94_0>=51 && LA94_0<=53)||LA94_0==69||(LA94_0>=90 && LA94_0<=91)||(LA94_0>=94 && LA94_0<=95)||(LA94_0>=97 && LA94_0<=102)) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalEketal.g:5516:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalEketal.g:5516:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalEketal.g:5517:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalEketal.g:5517:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalEketal.g:5518:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:5535:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==26) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    // InternalEketal.g:5536:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:5540:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalEketal.g:5541:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalEketal.g:5541:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalEketal.g:5542:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_77);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,16,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalEketal.g:5565:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( ((LA95_0>=RULE_ID && LA95_0<=RULE_STRING)||(LA95_0>=RULE_INT && LA95_0<=RULE_DECIMAL)||LA95_0==21||LA95_0==25||LA95_0==31||LA95_0==40||(LA95_0>=51 && LA95_0<=52)||LA95_0==69||(LA95_0>=90 && LA95_0<=91)||(LA95_0>=94 && LA95_0<=95)||(LA95_0>=97 && LA95_0<=102)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalEketal.g:5566:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalEketal.g:5566:4: (lv_expression_7_0= ruleXExpression )
                    // InternalEketal.g:5567:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_78);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,16,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalEketal.g:5588:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( ((LA97_0>=RULE_ID && LA97_0<=RULE_STRING)||(LA97_0>=RULE_INT && LA97_0<=RULE_DECIMAL)||LA97_0==21||LA97_0==25||LA97_0==31||LA97_0==40||(LA97_0>=51 && LA97_0<=52)||LA97_0==69||(LA97_0>=90 && LA97_0<=91)||(LA97_0>=94 && LA97_0<=95)||(LA97_0>=97 && LA97_0<=102)) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalEketal.g:5589:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:5589:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalEketal.g:5590:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalEketal.g:5590:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalEketal.g:5591:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_17);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:5608:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop96:
                    do {
                        int alt96=2;
                        int LA96_0 = input.LA(1);

                        if ( (LA96_0==26) ) {
                            alt96=1;
                        }


                        switch (alt96) {
                    	case 1 :
                    	    // InternalEketal.g:5609:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:5613:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalEketal.g:5614:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:5614:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalEketal.g:5615:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_17);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop96;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,27,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalEketal.g:5638:3: ( (lv_eachExpression_13_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5639:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5639:4: (lv_eachExpression_13_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5640:5: lv_eachExpression_13_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXJStatementOrBlockParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalEketal.g:5661:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalEketal.g:5661:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalEketal.g:5662:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalEketal.g:5668:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5674:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? ) )
            // InternalEketal.g:5675:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            {
            // InternalEketal.g:5675:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )? )
            // InternalEketal.g:5676:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXJStatementOrBlock ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            {
            // InternalEketal.g:5676:3: ()
            // InternalEketal.g:5677:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5691:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalEketal.g:5692:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalEketal.g:5692:4: (lv_if_3_0= ruleXExpression )
            // InternalEketal.g:5693:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5714:3: ( (lv_then_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5715:4: (lv_then_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5715:4: (lv_then_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5716:5: lv_then_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_then_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:5733:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==72) ) {
                int LA98_1 = input.LA(2);

                if ( (synpred36_InternalEketal()) ) {
                    alt98=1;
                }
            }
            switch (alt98) {
                case 1 :
                    // InternalEketal.g:5734:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    {
                    // InternalEketal.g:5734:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalEketal.g:5735:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,72,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalEketal.g:5741:4: ( (lv_else_7_0= ruleXJStatementOrBlock ) )
                    // InternalEketal.g:5742:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    {
                    // InternalEketal.g:5742:5: (lv_else_7_0= ruleXJStatementOrBlock )
                    // InternalEketal.g:5743:6: lv_else_7_0= ruleXJStatementOrBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXJStatementOrBlockParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXJStatementOrBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"jbase.Jbase.XJStatementOrBlock");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalEketal.g:5765:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalEketal.g:5765:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalEketal.g:5766:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalEketal.g:5772:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5778:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) ) )
            // InternalEketal.g:5779:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            {
            // InternalEketal.g:5779:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) ) )
            // InternalEketal.g:5780:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            {
            // InternalEketal.g:5780:3: ()
            // InternalEketal.g:5781:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5795:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalEketal.g:5796:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalEketal.g:5796:4: (lv_predicate_3_0= ruleXExpression )
            // InternalEketal.g:5797:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5818:3: ( (lv_body_5_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5819:4: (lv_body_5_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5819:4: (lv_body_5_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5820:5: lv_body_5_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalEketal.g:5841:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalEketal.g:5841:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalEketal.g:5842:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalEketal.g:5848:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5854:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalEketal.g:5855:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalEketal.g:5855:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalEketal.g:5856:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXJStatementOrBlock ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalEketal.g:5856:3: ()
            // InternalEketal.g:5857:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalEketal.g:5867:3: ( (lv_body_2_0= ruleXJStatementOrBlock ) )
            // InternalEketal.g:5868:4: (lv_body_2_0= ruleXJStatementOrBlock )
            {
            // InternalEketal.g:5868:4: (lv_body_2_0= ruleXJStatementOrBlock )
            // InternalEketal.g:5869:5: lv_body_2_0= ruleXJStatementOrBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXJStatementOrBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_body_2_0=ruleXJStatementOrBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"jbase.Jbase.XJStatementOrBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,73,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:5894:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalEketal.g:5895:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalEketal.g:5895:4: (lv_predicate_5_0= ruleXExpression )
            // InternalEketal.g:5896:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalEketal.g:5921:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalEketal.g:5921:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalEketal.g:5922:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalEketal.g:5928:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_switch_3_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_default_9_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:5934:2: ( ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' ) )
            // InternalEketal.g:5935:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            {
            // InternalEketal.g:5935:2: ( () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}' )
            // InternalEketal.g:5936:3: () otherlv_1= 'switch' otherlv_2= '(' ( (lv_switch_3_0= ruleXExpression ) ) otherlv_4= ')' otherlv_5= '{' ( (lv_cases_6_0= ruleXCasePart ) )* (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )? otherlv_10= '}'
            {
            // InternalEketal.g:5936:3: ()
            // InternalEketal.g:5937:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,75,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:5951:3: ( (lv_switch_3_0= ruleXExpression ) )
            // InternalEketal.g:5952:4: (lv_switch_3_0= ruleXExpression )
            {
            // InternalEketal.g:5952:4: (lv_switch_3_0= ruleXExpression )
            // InternalEketal.g:5953:5: lv_switch_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_switch_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
              					}
              					set(
              						current,
              						"switch",
              						lv_switch_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            otherlv_5=(Token)match(input,21,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_5());
              		
            }
            // InternalEketal.g:5978:3: ( (lv_cases_6_0= ruleXCasePart ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==77) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalEketal.g:5979:4: (lv_cases_6_0= ruleXCasePart )
            	    {
            	    // InternalEketal.g:5979:4: (lv_cases_6_0= ruleXCasePart )
            	    // InternalEketal.g:5980:5: lv_cases_6_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_81);
            	    lv_cases_6_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_6_0,
            	      						"jbase.Jbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            // InternalEketal.g:5997:3: (otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==76) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalEketal.g:5998:4: otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    {
                    otherlv_7=(Token)match(input,76,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_7_0());
                      			
                    }
                    otherlv_8=(Token)match(input,23,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_7_1());
                      			
                    }
                    // InternalEketal.g:6006:4: ( (lv_default_9_0= ruleXJSwitchStatements ) )
                    // InternalEketal.g:6007:5: (lv_default_9_0= ruleXJSwitchStatements )
                    {
                    // InternalEketal.g:6007:5: (lv_default_9_0= ruleXJSwitchStatements )
                    // InternalEketal.g:6008:6: lv_default_9_0= ruleXJSwitchStatements
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXJSwitchStatementsParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_default_9_0=ruleXJSwitchStatements();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_9_0,
                      							"jbase.Jbase.XJSwitchStatements");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalEketal.g:6034:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalEketal.g:6034:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalEketal.g:6035:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalEketal.g:6041:1: ruleXCasePart returns [EObject current=null] : ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_case_2_0 = null;

        EObject lv_then_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6047:2: ( ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) ) )
            // InternalEketal.g:6048:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            {
            // InternalEketal.g:6048:2: ( () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) ) )
            // InternalEketal.g:6049:3: () otherlv_1= 'case' ( (lv_case_2_0= ruleXExpression ) ) otherlv_3= ':' ( (lv_then_4_0= ruleXJSwitchStatements ) )
            {
            // InternalEketal.g:6049:3: ()
            // InternalEketal.g:6050:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1());
              		
            }
            // InternalEketal.g:6060:3: ( (lv_case_2_0= ruleXExpression ) )
            // InternalEketal.g:6061:4: (lv_case_2_0= ruleXExpression )
            {
            // InternalEketal.g:6061:4: (lv_case_2_0= ruleXExpression )
            // InternalEketal.g:6062:5: lv_case_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_case_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"case",
              						lv_case_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,23,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_3());
              		
            }
            // InternalEketal.g:6083:3: ( (lv_then_4_0= ruleXJSwitchStatements ) )
            // InternalEketal.g:6084:4: (lv_then_4_0= ruleXJSwitchStatements )
            {
            // InternalEketal.g:6084:4: (lv_then_4_0= ruleXJSwitchStatements )
            // InternalEketal.g:6085:5: lv_then_4_0= ruleXJSwitchStatements
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCasePartAccess().getThenXJSwitchStatementsParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_then_4_0=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCasePartRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_4_0,
              						"jbase.Jbase.XJSwitchStatements");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXJSwitchStatements"
    // InternalEketal.g:6106:1: entryRuleXJSwitchStatements returns [EObject current=null] : iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF ;
    public final EObject entryRuleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJSwitchStatements = null;


        try {
            // InternalEketal.g:6106:59: (iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF )
            // InternalEketal.g:6107:2: iv_ruleXJSwitchStatements= ruleXJSwitchStatements EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJSwitchStatementsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJSwitchStatements=ruleXJSwitchStatements();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJSwitchStatements; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJSwitchStatements"


    // $ANTLR start "ruleXJSwitchStatements"
    // InternalEketal.g:6113:1: ruleXJSwitchStatements returns [EObject current=null] : ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) ;
    public final EObject ruleXJSwitchStatements() throws RecognitionException {
        EObject current = null;

        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6119:2: ( ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* ) )
            // InternalEketal.g:6120:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            {
            // InternalEketal.g:6120:2: ( () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )* )
            // InternalEketal.g:6121:3: () ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            {
            // InternalEketal.g:6121:3: ()
            // InternalEketal.g:6122:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJSwitchStatementsAccess().getXJSwitchStatementsAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6128:3: ( (lv_expressions_1_0= ruleXJStatementOrBlock ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( ((LA101_0>=RULE_ID && LA101_0<=RULE_STRING)||(LA101_0>=RULE_INT && LA101_0<=RULE_DECIMAL)||LA101_0==16||LA101_0==21||LA101_0==25||LA101_0==31||LA101_0==34||LA101_0==40||(LA101_0>=51 && LA101_0<=53)||(LA101_0>=55 && LA101_0<=56)||LA101_0==69||LA101_0==71||(LA101_0>=73 && LA101_0<=75)||LA101_0==78||LA101_0==81||(LA101_0>=90 && LA101_0<=91)||(LA101_0>=94 && LA101_0<=95)||(LA101_0>=97 && LA101_0<=104)) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalEketal.g:6129:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    {
            	    // InternalEketal.g:6129:4: (lv_expressions_1_0= ruleXJStatementOrBlock )
            	    // InternalEketal.g:6130:5: lv_expressions_1_0= ruleXJStatementOrBlock
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJSwitchStatementsAccess().getExpressionsXJStatementOrBlockParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_82);
            	    lv_expressions_1_0=ruleXJStatementOrBlock();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJSwitchStatementsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"expressions",
            	      						lv_expressions_1_0,
            	      						"jbase.Jbase.XJStatementOrBlock");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJSwitchStatements"


    // $ANTLR start "entryRuleXJTryWithResourcesStatement"
    // InternalEketal.g:6151:1: entryRuleXJTryWithResourcesStatement returns [EObject current=null] : iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF ;
    public final EObject entryRuleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesStatement = null;


        try {
            // InternalEketal.g:6151:68: (iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF )
            // InternalEketal.g:6152:2: iv_ruleXJTryWithResourcesStatement= ruleXJTryWithResourcesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesStatement=ruleXJTryWithResourcesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesStatement"


    // $ANTLR start "ruleXJTryWithResourcesStatement"
    // InternalEketal.g:6158:1: ruleXJTryWithResourcesStatement returns [EObject current=null] : ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) ;
    public final EObject ruleXJTryWithResourcesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_openParenthesis_2_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_resourceDeclarations_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject lv_catchClauses_6_0 = null;

        EObject lv_finallyExpression_8_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6164:2: ( ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? ) )
            // InternalEketal.g:6165:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            {
            // InternalEketal.g:6165:2: ( ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )? )
            // InternalEketal.g:6166:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) ) ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )* otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ( (lv_catchClauses_6_0= ruleXCatchClause ) )* (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            {
            // InternalEketal.g:6166:3: ( ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) ) )
            // InternalEketal.g:6167:4: ( ( () 'try' ( ( '(' ) ) ) )=> ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            {
            // InternalEketal.g:6178:4: ( () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) ) )
            // InternalEketal.g:6179:5: () otherlv_1= 'try' ( (lv_openParenthesis_2_0= '(' ) )
            {
            // InternalEketal.g:6179:5: ()
            // InternalEketal.g:6180:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXJTryWithResourcesStatementAccess().getXJTryWithResourcesStatementAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXJTryWithResourcesStatementAccess().getTryKeyword_0_0_1());
              				
            }
            // InternalEketal.g:6190:5: ( (lv_openParenthesis_2_0= '(' ) )
            // InternalEketal.g:6191:6: (lv_openParenthesis_2_0= '(' )
            {
            // InternalEketal.g:6191:6: (lv_openParenthesis_2_0= '(' )
            // InternalEketal.g:6192:7: lv_openParenthesis_2_0= '('
            {
            lv_openParenthesis_2_0=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_openParenthesis_2_0, grammarAccess.getXJTryWithResourcesStatementAccess().getOpenParenthesisLeftParenthesisKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXJTryWithResourcesStatementRule());
              							}
              							setWithLastConsumed(current, "openParenthesis", true, "(");
              						
            }

            }


            }


            }


            }

            // InternalEketal.g:6206:3: ( (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_ID||LA102_0==53) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalEketal.g:6207:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    {
            	    // InternalEketal.g:6207:4: (lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration )
            	    // InternalEketal.g:6208:5: lv_resourceDeclarations_3_0= ruleXJTryWithResourcesVariableDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getResourceDeclarationsXJTryWithResourcesVariableDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_resourceDeclarations_3_0=ruleXJTryWithResourcesVariableDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"resourceDeclarations",
            	      						lv_resourceDeclarations_3_0,
            	      						"jbase.Jbase.XJTryWithResourcesVariableDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_4=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesStatementAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6229:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6230:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6230:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6231:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_83);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6248:3: ( (lv_catchClauses_6_0= ruleXCatchClause ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==80) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalEketal.g:6249:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    {
            	    // InternalEketal.g:6249:4: (lv_catchClauses_6_0= ruleXCatchClause )
            	    // InternalEketal.g:6250:5: lv_catchClauses_6_0= ruleXCatchClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getCatchClausesXCatchClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_catchClauses_6_0=ruleXCatchClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"catchClauses",
            	      						lv_catchClauses_6_0,
            	      						"jbase.Jbase.XCatchClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            // InternalEketal.g:6267:3: (otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==79) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalEketal.g:6268:4: otherlv_7= 'finally' ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    {
                    otherlv_7=(Token)match(input,79,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyKeyword_5_0());
                      			
                    }
                    // InternalEketal.g:6272:4: ( (lv_finallyExpression_8_0= ruleXBlockExpression ) )
                    // InternalEketal.g:6273:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:6273:5: (lv_finallyExpression_8_0= ruleXBlockExpression )
                    // InternalEketal.g:6274:6: lv_finallyExpression_8_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJTryWithResourcesStatementAccess().getFinallyExpressionXBlockExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_8_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJTryWithResourcesStatementRule());
                      						}
                      						set(
                      							current,
                      							"finallyExpression",
                      							lv_finallyExpression_8_0,
                      							"jbase.Jbase.XBlockExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesStatement"


    // $ANTLR start "entryRuleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:6296:1: entryRuleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF ;
    public final EObject entryRuleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJTryWithResourcesVariableDeclaration = null;


        try {
            // InternalEketal.g:6296:78: (iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF )
            // InternalEketal.g:6297:2: iv_ruleXJTryWithResourcesVariableDeclaration= ruleXJTryWithResourcesVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJTryWithResourcesVariableDeclaration=ruleXJTryWithResourcesVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJTryWithResourcesVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "ruleXJTryWithResourcesVariableDeclaration"
    // InternalEketal.g:6303:1: ruleXJTryWithResourcesVariableDeclaration returns [EObject current=null] : ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleXJTryWithResourcesVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_final_1_0=null;
        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_type_2_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6309:2: ( ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalEketal.g:6310:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalEketal.g:6310:2: ( () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )? )
            // InternalEketal.g:6311:3: () ( (lv_final_1_0= 'final' ) )? ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleValidID ) ) otherlv_4= '=' ( (lv_right_5_0= ruleXExpression ) ) ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalEketal.g:6311:3: ()
            // InternalEketal.g:6312:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getXJTryWithResourcesVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6318:3: ( (lv_final_1_0= 'final' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==53) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalEketal.g:6319:4: (lv_final_1_0= 'final' )
                    {
                    // InternalEketal.g:6319:4: (lv_final_1_0= 'final' )
                    // InternalEketal.g:6320:5: lv_final_1_0= 'final'
                    {
                    lv_final_1_0=(Token)match(input,53,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_final_1_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getFinalFinalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "final", true, "final");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:6332:3: ( (lv_type_2_0= ruleJvmTypeReference ) )
            // InternalEketal.g:6333:4: (lv_type_2_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:6333:4: (lv_type_2_0= ruleJvmTypeReference )
            // InternalEketal.g:6334:5: lv_type_2_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_type_2_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6351:3: ( (lv_name_3_0= ruleValidID ) )
            // InternalEketal.g:6352:4: (lv_name_3_0= ruleValidID )
            {
            // InternalEketal.g:6352:4: (lv_name_3_0= ruleValidID )
            // InternalEketal.g:6353:5: lv_name_3_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getNameValidIDParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_name_3_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getEqualsSignKeyword_4());
              		
            }
            // InternalEketal.g:6374:3: ( (lv_right_5_0= ruleXExpression ) )
            // InternalEketal.g:6375:4: (lv_right_5_0= ruleXExpression )
            {
            // InternalEketal.g:6375:4: (lv_right_5_0= ruleXExpression )
            // InternalEketal.g:6376:5: lv_right_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getRightXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_right_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
              					}
              					set(
              						current,
              						"right",
              						lv_right_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6393:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==16) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalEketal.g:6394:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalEketal.g:6394:4: (lv_semicolon_6_0= ';' )
                    // InternalEketal.g:6395:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getXJTryWithResourcesVariableDeclarationAccess().getSemicolonSemicolonKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getXJTryWithResourcesVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", lv_semicolon_6_0, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJTryWithResourcesVariableDeclaration"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalEketal.g:6411:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalEketal.g:6411:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalEketal.g:6412:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalEketal.g:6418:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6424:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) ) )
            // InternalEketal.g:6425:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            {
            // InternalEketal.g:6425:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) ) )
            // InternalEketal.g:6426:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXBlockExpression ) ) ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            {
            // InternalEketal.g:6426:3: ()
            // InternalEketal.g:6427:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalEketal.g:6437:3: ( (lv_expression_2_0= ruleXBlockExpression ) )
            // InternalEketal.g:6438:4: (lv_expression_2_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6438:4: (lv_expression_2_0= ruleXBlockExpression )
            // InternalEketal.g:6439:5: lv_expression_2_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXBlockExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_84);
            lv_expression_2_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:6456:3: ( ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==80) ) {
                alt109=1;
            }
            else if ( (LA109_0==79) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalEketal.g:6457:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    {
                    // InternalEketal.g:6457:4: ( ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )? )
                    // InternalEketal.g:6458:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    {
                    // InternalEketal.g:6458:5: ( (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt107=0;
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==80) ) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    // InternalEketal.g:6459:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalEketal.g:6459:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalEketal.g:6460:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_83);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"jbase.Jbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt107 >= 1 ) break loop107;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(107, input);
                                throw eee;
                        }
                        cnt107++;
                    } while (true);

                    // InternalEketal.g:6477:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) ) )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==79) && (synpred38_InternalEketal())) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // InternalEketal.g:6478:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            {
                            // InternalEketal.g:6478:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalEketal.g:6479:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,79,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalEketal.g:6485:6: ( (lv_finallyExpression_5_0= ruleXBlockExpression ) )
                            // InternalEketal.g:6486:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            {
                            // InternalEketal.g:6486:7: (lv_finallyExpression_5_0= ruleXBlockExpression )
                            // InternalEketal.g:6487:8: lv_finallyExpression_5_0= ruleXBlockExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"jbase.Jbase.XBlockExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6507:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    {
                    // InternalEketal.g:6507:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) ) )
                    // InternalEketal.g:6508:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    {
                    otherlv_6=(Token)match(input,79,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalEketal.g:6512:5: ( (lv_finallyExpression_7_0= ruleXBlockExpression ) )
                    // InternalEketal.g:6513:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    {
                    // InternalEketal.g:6513:6: (lv_finallyExpression_7_0= ruleXBlockExpression )
                    // InternalEketal.g:6514:7: lv_finallyExpression_7_0= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXBlockExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"jbase.Jbase.XBlockExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalEketal.g:6537:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalEketal.g:6537:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalEketal.g:6538:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalEketal.g:6544:1: ruleXCatchClause returns [EObject current=null] : ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6550:2: ( ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:6551:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:6551:2: ( () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:6552:3: () ( ( 'catch' )=>otherlv_1= 'catch' ) otherlv_2= '(' ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:6552:3: ()
            // InternalEketal.g:6553:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCatchClauseAccess().getXCatchClauseAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6559:3: ( ( 'catch' )=>otherlv_1= 'catch' )
            // InternalEketal.g:6560:4: ( 'catch' )=>otherlv_1= 'catch'
            {
            otherlv_1=(Token)match(input,80,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getCatchKeyword_1());
              			
            }

            }

            otherlv_2=(Token)match(input,25,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6570:3: ( (lv_declaredParam_3_0= ruleFullJvmFormalParameter ) )
            // InternalEketal.g:6571:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            {
            // InternalEketal.g:6571:4: (lv_declaredParam_3_0= ruleFullJvmFormalParameter )
            // InternalEketal.g:6572:5: lv_declaredParam_3_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_declaredParam_3_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_3_0,
              						"jbase.Jbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalEketal.g:6593:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6594:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6594:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6595:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXBlockExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalEketal.g:6616:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalEketal.g:6616:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalEketal.g:6617:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalEketal.g:6623:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6629:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) ) )
            // InternalEketal.g:6630:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            {
            // InternalEketal.g:6630:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) ) )
            // InternalEketal.g:6631:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXBlockExpression ) )
            {
            // InternalEketal.g:6631:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalEketal.g:6632:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalEketal.g:6639:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalEketal.g:6640:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalEketal.g:6640:5: ()
            // InternalEketal.g:6641:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalEketal.g:6657:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalEketal.g:6658:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalEketal.g:6658:4: (lv_param_3_0= ruleXExpression )
            // InternalEketal.g:6659:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalEketal.g:6680:3: ( (lv_expression_5_0= ruleXBlockExpression ) )
            // InternalEketal.g:6681:4: (lv_expression_5_0= ruleXBlockExpression )
            {
            // InternalEketal.g:6681:4: (lv_expression_5_0= ruleXBlockExpression )
            // InternalEketal.g:6682:5: lv_expression_5_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXBlockExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"jbase.Jbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalEketal.g:6703:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalEketal.g:6703:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalEketal.g:6704:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalEketal.g:6710:1: ruleXPrimaryExpression returns [EObject current=null] : ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XJArrayConstructorCall_0 = null;

        EObject this_XConstructorCall_1 = null;

        EObject this_XJFeatureCallWithArrayAccess_2 = null;

        EObject this_XLiteral_3 = null;

        EObject this_XParenthesizedExpression_4 = null;



        	enterRule();

        try {
            // InternalEketal.g:6716:2: ( ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression ) )
            // InternalEketal.g:6717:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            {
            // InternalEketal.g:6717:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )
            int alt110=5;
            alt110 = dfa110.predict(input);
            switch (alt110) {
                case 1 :
                    // InternalEketal.g:6718:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    {
                    // InternalEketal.g:6718:3: ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall )
                    // InternalEketal.g:6719:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJArrayConstructorCallParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayConstructorCall_0=ruleXJArrayConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XJArrayConstructorCall_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:6745:3: this_XConstructorCall_1= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_1=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6754:3: this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXJFeatureCallWithArrayAccessParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJFeatureCallWithArrayAccess_2=ruleXJFeatureCallWithArrayAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJFeatureCallWithArrayAccess_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:6763:3: this_XLiteral_3= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_3=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:6772:3: this_XParenthesizedExpression_4= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_4=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalEketal.g:6784:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalEketal.g:6784:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalEketal.g:6785:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalEketal.g:6791:1: ruleXLiteral returns [EObject current=null] : (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XBooleanLiteral_0 = null;

        EObject this_XNumberLiteral_1 = null;

        EObject this_XNullLiteral_2 = null;

        EObject this_XCharLiteral_3 = null;

        EObject this_XStringLiteral_4 = null;

        EObject this_XJArrayLiteral_5 = null;



        	enterRule();

        try {
            // InternalEketal.g:6797:2: ( (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral ) )
            // InternalEketal.g:6798:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            {
            // InternalEketal.g:6798:2: (this_XBooleanLiteral_0= ruleXBooleanLiteral | this_XNumberLiteral_1= ruleXNumberLiteral | this_XNullLiteral_2= ruleXNullLiteral | this_XCharLiteral_3= ruleXCharLiteral | this_XStringLiteral_4= ruleXStringLiteral | this_XJArrayLiteral_5= ruleXJArrayLiteral )
            int alt111=6;
            switch ( input.LA(1) ) {
            case 100:
            case 101:
                {
                alt111=1;
                }
                break;
            case RULE_INT:
            case RULE_HEX:
            case RULE_DECIMAL:
                {
                alt111=2;
                }
                break;
            case 102:
                {
                alt111=3;
                }
                break;
            case RULE_CHARACTER:
                {
                alt111=4;
                }
                break;
            case RULE_STRING:
                {
                alt111=5;
                }
                break;
            case 21:
                {
                alt111=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }

            switch (alt111) {
                case 1 :
                    // InternalEketal.g:6799:3: this_XBooleanLiteral_0= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_0=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:6808:3: this_XNumberLiteral_1= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_1=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:6817:3: this_XNullLiteral_2= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_2=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:6826:3: this_XCharLiteral_3= ruleXCharLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCharLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCharLiteral_3=ruleXCharLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCharLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:6835:3: this_XStringLiteral_4= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_4=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalEketal.g:6844:3: this_XJArrayLiteral_5= ruleXJArrayLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXJArrayLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XJArrayLiteral_5=ruleXJArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XJArrayLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXJArrayLiteral"
    // InternalEketal.g:6856:1: entryRuleXJArrayLiteral returns [EObject current=null] : iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF ;
    public final EObject entryRuleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXJArrayLiteral = null;


        try {
            // InternalEketal.g:6856:55: (iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF )
            // InternalEketal.g:6857:2: iv_ruleXJArrayLiteral= ruleXJArrayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXJArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXJArrayLiteral=ruleXJArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXJArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXJArrayLiteral"


    // $ANTLR start "ruleXJArrayLiteral"
    // InternalEketal.g:6863:1: ruleXJArrayLiteral returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleXJArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:6869:2: ( ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' ) )
            // InternalEketal.g:6870:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            {
            // InternalEketal.g:6870:2: ( () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}' )
            // InternalEketal.g:6871:3: () otherlv_1= '{' ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )? otherlv_5= '}'
            {
            // InternalEketal.g:6871:3: ()
            // InternalEketal.g:6872:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXJArrayLiteralAccess().getXJArrayLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,21,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXJArrayLiteralAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalEketal.g:6882:3: ( ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )* )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( ((LA113_0>=RULE_ID && LA113_0<=RULE_STRING)||(LA113_0>=RULE_INT && LA113_0<=RULE_DECIMAL)||LA113_0==21||LA113_0==25||LA113_0==31||LA113_0==40||(LA113_0>=51 && LA113_0<=52)||LA113_0==69||(LA113_0>=90 && LA113_0<=91)||(LA113_0>=94 && LA113_0<=95)||(LA113_0>=97 && LA113_0<=102)) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalEketal.g:6883:4: ( (lv_elements_2_0= ruleXExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:6883:4: ( (lv_elements_2_0= ruleXExpression ) )
                    // InternalEketal.g:6884:5: (lv_elements_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:6884:5: (lv_elements_2_0= ruleXExpression )
                    // InternalEketal.g:6885:6: lv_elements_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_elements_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:6902:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) ) )*
                    loop112:
                    do {
                        int alt112=2;
                        int LA112_0 = input.LA(1);

                        if ( (LA112_0==26) ) {
                            alt112=1;
                        }


                        switch (alt112) {
                    	case 1 :
                    	    // InternalEketal.g:6903:5: otherlv_3= ',' ( (lv_elements_4_0= ruleXExpression ) )
                    	    {
                    	    otherlv_3=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXJArrayLiteralAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:6907:5: ( (lv_elements_4_0= ruleXExpression ) )
                    	    // InternalEketal.g:6908:6: (lv_elements_4_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:6908:6: (lv_elements_4_0= ruleXExpression )
                    	    // InternalEketal.g:6909:7: lv_elements_4_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXJArrayLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_elements_4_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXJArrayLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop112;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXJArrayLiteralAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXJArrayLiteral"


    // $ANTLR start "entryRuleXCharLiteral"
    // InternalEketal.g:6936:1: entryRuleXCharLiteral returns [EObject current=null] : iv_ruleXCharLiteral= ruleXCharLiteral EOF ;
    public final EObject entryRuleXCharLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCharLiteral = null;


        try {
            // InternalEketal.g:6936:53: (iv_ruleXCharLiteral= ruleXCharLiteral EOF )
            // InternalEketal.g:6937:2: iv_ruleXCharLiteral= ruleXCharLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCharLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCharLiteral=ruleXCharLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCharLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCharLiteral"


    // $ANTLR start "ruleXCharLiteral"
    // InternalEketal.g:6943:1: ruleXCharLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) ;
    public final EObject ruleXCharLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6949:2: ( ( () ( (lv_value_1_0= RULE_CHARACTER ) ) ) )
            // InternalEketal.g:6950:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            {
            // InternalEketal.g:6950:2: ( () ( (lv_value_1_0= RULE_CHARACTER ) ) )
            // InternalEketal.g:6951:3: () ( (lv_value_1_0= RULE_CHARACTER ) )
            {
            // InternalEketal.g:6951:3: ()
            // InternalEketal.g:6952:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCharLiteralAccess().getXJCharLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:6958:3: ( (lv_value_1_0= RULE_CHARACTER ) )
            // InternalEketal.g:6959:4: (lv_value_1_0= RULE_CHARACTER )
            {
            // InternalEketal.g:6959:4: (lv_value_1_0= RULE_CHARACTER )
            // InternalEketal.g:6960:5: lv_value_1_0= RULE_CHARACTER
            {
            lv_value_1_0=(Token)match(input,RULE_CHARACTER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXCharLiteralAccess().getValueCHARACTERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXCharLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.CHARACTER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCharLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalEketal.g:6980:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalEketal.g:6980:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalEketal.g:6981:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalEketal.g:6987:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalEketal.g:6993:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalEketal.g:6994:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalEketal.g:6994:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalEketal.g:6995:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalEketal.g:6995:3: ()
            // InternalEketal.g:6996:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:7002:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalEketal.g:7003:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalEketal.g:7003:4: (lv_value_1_0= RULE_STRING )
            // InternalEketal.g:7004:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"jbase.Jbase.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleOpEquality"
    // InternalEketal.g:7024:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalEketal.g:7024:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalEketal.g:7025:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalEketal.g:7031:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7037:2: ( (kw= '==' | kw= '!=' ) )
            // InternalEketal.g:7038:2: (kw= '==' | kw= '!=' )
            {
            // InternalEketal.g:7038:2: (kw= '==' | kw= '!=' )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==82) ) {
                alt114=1;
            }
            else if ( (LA114_0==83) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalEketal.g:7039:3: kw= '=='
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7045:3: kw= '!='
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleOpMulti"
    // InternalEketal.g:7054:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalEketal.g:7054:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalEketal.g:7055:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalEketal.g:7061:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7067:2: ( (kw= '*' | kw= '/' | kw= '%' ) )
            // InternalEketal.g:7068:2: (kw= '*' | kw= '/' | kw= '%' )
            {
            // InternalEketal.g:7068:2: (kw= '*' | kw= '/' | kw= '%' )
            int alt115=3;
            switch ( input.LA(1) ) {
            case RULE_ANY:
                {
                alt115=1;
                }
                break;
            case 84:
                {
                alt115=2;
                }
                break;
            case 85:
                {
                alt115=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalEketal.g:7069:3: kw= '*'
                    {
                    kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7075:3: kw= '/'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:7081:3: kw= '%'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleOpOther"
    // InternalEketal.g:7090:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalEketal.g:7090:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalEketal.g:7091:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalEketal.g:7097:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7103:2: ( ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' ) )
            // InternalEketal.g:7104:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            {
            // InternalEketal.g:7104:2: ( (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | kw= '<<' )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==67) ) {
                alt117=1;
            }
            else if ( (LA117_0==86) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }
            switch (alt117) {
                case 1 :
                    // InternalEketal.g:7105:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalEketal.g:7105:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalEketal.g:7106:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,67,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_0());
                      			
                    }
                    // InternalEketal.g:7111:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==67) ) {
                        int LA116_1 = input.LA(2);

                        if ( (LA116_1==67) && (synpred42_InternalEketal())) {
                            alt116=1;
                        }
                        else if ( (LA116_1==EOF||(LA116_1>=RULE_ID && LA116_1<=RULE_STRING)||(LA116_1>=RULE_INT && LA116_1<=RULE_DECIMAL)||LA116_1==21||LA116_1==25||LA116_1==31||LA116_1==40||(LA116_1>=51 && LA116_1<=52)||LA116_1==69||(LA116_1>=90 && LA116_1<=91)||(LA116_1>=94 && LA116_1<=95)||(LA116_1>=97 && LA116_1<=102)) ) {
                            alt116=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 116, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 116, 0, input);

                        throw nvae;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalEketal.g:7112:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalEketal.g:7112:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalEketal.g:7113:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalEketal.g:7118:6: (kw= '>' kw= '>' )
                            // InternalEketal.g:7119:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,67,FOLLOW_87); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:7132:5: kw= '>'
                            {
                            kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7140:3: kw= '<<'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalEketal.g:7149:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalEketal.g:7149:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalEketal.g:7150:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalEketal.g:7156:1: ruleXAndExpression returns [EObject current=null] : (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseInclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7162:2: ( (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:7163:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:7163:2: (this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )* )
            // InternalEketal.g:7164:3: this_XBitwiseInclusiveOrExpression_0= ruleXBitwiseInclusiveOrExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXBitwiseInclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_23);
            this_XBitwiseInclusiveOrExpression_0=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseInclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7172:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==30) ) {
                    int LA118_2 = input.LA(2);

                    if ( (synpred43_InternalEketal()) ) {
                        alt118=1;
                    }


                }


                switch (alt118) {
            	case 1 :
            	    // InternalEketal.g:7173:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:7173:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalEketal.g:7174:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalEketal.g:7184:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalEketal.g:7185:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalEketal.g:7185:6: ()
            	    // InternalEketal.g:7186:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7192:6: ( ( ruleOpAnd ) )
            	    // InternalEketal.g:7193:7: ( ruleOpAnd )
            	    {
            	    // InternalEketal.g:7193:7: ( ruleOpAnd )
            	    // InternalEketal.g:7194:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7210:4: ( (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression ) )
            	    // InternalEketal.g:7211:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    {
            	    // InternalEketal.g:7211:5: (lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression )
            	    // InternalEketal.g:7212:6: lv_rightOperand_3_0= ruleXBitwiseInclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXBitwiseInclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_rightOperand_3_0=ruleXBitwiseInclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseInclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:7234:1: entryRuleXBitwiseInclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseInclusiveOrExpression = null;


        try {
            // InternalEketal.g:7234:70: (iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF )
            // InternalEketal.g:7235:2: iv_ruleXBitwiseInclusiveOrExpression= ruleXBitwiseInclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseInclusiveOrExpression=ruleXBitwiseInclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseInclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseInclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseInclusiveOrExpression"
    // InternalEketal.g:7241:1: ruleXBitwiseInclusiveOrExpression returns [EObject current=null] : (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) ;
    public final EObject ruleXBitwiseInclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseExclusiveOrExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7247:2: ( (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* ) )
            // InternalEketal.g:7248:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            {
            // InternalEketal.g:7248:2: (this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )* )
            // InternalEketal.g:7249:3: this_XBitwiseExclusiveOrExpression_0= ruleXBitwiseExclusiveOrExpression ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBitwiseExclusiveOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_XBitwiseExclusiveOrExpression_0=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseExclusiveOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7257:3: ( ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==87) ) {
                    int LA119_2 = input.LA(2);

                    if ( (synpred44_InternalEketal()) ) {
                        alt119=1;
                    }


                }


                switch (alt119) {
            	case 1 :
            	    // InternalEketal.g:7258:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    {
            	    // InternalEketal.g:7258:4: ( ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) ) )
            	    // InternalEketal.g:7259:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )=> ( () ( ( ruleOpInclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:7269:5: ( () ( ( ruleOpInclusiveOr ) ) )
            	    // InternalEketal.g:7270:6: () ( ( ruleOpInclusiveOr ) )
            	    {
            	    // InternalEketal.g:7270:6: ()
            	    // InternalEketal.g:7271:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7277:6: ( ( ruleOpInclusiveOr ) )
            	    // InternalEketal.g:7278:7: ( ruleOpInclusiveOr )
            	    {
            	    // InternalEketal.g:7278:7: ( ruleOpInclusiveOr )
            	    // InternalEketal.g:7279:8: ruleOpInclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpInclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7295:4: ( (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression ) )
            	    // InternalEketal.g:7296:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    {
            	    // InternalEketal.g:7296:5: (lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression )
            	    // InternalEketal.g:7297:6: lv_rightOperand_3_0= ruleXBitwiseExclusiveOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseInclusiveOrExpressionAccess().getRightOperandXBitwiseExclusiveOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_rightOperand_3_0=ruleXBitwiseExclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseInclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseExclusiveOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseInclusiveOrExpression"


    // $ANTLR start "entryRuleOpInclusiveOr"
    // InternalEketal.g:7319:1: entryRuleOpInclusiveOr returns [String current=null] : iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF ;
    public final String entryRuleOpInclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpInclusiveOr = null;


        try {
            // InternalEketal.g:7319:53: (iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF )
            // InternalEketal.g:7320:2: iv_ruleOpInclusiveOr= ruleOpInclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpInclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpInclusiveOr=ruleOpInclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpInclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpInclusiveOr"


    // $ANTLR start "ruleOpInclusiveOr"
    // InternalEketal.g:7326:1: ruleOpInclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '|' ;
    public final AntlrDatatypeRuleToken ruleOpInclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7332:2: (kw= '|' )
            // InternalEketal.g:7333:2: kw= '|'
            {
            kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpInclusiveOrAccess().getVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpInclusiveOr"


    // $ANTLR start "entryRuleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:7341:1: entryRuleXBitwiseExclusiveOrExpression returns [EObject current=null] : iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF ;
    public final EObject entryRuleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseExclusiveOrExpression = null;


        try {
            // InternalEketal.g:7341:70: (iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF )
            // InternalEketal.g:7342:2: iv_ruleXBitwiseExclusiveOrExpression= ruleXBitwiseExclusiveOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseExclusiveOrExpression=ruleXBitwiseExclusiveOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseExclusiveOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseExclusiveOrExpression"


    // $ANTLR start "ruleXBitwiseExclusiveOrExpression"
    // InternalEketal.g:7348:1: ruleXBitwiseExclusiveOrExpression returns [EObject current=null] : (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) ;
    public final EObject ruleXBitwiseExclusiveOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XBitwiseAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7354:2: ( (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* ) )
            // InternalEketal.g:7355:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            {
            // InternalEketal.g:7355:2: (this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )* )
            // InternalEketal.g:7356:3: this_XBitwiseAndExpression_0= ruleXBitwiseAndExpression ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_89);
            this_XBitwiseAndExpression_0=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XBitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7364:3: ( ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==88) ) {
                    int LA120_2 = input.LA(2);

                    if ( (synpred45_InternalEketal()) ) {
                        alt120=1;
                    }


                }


                switch (alt120) {
            	case 1 :
            	    // InternalEketal.g:7365:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    {
            	    // InternalEketal.g:7365:4: ( ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) ) )
            	    // InternalEketal.g:7366:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )=> ( () ( ( ruleOpExclusiveOr ) ) )
            	    {
            	    // InternalEketal.g:7376:5: ( () ( ( ruleOpExclusiveOr ) ) )
            	    // InternalEketal.g:7377:6: () ( ( ruleOpExclusiveOr ) )
            	    {
            	    // InternalEketal.g:7377:6: ()
            	    // InternalEketal.g:7378:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7384:6: ( ( ruleOpExclusiveOr ) )
            	    // InternalEketal.g:7385:7: ( ruleOpExclusiveOr )
            	    {
            	    // InternalEketal.g:7385:7: ( ruleOpExclusiveOr )
            	    // InternalEketal.g:7386:8: ruleOpExclusiveOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpExclusiveOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7402:4: ( (lv_rightOperand_3_0= ruleXBitwiseAndExpression ) )
            	    // InternalEketal.g:7403:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    {
            	    // InternalEketal.g:7403:5: (lv_rightOperand_3_0= ruleXBitwiseAndExpression )
            	    // InternalEketal.g:7404:6: lv_rightOperand_3_0= ruleXBitwiseAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseExclusiveOrExpressionAccess().getRightOperandXBitwiseAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_rightOperand_3_0=ruleXBitwiseAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseExclusiveOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XBitwiseAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseExclusiveOrExpression"


    // $ANTLR start "entryRuleOpExclusiveOr"
    // InternalEketal.g:7426:1: entryRuleOpExclusiveOr returns [String current=null] : iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF ;
    public final String entryRuleOpExclusiveOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpExclusiveOr = null;


        try {
            // InternalEketal.g:7426:53: (iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF )
            // InternalEketal.g:7427:2: iv_ruleOpExclusiveOr= ruleOpExclusiveOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpExclusiveOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpExclusiveOr=ruleOpExclusiveOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpExclusiveOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpExclusiveOr"


    // $ANTLR start "ruleOpExclusiveOr"
    // InternalEketal.g:7433:1: ruleOpExclusiveOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '^' ;
    public final AntlrDatatypeRuleToken ruleOpExclusiveOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7439:2: (kw= '^' )
            // InternalEketal.g:7440:2: kw= '^'
            {
            kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpExclusiveOrAccess().getCircumflexAccentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpExclusiveOr"


    // $ANTLR start "entryRuleXBitwiseAndExpression"
    // InternalEketal.g:7448:1: entryRuleXBitwiseAndExpression returns [EObject current=null] : iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF ;
    public final EObject entryRuleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBitwiseAndExpression = null;


        try {
            // InternalEketal.g:7448:62: (iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF )
            // InternalEketal.g:7449:2: iv_ruleXBitwiseAndExpression= ruleXBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBitwiseAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBitwiseAndExpression=ruleXBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBitwiseAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBitwiseAndExpression"


    // $ANTLR start "ruleXBitwiseAndExpression"
    // InternalEketal.g:7455:1: ruleXBitwiseAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7461:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalEketal.g:7462:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalEketal.g:7462:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalEketal.g:7463:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_90);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:7471:3: ( ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==89) ) {
                    int LA121_2 = input.LA(2);

                    if ( (synpred46_InternalEketal()) ) {
                        alt121=1;
                    }


                }


                switch (alt121) {
            	case 1 :
            	    // InternalEketal.g:7472:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalEketal.g:7472:4: ( ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) ) )
            	    // InternalEketal.g:7473:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )=> ( () ( ( ruleOpBitwiseAnd ) ) )
            	    {
            	    // InternalEketal.g:7483:5: ( () ( ( ruleOpBitwiseAnd ) ) )
            	    // InternalEketal.g:7484:6: () ( ( ruleOpBitwiseAnd ) )
            	    {
            	    // InternalEketal.g:7484:6: ()
            	    // InternalEketal.g:7485:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXBitwiseAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:7491:6: ( ( ruleOpBitwiseAnd ) )
            	    // InternalEketal.g:7492:7: ( ruleOpBitwiseAnd )
            	    {
            	    // InternalEketal.g:7492:7: ( ruleOpBitwiseAnd )
            	    // InternalEketal.g:7493:8: ruleOpBitwiseAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXBitwiseAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpBitwiseAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:7509:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalEketal.g:7510:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalEketal.g:7510:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalEketal.g:7511:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBitwiseAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBitwiseAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBitwiseAndExpression"


    // $ANTLR start "entryRuleOpBitwiseAnd"
    // InternalEketal.g:7533:1: entryRuleOpBitwiseAnd returns [String current=null] : iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF ;
    public final String entryRuleOpBitwiseAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpBitwiseAnd = null;


        try {
            // InternalEketal.g:7533:52: (iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF )
            // InternalEketal.g:7534:2: iv_ruleOpBitwiseAnd= ruleOpBitwiseAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpBitwiseAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpBitwiseAnd=ruleOpBitwiseAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpBitwiseAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpBitwiseAnd"


    // $ANTLR start "ruleOpBitwiseAnd"
    // InternalEketal.g:7540:1: ruleOpBitwiseAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&' ;
    public final AntlrDatatypeRuleToken ruleOpBitwiseAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7546:2: (kw= '&' )
            // InternalEketal.g:7547:2: kw= '&'
            {
            kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpBitwiseAndAccess().getAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpBitwiseAnd"


    // $ANTLR start "entryRuleOpUnary"
    // InternalEketal.g:7555:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalEketal.g:7555:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalEketal.g:7556:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalEketal.g:7562:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:7568:2: ( (kw= '!' | kw= '-' | kw= '+' | kw= '~' ) )
            // InternalEketal.g:7569:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            {
            // InternalEketal.g:7569:2: (kw= '!' | kw= '-' | kw= '+' | kw= '~' )
            int alt122=4;
            switch ( input.LA(1) ) {
            case 31:
                {
                alt122=1;
                }
                break;
            case 40:
                {
                alt122=2;
                }
                break;
            case 90:
                {
                alt122=3;
                }
                break;
            case 91:
                {
                alt122=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalEketal.g:7570:3: kw= '!'
                    {
                    kw=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:7576:3: kw= '-'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:7582:3: kw= '+'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:7588:3: kw= '~'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:7597:1: entryRuleXAnnotationElementValueOrCommaList returns [EObject current=null] : iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF ;
    public final EObject entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            // InternalEketal.g:7597:75: (iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF )
            // InternalEketal.g:7598:2: iv_ruleXAnnotationElementValueOrCommaList= ruleXAnnotationElementValueOrCommaList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValueOrCommaList"


    // $ANTLR start "ruleXAnnotationElementValueOrCommaList"
    // InternalEketal.g:7604:1: ruleXAnnotationElementValueOrCommaList returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:7610:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:7611:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:7611:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // InternalEketal.g:7612:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:7612:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:7613:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:7613:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:7614:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:7620:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:7621:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:7621:6: ()
                    // InternalEketal.g:7622:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,21,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:7634:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( ((LA124_0>=RULE_ID && LA124_0<=RULE_STRING)||(LA124_0>=RULE_INT && LA124_0<=RULE_DECIMAL)||LA124_0==21||LA124_0==25||LA124_0==31||LA124_0==40||(LA124_0>=51 && LA124_0<=52)||LA124_0==69||(LA124_0>=90 && LA124_0<=92)||(LA124_0>=94 && LA124_0<=95)||(LA124_0>=97 && LA124_0<=102)) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // InternalEketal.g:7635:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:7635:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:7636:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:7636:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:7637:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:7654:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop123:
                            do {
                                int alt123=2;
                                int LA123_0 = input.LA(1);

                                if ( (LA123_0==26) ) {
                                    alt123=1;
                                }


                                switch (alt123) {
                            	case 1 :
                            	    // InternalEketal.g:7655:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,26,FOLLOW_92); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:7659:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:7660:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:7660:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:7661:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueOrCommaListRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop123;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueOrCommaListAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7686:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueOrCommaListAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValueOrCommaList"


    // $ANTLR start "entryRuleXAnnotationElementValue"
    // InternalEketal.g:7698:1: entryRuleXAnnotationElementValue returns [EObject current=null] : iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF ;
    public final EObject entryRuleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValue = null;


        try {
            // InternalEketal.g:7698:64: (iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF )
            // InternalEketal.g:7699:2: iv_ruleXAnnotationElementValue= ruleXAnnotationElementValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValue"


    // $ANTLR start "ruleXAnnotationElementValue"
    // InternalEketal.g:7705:1: ruleXAnnotationElementValue returns [EObject current=null] : ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) ;
    public final EObject ruleXAnnotationElementValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;

        EObject this_XAnnotationOrExpression_6 = null;



        	enterRule();

        try {
            // InternalEketal.g:7711:2: ( ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression ) )
            // InternalEketal.g:7712:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            {
            // InternalEketal.g:7712:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )
            int alt128=2;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalEketal.g:7713:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    {
                    // InternalEketal.g:7713:3: ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' )
                    // InternalEketal.g:7714:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}'
                    {
                    // InternalEketal.g:7714:4: ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) )
                    // InternalEketal.g:7715:5: ( ( () '{' ) )=> ( () otherlv_1= '{' )
                    {
                    // InternalEketal.g:7721:5: ( () otherlv_1= '{' )
                    // InternalEketal.g:7722:6: () otherlv_1= '{'
                    {
                    // InternalEketal.g:7722:6: ()
                    // InternalEketal.g:7723:7: 
                    {
                    if ( state.backtracking==0 ) {

                      							current = forceCreateModelElement(
                      								grammarAccess.getXAnnotationElementValueAccess().getXJArrayLiteralAction_0_0_0_0(),
                      								current);
                      						
                    }

                    }

                    otherlv_1=(Token)match(input,21,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValueAccess().getLeftCurlyBracketKeyword_0_0_0_1());
                      					
                    }

                    }


                    }

                    // InternalEketal.g:7735:4: ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( ((LA127_0>=RULE_ID && LA127_0<=RULE_STRING)||(LA127_0>=RULE_INT && LA127_0<=RULE_DECIMAL)||LA127_0==21||LA127_0==25||LA127_0==31||LA127_0==40||(LA127_0>=51 && LA127_0<=52)||LA127_0==69||(LA127_0>=90 && LA127_0<=92)||(LA127_0>=94 && LA127_0<=95)||(LA127_0>=97 && LA127_0<=102)) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalEketal.g:7736:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            {
                            // InternalEketal.g:7736:5: ( (lv_elements_2_0= ruleXAnnotationOrExpression ) )
                            // InternalEketal.g:7737:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            {
                            // InternalEketal.g:7737:6: (lv_elements_2_0= ruleXAnnotationOrExpression )
                            // InternalEketal.g:7738:7: lv_elements_2_0= ruleXAnnotationOrExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_elements_2_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                              							}
                              							add(
                              								current,
                              								"elements",
                              								lv_elements_2_0,
                              								"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalEketal.g:7755:5: (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )*
                            loop126:
                            do {
                                int alt126=2;
                                int LA126_0 = input.LA(1);

                                if ( (LA126_0==26) ) {
                                    alt126=1;
                                }


                                switch (alt126) {
                            	case 1 :
                            	    // InternalEketal.g:7756:6: otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    {
                            	    otherlv_3=(Token)match(input,26,FOLLOW_92); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getXAnnotationElementValueAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalEketal.g:7760:6: ( (lv_elements_4_0= ruleXAnnotationOrExpression ) )
                            	    // InternalEketal.g:7761:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    {
                            	    // InternalEketal.g:7761:7: (lv_elements_4_0= ruleXAnnotationOrExpression )
                            	    // InternalEketal.g:7762:8: lv_elements_4_0= ruleXAnnotationOrExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_elements_4_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXAnnotationElementValueRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"elements",
                            	      									lv_elements_4_0,
                            	      									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationOrExpression");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop126;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXAnnotationElementValueAccess().getRightCurlyBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:7787:3: this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationElementValueAccess().getXAnnotationOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_6=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValue"


    // $ANTLR start "entryRuleXAnnotation"
    // InternalEketal.g:7799:1: entryRuleXAnnotation returns [EObject current=null] : iv_ruleXAnnotation= ruleXAnnotation EOF ;
    public final EObject entryRuleXAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotation = null;


        try {
            // InternalEketal.g:7799:52: (iv_ruleXAnnotation= ruleXAnnotation EOF )
            // InternalEketal.g:7800:2: iv_ruleXAnnotation= ruleXAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotation"


    // $ANTLR start "ruleXAnnotation"
    // InternalEketal.g:7806:1: ruleXAnnotation returns [EObject current=null] : ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) ;
    public final EObject ruleXAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_elementValuePairs_4_0 = null;

        EObject lv_elementValuePairs_6_0 = null;

        EObject lv_value_7_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7812:2: ( ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? ) )
            // InternalEketal.g:7813:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            {
            // InternalEketal.g:7813:2: ( () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )? )
            // InternalEketal.g:7814:3: () otherlv_1= '@' ( ( ruleQualifiedName ) ) ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            {
            // InternalEketal.g:7814:3: ()
            // InternalEketal.g:7815:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXAnnotationAccess().getXAnnotationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,92,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXAnnotationAccess().getCommercialAtKeyword_1());
              		
            }
            // InternalEketal.g:7825:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:7826:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:7826:4: ( ruleQualifiedName )
            // InternalEketal.g:7827:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXAnnotationRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationAccess().getAnnotationTypeJvmAnnotationTypeCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_60);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:7841:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==25) && (synpred49_InternalEketal())) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalEketal.g:7842:4: ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')'
                    {
                    // InternalEketal.g:7842:4: ( ( '(' )=>otherlv_3= '(' )
                    // InternalEketal.g:7843:5: ( '(' )=>otherlv_3= '('
                    {
                    otherlv_3=(Token)match(input,25,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXAnnotationAccess().getLeftParenthesisKeyword_3_0());
                      				
                    }

                    }

                    // InternalEketal.g:7849:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?
                    int alt130=3;
                    alt130 = dfa130.predict(input);
                    switch (alt130) {
                        case 1 :
                            // InternalEketal.g:7850:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            {
                            // InternalEketal.g:7850:5: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* )
                            // InternalEketal.g:7851:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            {
                            // InternalEketal.g:7851:6: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) )
                            // InternalEketal.g:7852:7: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            {
                            // InternalEketal.g:7861:7: (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair )
                            // InternalEketal.g:7862:8: lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_17);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              								}
                              								add(
                              									current,
                              									"elementValuePairs",
                              									lv_elementValuePairs_4_0,
                              									"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalEketal.g:7879:6: (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )*
                            loop129:
                            do {
                                int alt129=2;
                                int LA129_0 = input.LA(1);

                                if ( (LA129_0==26) ) {
                                    alt129=1;
                                }


                                switch (alt129) {
                            	case 1 :
                            	    // InternalEketal.g:7880:7: otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    {
                            	    otherlv_5=(Token)match(input,26,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_5, grammarAccess.getXAnnotationAccess().getCommaKeyword_3_1_0_1_0());
                            	      						
                            	    }
                            	    // InternalEketal.g:7884:7: ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) )
                            	    // InternalEketal.g:7885:8: ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    {
                            	    // InternalEketal.g:7894:8: (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair )
                            	    // InternalEketal.g:7895:9: lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXAnnotationAccess().getElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_17);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"elementValuePairs",
                            	      										lv_elementValuePairs_6_0,
                            	      										"org.eclipse.xtext.xbase.annotations.XbaseWithAnnotations.XAnnotationElementValuePair");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop129;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalEketal.g:7915:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            {
                            // InternalEketal.g:7915:5: ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) )
                            // InternalEketal.g:7916:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            {
                            // InternalEketal.g:7916:6: (lv_value_7_0= ruleXAnnotationElementValueOrCommaList )
                            // InternalEketal.g:7917:7: lv_value_7_0= ruleXAnnotationElementValueOrCommaList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAnnotationAccess().getValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_25);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAnnotationRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_7_0,
                              								"jbase.Jbase.XAnnotationElementValueOrCommaList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXAnnotationAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotation"


    // $ANTLR start "entryRuleXAnnotationElementValuePair"
    // InternalEketal.g:7944:1: entryRuleXAnnotationElementValuePair returns [EObject current=null] : iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF ;
    public final EObject entryRuleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationElementValuePair = null;


        try {
            // InternalEketal.g:7944:68: (iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF )
            // InternalEketal.g:7945:2: iv_ruleXAnnotationElementValuePair= ruleXAnnotationElementValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationElementValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationElementValuePair"


    // $ANTLR start "ruleXAnnotationElementValuePair"
    // InternalEketal.g:7951:1: ruleXAnnotationElementValuePair returns [EObject current=null] : ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) ;
    public final EObject ruleXAnnotationElementValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:7957:2: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) ) )
            // InternalEketal.g:7958:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            {
            // InternalEketal.g:7958:2: ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) ) )
            // InternalEketal.g:7959:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) ) ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            {
            // InternalEketal.g:7959:3: ( ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' ) )
            // InternalEketal.g:7960:4: ( ( ( ( ruleValidID ) ) '=' ) )=> ( ( ( ruleValidID ) ) otherlv_1= '=' )
            {
            // InternalEketal.g:7969:4: ( ( ( ruleValidID ) ) otherlv_1= '=' )
            // InternalEketal.g:7970:5: ( ( ruleValidID ) ) otherlv_1= '='
            {
            // InternalEketal.g:7970:5: ( ( ruleValidID ) )
            // InternalEketal.g:7971:6: ( ruleValidID )
            {
            // InternalEketal.g:7971:6: ( ruleValidID )
            // InternalEketal.g:7972:7: ruleValidID
            {
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXAnnotationElementValuePairRule());
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getElementJvmOperationCrossReference_0_0_0_0());
              						
            }
            pushFollow(FOLLOW_8);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_1=(Token)match(input,19,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXAnnotationElementValuePairAccess().getEqualsSignKeyword_0_0_1());
              				
            }

            }


            }

            // InternalEketal.g:7992:3: ( (lv_value_2_0= ruleXAnnotationElementValue ) )
            // InternalEketal.g:7993:4: (lv_value_2_0= ruleXAnnotationElementValue )
            {
            // InternalEketal.g:7993:4: (lv_value_2_0= ruleXAnnotationElementValue )
            // InternalEketal.g:7994:5: lv_value_2_0= ruleXAnnotationElementValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXAnnotationElementValuePairAccess().getValueXAnnotationElementValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXAnnotationElementValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"jbase.Jbase.XAnnotationElementValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationElementValuePair"


    // $ANTLR start "entryRuleXAnnotationOrExpression"
    // InternalEketal.g:8015:1: entryRuleXAnnotationOrExpression returns [EObject current=null] : iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF ;
    public final EObject entryRuleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAnnotationOrExpression = null;


        try {
            // InternalEketal.g:8015:64: (iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF )
            // InternalEketal.g:8016:2: iv_ruleXAnnotationOrExpression= ruleXAnnotationOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAnnotationOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAnnotationOrExpression"


    // $ANTLR start "ruleXAnnotationOrExpression"
    // InternalEketal.g:8022:1: ruleXAnnotationOrExpression returns [EObject current=null] : (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXAnnotationOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAnnotation_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:8028:2: ( (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:8029:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:8029:2: (this_XAnnotation_0= ruleXAnnotation | this_XExpression_1= ruleXExpression )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==92) ) {
                alt132=1;
            }
            else if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_STRING)||(LA132_0>=RULE_INT && LA132_0<=RULE_DECIMAL)||LA132_0==21||LA132_0==25||LA132_0==31||LA132_0==40||(LA132_0>=51 && LA132_0<=52)||LA132_0==69||(LA132_0>=90 && LA132_0<=91)||(LA132_0>=94 && LA132_0<=95)||(LA132_0>=97 && LA132_0<=102)) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalEketal.g:8030:3: this_XAnnotation_0= ruleXAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8039:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXAnnotationOrExpressionAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAnnotationOrExpression"


    // $ANTLR start "entryRuleXExpression"
    // InternalEketal.g:8051:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalEketal.g:8051:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalEketal.g:8052:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalEketal.g:8058:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8064:2: (this_XAssignment_0= ruleXAssignment )
            // InternalEketal.g:8065:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalEketal.g:8076:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalEketal.g:8076:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalEketal.g:8077:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalEketal.g:8083:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8089:2: (kw= '=' )
            // InternalEketal.g:8090:2: kw= '='
            {
            kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalEketal.g:8098:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalEketal.g:8098:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalEketal.g:8099:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalEketal.g:8105:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8111:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalEketal.g:8112:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalEketal.g:8112:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalEketal.g:8113:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_21);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8121:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==29) ) {
                    int LA133_2 = input.LA(2);

                    if ( (synpred53_InternalEketal()) ) {
                        alt133=1;
                    }


                }


                switch (alt133) {
            	case 1 :
            	    // InternalEketal.g:8122:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalEketal.g:8122:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalEketal.g:8123:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalEketal.g:8133:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalEketal.g:8134:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalEketal.g:8134:6: ()
            	    // InternalEketal.g:8135:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8141:6: ( ( ruleOpOr ) )
            	    // InternalEketal.g:8142:7: ( ruleOpOr )
            	    {
            	    // InternalEketal.g:8142:7: ( ruleOpOr )
            	    // InternalEketal.g:8143:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8159:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalEketal.g:8160:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalEketal.g:8160:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalEketal.g:8161:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"jbase.Jbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalEketal.g:8183:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalEketal.g:8183:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalEketal.g:8184:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalEketal.g:8190:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8196:2: (kw= '||' )
            // InternalEketal.g:8197:2: kw= '||'
            {
            kw=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleOpAnd"
    // InternalEketal.g:8205:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalEketal.g:8205:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalEketal.g:8206:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalEketal.g:8212:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8218:2: (kw= '&&' )
            // InternalEketal.g:8219:2: kw= '&&'
            {
            kw=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalEketal.g:8227:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalEketal.g:8227:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalEketal.g:8228:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalEketal.g:8234:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8240:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalEketal.g:8241:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalEketal.g:8241:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalEketal.g:8242:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_94);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8250:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==82) ) {
                    int LA134_2 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt134=1;
                    }


                }
                else if ( (LA134_0==83) ) {
                    int LA134_3 = input.LA(2);

                    if ( (synpred54_InternalEketal()) ) {
                        alt134=1;
                    }


                }


                switch (alt134) {
            	case 1 :
            	    // InternalEketal.g:8251:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalEketal.g:8251:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalEketal.g:8252:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalEketal.g:8262:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalEketal.g:8263:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalEketal.g:8263:6: ()
            	    // InternalEketal.g:8264:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8270:6: ( ( ruleOpEquality ) )
            	    // InternalEketal.g:8271:7: ( ruleOpEquality )
            	    {
            	    // InternalEketal.g:8271:7: ( ruleOpEquality )
            	    // InternalEketal.g:8272:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8288:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalEketal.g:8289:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalEketal.g:8289:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalEketal.g:8290:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalEketal.g:8312:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalEketal.g:8312:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalEketal.g:8313:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalEketal.g:8319:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8325:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalEketal.g:8326:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalEketal.g:8326:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalEketal.g:8327:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_95);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8335:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop135:
            do {
                int alt135=3;
                switch ( input.LA(1) ) {
                case 66:
                    {
                    int LA135_2 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt135=2;
                    }


                    }
                    break;
                case 67:
                    {
                    int LA135_3 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt135=2;
                    }


                    }
                    break;
                case 93:
                    {
                    int LA135_4 = input.LA(2);

                    if ( (synpred55_InternalEketal()) ) {
                        alt135=1;
                    }


                    }
                    break;
                case 68:
                    {
                    int LA135_5 = input.LA(2);

                    if ( (synpred56_InternalEketal()) ) {
                        alt135=2;
                    }


                    }
                    break;

                }

                switch (alt135) {
            	case 1 :
            	    // InternalEketal.g:8336:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalEketal.g:8336:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalEketal.g:8337:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalEketal.g:8337:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalEketal.g:8338:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalEketal.g:8344:6: ( () otherlv_2= 'instanceof' )
            	    // InternalEketal.g:8345:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalEketal.g:8345:7: ()
            	    // InternalEketal.g:8346:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,93,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalEketal.g:8358:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalEketal.g:8359:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalEketal.g:8359:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalEketal.g:8360:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"jbase.Jbase.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalEketal.g:8379:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalEketal.g:8379:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalEketal.g:8380:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalEketal.g:8380:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalEketal.g:8381:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalEketal.g:8391:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalEketal.g:8392:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalEketal.g:8392:7: ()
            	    // InternalEketal.g:8393:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalEketal.g:8399:7: ( ( ruleOpCompare ) )
            	    // InternalEketal.g:8400:8: ( ruleOpCompare )
            	    {
            	    // InternalEketal.g:8400:8: ( ruleOpCompare )
            	    // InternalEketal.g:8401:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8417:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalEketal.g:8418:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalEketal.g:8418:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalEketal.g:8419:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalEketal.g:8442:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalEketal.g:8442:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalEketal.g:8443:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalEketal.g:8449:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8455:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalEketal.g:8456:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalEketal.g:8456:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt136=4;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt136=1;
                }
                break;
            case 66:
                {
                int LA136_2 = input.LA(2);

                if ( (LA136_2==EOF||(LA136_2>=RULE_ID && LA136_2<=RULE_STRING)||(LA136_2>=RULE_INT && LA136_2<=RULE_DECIMAL)||LA136_2==21||LA136_2==25||LA136_2==31||LA136_2==40||(LA136_2>=51 && LA136_2<=52)||LA136_2==69||(LA136_2>=90 && LA136_2<=91)||(LA136_2>=94 && LA136_2<=95)||(LA136_2>=97 && LA136_2<=102)) ) {
                    alt136=4;
                }
                else if ( (LA136_2==19) ) {
                    alt136=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 2, input);

                    throw nvae;
                }
                }
                break;
            case 67:
                {
                alt136=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }

            switch (alt136) {
                case 1 :
                    // InternalEketal.g:8457:3: kw= '>='
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8463:3: (kw= '<' kw= '=' )
                    {
                    // InternalEketal.g:8463:3: (kw= '<' kw= '=' )
                    // InternalEketal.g:8464:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,66,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:8476:3: kw= '>'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:8482:3: kw= '<'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalEketal.g:8491:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalEketal.g:8491:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalEketal.g:8492:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalEketal.g:8498:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8504:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalEketal.g:8505:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalEketal.g:8505:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalEketal.g:8506:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8514:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==67) ) {
                    int LA137_2 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt137=1;
                    }


                }
                else if ( (LA137_0==86) ) {
                    int LA137_3 = input.LA(2);

                    if ( (synpred57_InternalEketal()) ) {
                        alt137=1;
                    }


                }


                switch (alt137) {
            	case 1 :
            	    // InternalEketal.g:8515:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalEketal.g:8515:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalEketal.g:8516:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalEketal.g:8526:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalEketal.g:8527:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalEketal.g:8527:6: ()
            	    // InternalEketal.g:8528:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8534:6: ( ( ruleOpOther ) )
            	    // InternalEketal.g:8535:7: ( ruleOpOther )
            	    {
            	    // InternalEketal.g:8535:7: ( ruleOpOther )
            	    // InternalEketal.g:8536:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8552:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalEketal.g:8553:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalEketal.g:8553:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalEketal.g:8554:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalEketal.g:8576:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalEketal.g:8576:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalEketal.g:8577:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalEketal.g:8583:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8589:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalEketal.g:8590:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalEketal.g:8590:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalEketal.g:8591:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8599:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==90) ) {
                    int LA138_2 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt138=1;
                    }


                }
                else if ( (LA138_0==40) ) {
                    int LA138_3 = input.LA(2);

                    if ( (synpred58_InternalEketal()) ) {
                        alt138=1;
                    }


                }


                switch (alt138) {
            	case 1 :
            	    // InternalEketal.g:8600:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalEketal.g:8600:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalEketal.g:8601:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalEketal.g:8611:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalEketal.g:8612:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalEketal.g:8612:6: ()
            	    // InternalEketal.g:8613:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8619:6: ( ( ruleOpAdd ) )
            	    // InternalEketal.g:8620:7: ( ruleOpAdd )
            	    {
            	    // InternalEketal.g:8620:7: ( ruleOpAdd )
            	    // InternalEketal.g:8621:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8637:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalEketal.g:8638:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalEketal.g:8638:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalEketal.g:8639:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalEketal.g:8661:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalEketal.g:8661:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalEketal.g:8662:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalEketal.g:8668:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8674:2: ( (kw= '+' | kw= '-' ) )
            // InternalEketal.g:8675:2: (kw= '+' | kw= '-' )
            {
            // InternalEketal.g:8675:2: (kw= '+' | kw= '-' )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==90) ) {
                alt139=1;
            }
            else if ( (LA139_0==40) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalEketal.g:8676:3: kw= '+'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8682:3: kw= '-'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalEketal.g:8691:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalEketal.g:8691:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalEketal.g:8692:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalEketal.g:8698:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8704:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalEketal.g:8705:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalEketal.g:8705:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalEketal.g:8706:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:8714:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop140:
            do {
                int alt140=2;
                switch ( input.LA(1) ) {
                case RULE_ANY:
                    {
                    int LA140_2 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt140=1;
                    }


                    }
                    break;
                case 84:
                    {
                    int LA140_3 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt140=1;
                    }


                    }
                    break;
                case 85:
                    {
                    int LA140_4 = input.LA(2);

                    if ( (synpred59_InternalEketal()) ) {
                        alt140=1;
                    }


                    }
                    break;

                }

                switch (alt140) {
            	case 1 :
            	    // InternalEketal.g:8715:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalEketal.g:8715:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalEketal.g:8716:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalEketal.g:8726:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalEketal.g:8727:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalEketal.g:8727:6: ()
            	    // InternalEketal.g:8728:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalEketal.g:8734:6: ( ( ruleOpMulti ) )
            	    // InternalEketal.g:8735:7: ( ruleOpMulti )
            	    {
            	    // InternalEketal.g:8735:7: ( ruleOpMulti )
            	    // InternalEketal.g:8736:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_51);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalEketal.g:8752:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalEketal.g:8753:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalEketal.g:8753:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalEketal.g:8754:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalEketal.g:8776:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalEketal.g:8776:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalEketal.g:8777:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalEketal.g:8783:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalEketal.g:8789:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalEketal.g:8790:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalEketal.g:8790:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==31||LA141_0==40||(LA141_0>=90 && LA141_0<=91)) ) {
                alt141=1;
            }
            else if ( ((LA141_0>=RULE_ID && LA141_0<=RULE_STRING)||(LA141_0>=RULE_INT && LA141_0<=RULE_DECIMAL)||LA141_0==21||LA141_0==25||(LA141_0>=51 && LA141_0<=52)||LA141_0==69||(LA141_0>=94 && LA141_0<=95)||(LA141_0>=97 && LA141_0<=102)) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalEketal.g:8791:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalEketal.g:8791:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalEketal.g:8792:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalEketal.g:8792:4: ()
                    // InternalEketal.g:8793:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalEketal.g:8799:4: ( ( ruleOpUnary ) )
                    // InternalEketal.g:8800:5: ( ruleOpUnary )
                    {
                    // InternalEketal.g:8800:5: ( ruleOpUnary )
                    // InternalEketal.g:8801:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8815:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalEketal.g:8816:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalEketal.g:8816:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalEketal.g:8817:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:8836:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalEketal.g:8848:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalEketal.g:8848:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalEketal.g:8849:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalEketal.g:8855:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:8861:2: ( (kw= '++' | kw= '--' ) )
            // InternalEketal.g:8862:2: (kw= '++' | kw= '--' )
            {
            // InternalEketal.g:8862:2: (kw= '++' | kw= '--' )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==94) ) {
                alt142=1;
            }
            else if ( (LA142_0==95) ) {
                alt142=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // InternalEketal.g:8863:3: kw= '++'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:8869:3: kw= '--'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalEketal.g:8878:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalEketal.g:8878:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalEketal.g:8879:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalEketal.g:8885:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8891:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalEketal.g:8892:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalEketal.g:8892:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalEketal.g:8893:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalEketal.g:8893:3: ()
            // InternalEketal.g:8894:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,96,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,21,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalEketal.g:8908:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( ((LA144_0>=RULE_ID && LA144_0<=RULE_STRING)||(LA144_0>=RULE_INT && LA144_0<=RULE_DECIMAL)||LA144_0==21||LA144_0==25||LA144_0==31||LA144_0==40||(LA144_0>=51 && LA144_0<=52)||LA144_0==69||(LA144_0>=90 && LA144_0<=91)||(LA144_0>=94 && LA144_0<=95)||(LA144_0>=97 && LA144_0<=102)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalEketal.g:8909:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8909:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8910:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8910:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8911:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:8928:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==26) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalEketal.g:8929:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:8933:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:8934:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:8934:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:8935:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalEketal.g:8962:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalEketal.g:8962:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalEketal.g:8963:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalEketal.g:8969:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:8975:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalEketal.g:8976:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalEketal.g:8976:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalEketal.g:8977:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalEketal.g:8977:3: ()
            // InternalEketal.g:8978:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,96,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,39,FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalEketal.g:8992:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( ((LA146_0>=RULE_ID && LA146_0<=RULE_STRING)||(LA146_0>=RULE_INT && LA146_0<=RULE_DECIMAL)||LA146_0==21||LA146_0==25||LA146_0==31||LA146_0==40||(LA146_0>=51 && LA146_0<=52)||LA146_0==69||(LA146_0>=90 && LA146_0<=91)||(LA146_0>=94 && LA146_0<=95)||(LA146_0>=97 && LA146_0<=102)) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalEketal.g:8993:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalEketal.g:8993:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalEketal.g:8994:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalEketal.g:8994:5: (lv_elements_3_0= ruleXExpression )
                    // InternalEketal.g:8995:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_99);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:9012:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop145:
                    do {
                        int alt145=2;
                        int LA145_0 = input.LA(1);

                        if ( (LA145_0==26) ) {
                            alt145=1;
                        }


                        switch (alt145) {
                    	case 1 :
                    	    // InternalEketal.g:9013:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,26,FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:9017:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalEketal.g:9018:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalEketal.g:9018:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalEketal.g:9019:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_99);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop145;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalEketal.g:9046:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalEketal.g:9046:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalEketal.g:9047:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalEketal.g:9053:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9059:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalEketal.g:9060:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalEketal.g:9060:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalEketal.g:9061:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalEketal.g:9061:3: ()
            // InternalEketal.g:9062:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:9068:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( ((LA148_0>=RULE_ID && LA148_0<=RULE_STRING)||(LA148_0>=RULE_INT && LA148_0<=RULE_DECIMAL)||LA148_0==21||LA148_0==25||LA148_0==31||LA148_0==40||(LA148_0>=51 && LA148_0<=53)||LA148_0==69||(LA148_0>=90 && LA148_0<=91)||(LA148_0>=94 && LA148_0<=95)||(LA148_0>=97 && LA148_0<=102)) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalEketal.g:9069:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalEketal.g:9069:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalEketal.g:9070:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalEketal.g:9070:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalEketal.g:9071:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalEketal.g:9088:4: (otherlv_2= ';' )?
            	    int alt147=2;
            	    int LA147_0 = input.LA(1);

            	    if ( (LA147_0==16) ) {
            	        alt147=1;
            	    }
            	    switch (alt147) {
            	        case 1 :
            	            // InternalEketal.g:9089:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,16,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalEketal.g:9099:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalEketal.g:9099:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalEketal.g:9100:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalEketal.g:9106:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9112:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalEketal.g:9113:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalEketal.g:9113:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalEketal.g:9114:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,25,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_25);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalEketal.g:9134:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalEketal.g:9134:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalEketal.g:9135:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalEketal.g:9141:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9147:2: ( ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression ) )
            // InternalEketal.g:9148:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            {
            // InternalEketal.g:9148:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalEketal.g:9149:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    {
                    // InternalEketal.g:9149:3: ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration )
                    // InternalEketal.g:9150:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XVariableDeclaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:9180:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalEketal.g:9192:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalEketal.g:9192:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalEketal.g:9193:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalEketal.g:9199:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9205:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalEketal.g:9206:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalEketal.g:9206:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalEketal.g:9207:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalEketal.g:9207:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_ID) ) {
                int LA150_1 = input.LA(2);

                if ( (LA150_1==RULE_ID||(LA150_1>=38 && LA150_1<=39)||LA150_1==66) ) {
                    alt150=1;
                }
            }
            switch (alt150) {
                case 1 :
                    // InternalEketal.g:9208:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalEketal.g:9208:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalEketal.g:9209:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"jbase.Jbase.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalEketal.g:9226:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalEketal.g:9227:4: (lv_name_1_0= ruleValidID )
            {
            // InternalEketal.g:9227:4: (lv_name_1_0= ruleValidID )
            // InternalEketal.g:9228:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalEketal.g:9249:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalEketal.g:9249:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalEketal.g:9250:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalEketal.g:9256:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9262:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalEketal.g:9263:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalEketal.g:9263:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt151=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt151=1;
                }
                break;
            case 97:
                {
                alt151=2;
                }
                break;
            case 52:
                {
                alt151=3;
                }
                break;
            case 51:
                {
                alt151=4;
                }
                break;
            case 98:
                {
                alt151=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }

            switch (alt151) {
                case 1 :
                    // InternalEketal.g:9264:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9275:3: kw= 'extends'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalEketal.g:9281:3: kw= 'static'
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalEketal.g:9287:3: kw= 'import'
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalEketal.g:9293:3: kw= 'extension'
                    {
                    kw=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalEketal.g:9302:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalEketal.g:9302:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalEketal.g:9303:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalEketal.g:9309:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9315:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalEketal.g:9316:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalEketal.g:9316:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==RULE_ID||(LA152_0>=51 && LA152_0<=52)||(LA152_0>=97 && LA152_0<=98)) ) {
                alt152=1;
            }
            else if ( (LA152_0==99) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalEketal.g:9317:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9328:3: kw= 'super'
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalEketal.g:9337:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalEketal.g:9337:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalEketal.g:9338:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalEketal.g:9344:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalEketal.g:9350:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalEketal.g:9351:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalEketal.g:9351:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalEketal.g:9352:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalEketal.g:9352:3: ()
            // InternalEketal.g:9353:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:9359:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==100) ) {
                alt153=1;
            }
            else if ( (LA153_0==101) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalEketal.g:9360:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9365:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalEketal.g:9365:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalEketal.g:9366:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalEketal.g:9366:5: (lv_isTrue_2_0= 'true' )
                    // InternalEketal.g:9367:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", true, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalEketal.g:9384:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalEketal.g:9384:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalEketal.g:9385:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalEketal.g:9391:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalEketal.g:9397:2: ( ( () otherlv_1= 'null' ) )
            // InternalEketal.g:9398:2: ( () otherlv_1= 'null' )
            {
            // InternalEketal.g:9398:2: ( () otherlv_1= 'null' )
            // InternalEketal.g:9399:3: () otherlv_1= 'null'
            {
            // InternalEketal.g:9399:3: ()
            // InternalEketal.g:9400:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalEketal.g:9414:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalEketal.g:9414:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalEketal.g:9415:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalEketal.g:9421:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9427:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalEketal.g:9428:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalEketal.g:9428:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalEketal.g:9429:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalEketal.g:9429:3: ()
            // InternalEketal.g:9430:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalEketal.g:9436:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalEketal.g:9437:4: (lv_value_1_0= ruleNumber )
            {
            // InternalEketal.g:9437:4: (lv_value_1_0= ruleNumber )
            // InternalEketal.g:9438:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalEketal.g:9459:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalEketal.g:9459:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalEketal.g:9460:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalEketal.g:9466:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9472:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalEketal.g:9473:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalEketal.g:9473:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalEketal.g:9474:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalEketal.g:9474:3: ()
            // InternalEketal.g:9475:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,103,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalEketal.g:9485:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalEketal.g:9486:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalEketal.g:9486:4: (lv_expression_2_0= ruleXExpression )
            // InternalEketal.g:9487:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalEketal.g:9508:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalEketal.g:9508:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalEketal.g:9509:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalEketal.g:9515:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9521:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalEketal.g:9522:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalEketal.g:9522:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalEketal.g:9523:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalEketal.g:9523:3: ()
            // InternalEketal.g:9524:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,104,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalEketal.g:9534:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt154=2;
            alt154 = dfa154.predict(input);
            switch (alt154) {
                case 1 :
                    // InternalEketal.g:9535:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalEketal.g:9536:4: (lv_expression_2_0= ruleXExpression )
                    // InternalEketal.g:9537:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalEketal.g:9558:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalEketal.g:9558:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalEketal.g:9559:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalEketal.g:9565:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalEketal.g:9571:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalEketal.g:9572:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalEketal.g:9572:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalEketal.g:9573:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalEketal.g:9583:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==38) ) {
                    int LA155_2 = input.LA(2);

                    if ( (LA155_2==RULE_ID) ) {
                        int LA155_3 = input.LA(3);

                        if ( (synpred62_InternalEketal()) ) {
                            alt155=1;
                        }


                    }


                }


                switch (alt155) {
            	case 1 :
            	    // InternalEketal.g:9584:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalEketal.g:9584:4: ( ( '.' )=>kw= '.' )
            	    // InternalEketal.g:9585:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_102);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalEketal.g:9607:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:9609:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalEketal.g:9610:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalEketal.g:9619:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEketal.g:9626:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalEketal.g:9627:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalEketal.g:9627:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==RULE_HEX) ) {
                alt159=1;
            }
            else if ( (LA159_0==RULE_INT||LA159_0==RULE_DECIMAL) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalEketal.g:9628:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9636:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalEketal.g:9636:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalEketal.g:9637:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalEketal.g:9637:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==RULE_INT) ) {
                        alt156=1;
                    }
                    else if ( (LA156_0==RULE_DECIMAL) ) {
                        alt156=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 156, 0, input);

                        throw nvae;
                    }
                    switch (alt156) {
                        case 1 :
                            // InternalEketal.g:9638:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalEketal.g:9646:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalEketal.g:9654:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==38) ) {
                        int LA158_1 = input.LA(2);

                        if ( (LA158_1==RULE_INT||LA158_1==RULE_DECIMAL) ) {
                            alt158=1;
                        }
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalEketal.g:9655:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,38,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalEketal.g:9660:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt157=2;
                            int LA157_0 = input.LA(1);

                            if ( (LA157_0==RULE_INT) ) {
                                alt157=1;
                            }
                            else if ( (LA157_0==RULE_DECIMAL) ) {
                                alt157=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 157, 0, input);

                                throw nvae;
                            }
                            switch (alt157) {
                                case 1 :
                                    // InternalEketal.g:9661:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalEketal.g:9669:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalEketal.g:9686:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalEketal.g:9686:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalEketal.g:9687:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalEketal.g:9693:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalEketal.g:9699:2: ( (kw= '[' kw= ']' ) )
            // InternalEketal.g:9700:2: (kw= '[' kw= ']' )
            {
            // InternalEketal.g:9700:2: (kw= '[' kw= ']' )
            // InternalEketal.g:9701:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,39,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalEketal.g:9715:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalEketal.g:9715:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalEketal.g:9716:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalEketal.g:9722:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9728:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalEketal.g:9729:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalEketal.g:9729:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalEketal.g:9730:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalEketal.g:9730:3: ( ( ruleQualifiedName ) )
            // InternalEketal.g:9731:4: ( ruleQualifiedName )
            {
            // InternalEketal.g:9731:4: ( ruleQualifiedName )
            // InternalEketal.g:9732:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_104);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalEketal.g:9746:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt164=2;
            alt164 = dfa164.predict(input);
            switch (alt164) {
                case 1 :
                    // InternalEketal.g:9747:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalEketal.g:9747:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalEketal.g:9748:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,66,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalEketal.g:9754:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalEketal.g:9755:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalEketal.g:9755:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalEketal.g:9756:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalEketal.g:9773:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==26) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalEketal.g:9774:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,26,FOLLOW_65); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalEketal.g:9778:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalEketal.g:9779:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalEketal.g:9779:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalEketal.g:9780:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_64);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop160;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,67,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalEketal.g:9802:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==38) ) {
                            int LA163_2 = input.LA(2);

                            if ( (LA163_2==RULE_ID) ) {
                                int LA163_3 = input.LA(3);

                                if ( (synpred64_InternalEketal()) ) {
                                    alt163=1;
                                }


                            }


                        }


                        switch (alt163) {
                    	case 1 :
                    	    // InternalEketal.g:9803:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalEketal.g:9803:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalEketal.g:9804:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalEketal.g:9810:6: ( () otherlv_7= '.' )
                    	    // InternalEketal.g:9811:7: () otherlv_7= '.'
                    	    {
                    	    // InternalEketal.g:9811:7: ()
                    	    // InternalEketal.g:9812:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:9824:5: ( ( ruleValidID ) )
                    	    // InternalEketal.g:9825:6: ( ruleValidID )
                    	    {
                    	    // InternalEketal.g:9825:6: ( ruleValidID )
                    	    // InternalEketal.g:9826:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalEketal.g:9840:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt162=2;
                    	    alt162 = dfa162.predict(input);
                    	    switch (alt162) {
                    	        case 1 :
                    	            // InternalEketal.g:9841:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalEketal.g:9841:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalEketal.g:9842:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,66,FOLLOW_65); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalEketal.g:9848:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalEketal.g:9849:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalEketal.g:9849:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalEketal.g:9850:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_64);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalEketal.g:9867:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop161:
                    	            do {
                    	                int alt161=2;
                    	                int LA161_0 = input.LA(1);

                    	                if ( (LA161_0==26) ) {
                    	                    alt161=1;
                    	                }


                    	                switch (alt161) {
                    	            	case 1 :
                    	            	    // InternalEketal.g:9868:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,26,FOLLOW_65); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalEketal.g:9872:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalEketal.g:9873:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalEketal.g:9873:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalEketal.g:9874:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_64);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop161;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,67,FOLLOW_102); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalEketal.g:9903:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalEketal.g:9903:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalEketal.g:9904:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalEketal.g:9910:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalEketal.g:9916:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalEketal.g:9917:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalEketal.g:9917:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==RULE_ID) ) {
                alt165=1;
            }
            else if ( (LA165_0==57) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }
            switch (alt165) {
                case 1 :
                    // InternalEketal.g:9918:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalEketal.g:9927:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalEketal.g:9939:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalEketal.g:9939:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalEketal.g:9940:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalEketal.g:9946:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:9952:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalEketal.g:9953:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalEketal.g:9953:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalEketal.g:9954:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalEketal.g:9954:3: ()
            // InternalEketal.g:9955:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,57,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalEketal.g:9965:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt168=3;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==97) ) {
                alt168=1;
            }
            else if ( (LA168_0==99) ) {
                alt168=2;
            }
            switch (alt168) {
                case 1 :
                    // InternalEketal.g:9966:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalEketal.g:9966:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalEketal.g:9967:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalEketal.g:9967:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalEketal.g:9968:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalEketal.g:9968:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalEketal.g:9969:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_90);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:9986:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==89) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // InternalEketal.g:9987:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalEketal.g:9987:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalEketal.g:9988:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_90);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop166;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10007:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalEketal.g:10007:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalEketal.g:10008:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalEketal.g:10008:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalEketal.g:10009:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalEketal.g:10009:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalEketal.g:10010:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_90);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalEketal.g:10027:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==89) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalEketal.g:10028:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalEketal.g:10028:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalEketal.g:10029:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_90);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalEketal.g:10052:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalEketal.g:10052:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalEketal.g:10053:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalEketal.g:10059:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10065:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10066:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10066:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10067:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalEketal.g:10071:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10072:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10072:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10073:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalEketal.g:10094:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalEketal.g:10094:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalEketal.g:10095:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalEketal.g:10101:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10107:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10108:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10108:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10109:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,89,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:10113:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10114:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10114:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10115:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalEketal.g:10136:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalEketal.g:10136:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalEketal.g:10137:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalEketal.g:10143:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10149:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10150:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10150:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10151:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,99,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalEketal.g:10155:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10156:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10156:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10157:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalEketal.g:10178:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalEketal.g:10178:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalEketal.g:10179:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalEketal.g:10185:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10191:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalEketal.g:10192:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalEketal.g:10192:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalEketal.g:10193:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,89,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalEketal.g:10197:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalEketal.g:10198:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalEketal.g:10198:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalEketal.g:10199:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"jbase.Jbase.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalEketal.g:10220:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalEketal.g:10220:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalEketal.g:10221:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalEketal.g:10227:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10233:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalEketal.g:10234:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalEketal.g:10234:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalEketal.g:10235:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_29);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,38,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,RULE_ANY,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalEketal.g:10259:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalEketal.g:10259:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalEketal.g:10260:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalEketal.g:10266:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalEketal.g:10272:2: (this_ID_0= RULE_ID )
            // InternalEketal.g:10273:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalEketal.g:10283:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalEketal.g:10283:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalEketal.g:10284:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalEketal.g:10290:1: ruleXImportSection returns [EObject current=null] : ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10296:2: ( ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalEketal.g:10297:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalEketal.g:10297:2: ( ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt169=0;
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==51) && (synpred66_InternalEketal())) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalEketal.g:10298:3: ( 'import' )=> (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalEketal.g:10299:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalEketal.g:10300:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"jbase.Jbase.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt169 >= 1 ) break loop169;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(169, input);
                        throw eee;
                }
                cnt169++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalEketal.g:10320:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalEketal.g:10320:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalEketal.g:10321:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalEketal.g:10327:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalEketal.g:10333:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalEketal.g:10334:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalEketal.g:10334:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt170=0;
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==RULE_ID) ) {
                    int LA170_2 = input.LA(2);

                    if ( (LA170_2==38) ) {
                        alt170=1;
                    }


                }


                switch (alt170) {
            	case 1 :
            	    // InternalEketal.g:10335:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_29);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,38,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt170 >= 1 ) break loop170;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(170, input);
                        throw eee;
                }
                cnt170++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"


    // $ANTLR start "ruleProtocol"
    // InternalEketal.g:10354:1: ruleProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'UDP' ) | (enumLiteral_1= 'TCP' ) | (enumLiteral_2= 'TCP_NIO2' ) ) ;
    public final Enumerator ruleProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:10360:2: ( ( (enumLiteral_0= 'UDP' ) | (enumLiteral_1= 'TCP' ) | (enumLiteral_2= 'TCP_NIO2' ) ) )
            // InternalEketal.g:10361:2: ( (enumLiteral_0= 'UDP' ) | (enumLiteral_1= 'TCP' ) | (enumLiteral_2= 'TCP_NIO2' ) )
            {
            // InternalEketal.g:10361:2: ( (enumLiteral_0= 'UDP' ) | (enumLiteral_1= 'TCP' ) | (enumLiteral_2= 'TCP_NIO2' ) )
            int alt171=3;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt171=1;
                }
                break;
            case 106:
                {
                alt171=2;
                }
                break;
            case 107:
                {
                alt171=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }

            switch (alt171) {
                case 1 :
                    // InternalEketal.g:10362:3: (enumLiteral_0= 'UDP' )
                    {
                    // InternalEketal.g:10362:3: (enumLiteral_0= 'UDP' )
                    // InternalEketal.g:10363:4: enumLiteral_0= 'UDP'
                    {
                    enumLiteral_0=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getProtocolAccess().getUDPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getProtocolAccess().getUDPEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10370:3: (enumLiteral_1= 'TCP' )
                    {
                    // InternalEketal.g:10370:3: (enumLiteral_1= 'TCP' )
                    // InternalEketal.g:10371:4: enumLiteral_1= 'TCP'
                    {
                    enumLiteral_1=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getProtocolAccess().getTCPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getProtocolAccess().getTCPEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:10378:3: (enumLiteral_2= 'TCP_NIO2' )
                    {
                    // InternalEketal.g:10378:3: (enumLiteral_2= 'TCP_NIO2' )
                    // InternalEketal.g:10379:4: enumLiteral_2= 'TCP_NIO2'
                    {
                    enumLiteral_2=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getProtocolAccess().getTCP_NIO2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getProtocolAccess().getTCP_NIO2EnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProtocol"


    // $ANTLR start "ruleTPrefix"
    // InternalEketal.g:10389:1: ruleTPrefix returns [Enumerator current=null] : ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) ;
    public final Enumerator ruleTPrefix() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalEketal.g:10395:2: ( ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) ) )
            // InternalEketal.g:10396:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            {
            // InternalEketal.g:10396:2: ( (enumLiteral_0= 'call' ) | (enumLiteral_1= 'execution' ) )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==108) ) {
                alt172=1;
            }
            else if ( (LA172_0==109) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalEketal.g:10397:3: (enumLiteral_0= 'call' )
                    {
                    // InternalEketal.g:10397:3: (enumLiteral_0= 'call' )
                    // InternalEketal.g:10398:4: enumLiteral_0= 'call'
                    {
                    enumLiteral_0=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getTPrefixAccess().getCallEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10405:3: (enumLiteral_1= 'execution' )
                    {
                    // InternalEketal.g:10405:3: (enumLiteral_1= 'execution' )
                    // InternalEketal.g:10406:4: enumLiteral_1= 'execution'
                    {
                    enumLiteral_1=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getTPrefixAccess().getExecutionEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTPrefix"


    // $ANTLR start "ruleStateType"
    // InternalEketal.g:10416:1: ruleStateType returns [Enumerator current=null] : ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) ;
    public final Enumerator ruleStateType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:10422:2: ( ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) ) )
            // InternalEketal.g:10423:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            {
            // InternalEketal.g:10423:2: ( (enumLiteral_0= 'state' ) | (enumLiteral_1= 'start' ) | (enumLiteral_2= 'end' ) )
            int alt173=3;
            switch ( input.LA(1) ) {
            case 110:
                {
                alt173=1;
                }
                break;
            case 111:
                {
                alt173=2;
                }
                break;
            case 112:
                {
                alt173=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }

            switch (alt173) {
                case 1 :
                    // InternalEketal.g:10424:3: (enumLiteral_0= 'state' )
                    {
                    // InternalEketal.g:10424:3: (enumLiteral_0= 'state' )
                    // InternalEketal.g:10425:4: enumLiteral_0= 'state'
                    {
                    enumLiteral_0=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getStateTypeAccess().getStateEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10432:3: (enumLiteral_1= 'start' )
                    {
                    // InternalEketal.g:10432:3: (enumLiteral_1= 'start' )
                    // InternalEketal.g:10433:4: enumLiteral_1= 'start'
                    {
                    enumLiteral_1=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getStateTypeAccess().getStartEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:10440:3: (enumLiteral_2= 'end' )
                    {
                    // InternalEketal.g:10440:3: (enumLiteral_2= 'end' )
                    // InternalEketal.g:10441:4: enumLiteral_2= 'end'
                    {
                    enumLiteral_2=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getStateTypeAccess().getEndEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateType"


    // $ANTLR start "rulePos"
    // InternalEketal.g:10451:1: rulePos returns [Enumerator current=null] : ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) ;
    public final Enumerator rulePos() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalEketal.g:10457:2: ( ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) ) )
            // InternalEketal.g:10458:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            {
            // InternalEketal.g:10458:2: ( (enumLiteral_0= 'before' ) | (enumLiteral_1= 'around' ) | (enumLiteral_2= 'after' ) )
            int alt174=3;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt174=1;
                }
                break;
            case 114:
                {
                alt174=2;
                }
                break;
            case 115:
                {
                alt174=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }

            switch (alt174) {
                case 1 :
                    // InternalEketal.g:10459:3: (enumLiteral_0= 'before' )
                    {
                    // InternalEketal.g:10459:3: (enumLiteral_0= 'before' )
                    // InternalEketal.g:10460:4: enumLiteral_0= 'before'
                    {
                    enumLiteral_0=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPosAccess().getBeforeEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEketal.g:10467:3: (enumLiteral_1= 'around' )
                    {
                    // InternalEketal.g:10467:3: (enumLiteral_1= 'around' )
                    // InternalEketal.g:10468:4: enumLiteral_1= 'around'
                    {
                    enumLiteral_1=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPosAccess().getAroundEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEketal.g:10475:3: (enumLiteral_2= 'after' )
                    {
                    // InternalEketal.g:10475:3: (enumLiteral_2= 'after' )
                    // InternalEketal.g:10476:4: enumLiteral_2= 'after'
                    {
                    enumLiteral_2=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getPosAccess().getAfterEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePos"

    // $ANTLR start synpred1_InternalEketal
    public final void synpred1_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:105:5: ( ';' )
        // InternalEketal.g:105:6: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEketal

    // $ANTLR start synpred2_InternalEketal
    public final void synpred2_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2750:4: ( ruleXBlockExpression )
        // InternalEketal.g:2750:5: ruleXBlockExpression
        {
        pushFollow(FOLLOW_2);
        ruleXBlockExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEketal

    // $ANTLR start synpred4_InternalEketal
    public final void synpred4_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2903:4: ( ';' )
        // InternalEketal.g:2903:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalEketal

    // $ANTLR start synpred5_InternalEketal
    public final void synpred5_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:2937:4: ( ( () ruleArrayBrackets ) )
        // InternalEketal.g:2937:5: ( () ruleArrayBrackets )
        {
        // InternalEketal.g:2937:5: ( () ruleArrayBrackets )
        // InternalEketal.g:2938:5: () ruleArrayBrackets
        {
        // InternalEketal.g:2938:5: ()
        // InternalEketal.g:2939:5: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalEketal

    // $ANTLR start synpred6_InternalEketal
    public final void synpred6_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3099:4: ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )
        // InternalEketal.g:3099:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        {
        // InternalEketal.g:3099:5: ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' )
        // InternalEketal.g:3100:5: () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':'
        {
        // InternalEketal.g:3100:5: ()
        // InternalEketal.g:3101:5: 
        {
        }

        match(input,71,FOLLOW_15); if (state.failed) return ;
        match(input,25,FOLLOW_18); if (state.failed) return ;
        // InternalEketal.g:3104:5: ( ( ruleFullJvmFormalParameter ) )
        // InternalEketal.g:3105:6: ( ruleFullJvmFormalParameter )
        {
        // InternalEketal.g:3105:6: ( ruleFullJvmFormalParameter )
        // InternalEketal.g:3106:7: ruleFullJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleFullJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalEketal

    // $ANTLR start synpred7_InternalEketal
    public final void synpred7_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3141:4: ( ( () 'try' ( ( '(' ) ) ) )
        // InternalEketal.g:3141:5: ( () 'try' ( ( '(' ) ) )
        {
        // InternalEketal.g:3141:5: ( () 'try' ( ( '(' ) ) )
        // InternalEketal.g:3142:5: () 'try' ( ( '(' ) )
        {
        // InternalEketal.g:3142:5: ()
        // InternalEketal.g:3143:5: 
        {
        }

        match(input,78,FOLLOW_15); if (state.failed) return ;
        // InternalEketal.g:3145:5: ( ( '(' ) )
        // InternalEketal.g:3146:6: ( '(' )
        {
        // InternalEketal.g:3146:6: ( '(' )
        // InternalEketal.g:3147:7: '('
        {
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalEketal

    // $ANTLR start synpred8_InternalEketal
    public final void synpred8_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3172:4: ( ( () 'synchronized' '(' ) )
        // InternalEketal.g:3172:5: ( () 'synchronized' '(' )
        {
        // InternalEketal.g:3172:5: ( () 'synchronized' '(' )
        // InternalEketal.g:3173:5: () 'synchronized' '('
        {
        // InternalEketal.g:3173:5: ()
        // InternalEketal.g:3174:5: 
        {
        }

        match(input,81,FOLLOW_15); if (state.failed) return ;
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalEketal

    // $ANTLR start synpred9_InternalEketal
    public final void synpred9_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3309:4: ( ';' )
        // InternalEketal.g:3309:5: ';'
        {
        match(input,16,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalEketal

    // $ANTLR start synpred11_InternalEketal
    public final void synpred11_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3591:5: ( ',' )
        // InternalEketal.g:3591:6: ','
        {
        match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalEketal

    // $ANTLR start synpred12_InternalEketal
    public final void synpred12_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3708:5: ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )
        // InternalEketal.g:3708:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        {
        // InternalEketal.g:3708:6: ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign )
        // InternalEketal.g:3709:6: () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign
        {
        // InternalEketal.g:3709:6: ()
        // InternalEketal.g:3710:6: 
        {
        }

        // InternalEketal.g:3711:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:3712:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:3712:7: ( ruleFeatureCallID )
        // InternalEketal.g:3713:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_54);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,39,FOLLOW_51); if (state.failed) return ;
        // InternalEketal.g:3717:6: ( ( ruleXExpression ) )
        // InternalEketal.g:3718:7: ( ruleXExpression )
        {
        // InternalEketal.g:3718:7: ( ruleXExpression )
        // InternalEketal.g:3719:8: ruleXExpression
        {
        pushFollow(FOLLOW_33);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,41,FOLLOW_55); if (state.failed) return ;
        // InternalEketal.g:3723:6: ( '[' ( ( ruleXExpression ) ) ']' )*
        loop176:
        do {
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==39) ) {
                alt176=1;
            }


            switch (alt176) {
        	case 1 :
        	    // InternalEketal.g:3724:7: '[' ( ( ruleXExpression ) ) ']'
        	    {
        	    match(input,39,FOLLOW_51); if (state.failed) return ;
        	    // InternalEketal.g:3725:7: ( ( ruleXExpression ) )
        	    // InternalEketal.g:3726:8: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:3726:8: ( ruleXExpression )
        	    // InternalEketal.g:3727:9: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_33);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,41,FOLLOW_55); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop176;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalEketal

    // $ANTLR start synpred13_InternalEketal
    public final void synpred13_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3847:5: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:3847:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:3847:6: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:3848:6: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:3848:6: ()
        // InternalEketal.g:3849:6: 
        {
        }

        // InternalEketal.g:3850:6: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:3851:7: ( ruleFeatureCallID )
        {
        // InternalEketal.g:3851:7: ( ruleFeatureCallID )
        // InternalEketal.g:3852:8: ruleFeatureCallID
        {
        pushFollow(FOLLOW_55);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalEketal

    // $ANTLR start synpred14_InternalEketal
    public final void synpred14_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3924:7: ( ( () '?' ) )
        // InternalEketal.g:3924:8: ( () '?' )
        {
        // InternalEketal.g:3924:8: ( () '?' )
        // InternalEketal.g:3925:8: () '?'
        {
        // InternalEketal.g:3925:8: ()
        // InternalEketal.g:3926:8: 
        {
        }

        match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalEketal

    // $ANTLR start synpred15_InternalEketal
    public final void synpred15_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:3990:7: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalEketal.g:3990:8: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalEketal.g:3990:8: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalEketal.g:3991:8: () ( ( ruleOpMultiAssign ) )
        {
        // InternalEketal.g:3991:8: ()
        // InternalEketal.g:3992:8: 
        {
        }

        // InternalEketal.g:3993:8: ( ( ruleOpMultiAssign ) )
        // InternalEketal.g:3994:9: ( ruleOpMultiAssign )
        {
        // InternalEketal.g:3994:9: ( ruleOpMultiAssign )
        // InternalEketal.g:3995:10: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred15_InternalEketal

    // $ANTLR start synpred16_InternalEketal
    public final void synpred16_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4192:7: ( '[' )
        // InternalEketal.g:4192:8: '['
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalEketal

    // $ANTLR start synpred17_InternalEketal
    public final void synpred17_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4180:4: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:4180:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:4180:5: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:4181:5: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:4181:5: ()
        // InternalEketal.g:4182:5: 
        {
        }

        match(input,39,FOLLOW_51); if (state.failed) return ;
        // InternalEketal.g:4184:5: ( ( ruleXExpression ) )
        // InternalEketal.g:4185:6: ( ruleXExpression )
        {
        // InternalEketal.g:4185:6: ( ruleXExpression )
        // InternalEketal.g:4186:7: ruleXExpression
        {
        pushFollow(FOLLOW_33);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,41,FOLLOW_47); if (state.failed) return ;
        // InternalEketal.g:4190:5: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop177:
        do {
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==39) && (synpred16_InternalEketal())) {
                alt177=1;
            }


            switch (alt177) {
        	case 1 :
        	    // InternalEketal.g:4191:6: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:4191:6: ( ( '[' )=> '[' )
        	    // InternalEketal.g:4192:7: ( '[' )=> '['
        	    {
        	    match(input,39,FOLLOW_51); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:4195:6: ( ( ruleXExpression ) )
        	    // InternalEketal.g:4196:7: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:4196:7: ( ruleXExpression )
        	    // InternalEketal.g:4197:8: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_33);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,41,FOLLOW_47); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop177;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred17_InternalEketal

    // $ANTLR start synpred18_InternalEketal
    public final void synpred18_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4241:7: ( '[' )
        // InternalEketal.g:4241:8: '['
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_InternalEketal

    // $ANTLR start synpred19_InternalEketal
    public final void synpred19_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4317:5: ( ( '(' ) )
        // InternalEketal.g:4317:6: ( '(' )
        {
        // InternalEketal.g:4317:6: ( '(' )
        // InternalEketal.g:4318:6: '('
        {
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEketal

    // $ANTLR start synpred20_InternalEketal
    public final void synpred20_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4433:5: ( ( '<' ) )
        // InternalEketal.g:4433:6: ( '<' )
        {
        // InternalEketal.g:4433:6: ( '<' )
        // InternalEketal.g:4434:6: '<'
        {
        match(input,66,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalEketal

    // $ANTLR start synpred21_InternalEketal
    public final void synpred21_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4503:5: ( ( '(' ) )
        // InternalEketal.g:4503:6: ( '(' )
        {
        // InternalEketal.g:4503:6: ( '(' )
        // InternalEketal.g:4504:6: '('
        {
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEketal

    // $ANTLR start synpred23_InternalEketal
    public final void synpred23_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4681:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:4681:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:4681:6: ( ruleXJArrayDimension )
        // InternalEketal.g:4682:6: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalEketal

    // $ANTLR start synpred24_InternalEketal
    public final void synpred24_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4728:4: ( ( ruleXJArrayLiteral ) )
        // InternalEketal.g:4728:5: ( ruleXJArrayLiteral )
        {
        // InternalEketal.g:4728:5: ( ruleXJArrayLiteral )
        // InternalEketal.g:4729:5: ruleXJArrayLiteral
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalEketal

    // $ANTLR start synpred25_InternalEketal
    public final void synpred25_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4800:4: ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )
        // InternalEketal.g:4800:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        {
        // InternalEketal.g:4800:5: ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) )
        // InternalEketal.g:4801:5: () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) )
        {
        // InternalEketal.g:4801:5: ()
        // InternalEketal.g:4802:5: 
        {
        }

        match(input,25,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:4804:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:4805:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:4805:6: ( ruleJvmTypeReference )
        // InternalEketal.g:4806:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_25);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,27,FOLLOW_51); if (state.failed) return ;
        // InternalEketal.g:4810:5: ( ( ruleXExpression ) )
        // InternalEketal.g:4811:6: ( ruleXExpression )
        {
        // InternalEketal.g:4811:6: ( ruleXExpression )
        // InternalEketal.g:4812:7: ruleXExpression
        {
        pushFollow(FOLLOW_2);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred25_InternalEketal

    // $ANTLR start synpred26_InternalEketal
    public final void synpred26_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4903:5: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4903:6: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4903:6: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4904:6: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4904:6: ()
        // InternalEketal.g:4905:6: 
        {
        }

        // InternalEketal.g:4906:6: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4907:7: ( ruleOpPostfix )
        {
        // InternalEketal.g:4907:7: ( ruleOpPostfix )
        // InternalEketal.g:4908:8: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred26_InternalEketal

    // $ANTLR start synpred27_InternalEketal
    public final void synpred27_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:4971:6: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalEketal.g:4971:7: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalEketal.g:4971:7: ( () ( ( ruleOpPostfix ) ) )
        // InternalEketal.g:4972:7: () ( ( ruleOpPostfix ) )
        {
        // InternalEketal.g:4972:7: ()
        // InternalEketal.g:4973:7: 
        {
        }

        // InternalEketal.g:4974:7: ( ( ruleOpPostfix ) )
        // InternalEketal.g:4975:8: ( ruleOpPostfix )
        {
        // InternalEketal.g:4975:8: ( ruleOpPostfix )
        // InternalEketal.g:4976:9: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred27_InternalEketal

    // $ANTLR start synpred28_InternalEketal
    public final void synpred28_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5021:9: ( '[' )
        // InternalEketal.g:5021:10: '['
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_InternalEketal

    // $ANTLR start synpred29_InternalEketal
    public final void synpred29_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5009:6: ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )
        // InternalEketal.g:5009:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        {
        // InternalEketal.g:5009:7: ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* )
        // InternalEketal.g:5010:7: () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        {
        // InternalEketal.g:5010:7: ()
        // InternalEketal.g:5011:7: 
        {
        }

        match(input,39,FOLLOW_51); if (state.failed) return ;
        // InternalEketal.g:5013:7: ( ( ruleXExpression ) )
        // InternalEketal.g:5014:8: ( ruleXExpression )
        {
        // InternalEketal.g:5014:8: ( ruleXExpression )
        // InternalEketal.g:5015:9: ruleXExpression
        {
        pushFollow(FOLLOW_33);
        ruleXExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,41,FOLLOW_47); if (state.failed) return ;
        // InternalEketal.g:5019:7: ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )*
        loop178:
        do {
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==39) && (synpred28_InternalEketal())) {
                alt178=1;
            }


            switch (alt178) {
        	case 1 :
        	    // InternalEketal.g:5020:8: ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']'
        	    {
        	    // InternalEketal.g:5020:8: ( ( '[' )=> '[' )
        	    // InternalEketal.g:5021:9: ( '[' )=> '['
        	    {
        	    match(input,39,FOLLOW_51); if (state.failed) return ;

        	    }

        	    // InternalEketal.g:5024:8: ( ( ruleXExpression ) )
        	    // InternalEketal.g:5025:9: ( ruleXExpression )
        	    {
        	    // InternalEketal.g:5025:9: ( ruleXExpression )
        	    // InternalEketal.g:5026:10: ruleXExpression
        	    {
        	    pushFollow(FOLLOW_33);
        	    ruleXExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    match(input,41,FOLLOW_47); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop178;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred29_InternalEketal

    // $ANTLR start synpred30_InternalEketal
    public final void synpred30_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5070:9: ( '[' )
        // InternalEketal.g:5070:10: '['
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred30_InternalEketal

    // $ANTLR start synpred31_InternalEketal
    public final void synpred31_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5133:5: ( ( () ( ( ruleArrayBrackets ) )* '.' 'class' ) )
        // InternalEketal.g:5133:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        {
        // InternalEketal.g:5133:6: ( () ( ( ruleArrayBrackets ) )* '.' 'class' )
        // InternalEketal.g:5134:6: () ( ( ruleArrayBrackets ) )* '.' 'class'
        {
        // InternalEketal.g:5134:6: ()
        // InternalEketal.g:5135:6: 
        {
        }

        // InternalEketal.g:5136:6: ( ( ruleArrayBrackets ) )*
        loop179:
        do {
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==39) ) {
                alt179=1;
            }


            switch (alt179) {
        	case 1 :
        	    // InternalEketal.g:5137:7: ( ruleArrayBrackets )
        	    {
        	    // InternalEketal.g:5137:7: ( ruleArrayBrackets )
        	    // InternalEketal.g:5138:8: ruleArrayBrackets
        	    {
        	    pushFollow(FOLLOW_70);
        	    ruleArrayBrackets();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop179;
            }
        } while (true);

        match(input,38,FOLLOW_71); if (state.failed) return ;
        match(input,70,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalEketal

    // $ANTLR start synpred32_InternalEketal
    public final void synpred32_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5185:6: ( ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalEketal.g:5185:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalEketal.g:5185:7: ( () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalEketal.g:5186:7: () '.' ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalEketal.g:5186:7: ()
        // InternalEketal.g:5187:7: 
        {
        }

        match(input,38,FOLLOW_72); if (state.failed) return ;
        // InternalEketal.g:5189:7: ( ( ruleFeatureCallID ) )
        // InternalEketal.g:5190:8: ( ruleFeatureCallID )
        {
        // InternalEketal.g:5190:8: ( ruleFeatureCallID )
        // InternalEketal.g:5191:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_55);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEketal

    // $ANTLR start synpred33_InternalEketal
    public final void synpred33_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5257:6: ( ( () '.' ) )
        // InternalEketal.g:5257:7: ( () '.' )
        {
        // InternalEketal.g:5257:7: ( () '.' )
        // InternalEketal.g:5258:7: () '.'
        {
        // InternalEketal.g:5258:7: ()
        // InternalEketal.g:5259:7: 
        {
        }

        match(input,38,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEketal

    // $ANTLR start synpred34_InternalEketal
    public final void synpred34_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5295:7: ( ( '(' ) )
        // InternalEketal.g:5295:8: ( '(' )
        {
        // InternalEketal.g:5295:8: ( '(' )
        // InternalEketal.g:5296:8: '('
        {
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalEketal

    // $ANTLR start synpred36_InternalEketal
    public final void synpred36_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:5735:5: ( 'else' )
        // InternalEketal.g:5735:6: 'else'
        {
        match(input,72,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred36_InternalEketal

    // $ANTLR start synpred38_InternalEketal
    public final void synpred38_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6479:7: ( 'finally' )
        // InternalEketal.g:6479:8: 'finally'
        {
        match(input,79,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalEketal

    // $ANTLR start synpred41_InternalEketal
    public final void synpred41_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:6719:4: ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )
        // InternalEketal.g:6719:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        {
        // InternalEketal.g:6719:5: ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) )
        // InternalEketal.g:6720:5: () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) )
        {
        // InternalEketal.g:6720:5: ()
        // InternalEketal.g:6721:5: 
        {
        }

        match(input,69,FOLLOW_3); if (state.failed) return ;
        // InternalEketal.g:6723:5: ( ( ruleQualifiedName ) )
        // InternalEketal.g:6724:6: ( ruleQualifiedName )
        {
        // InternalEketal.g:6724:6: ( ruleQualifiedName )
        // InternalEketal.g:6725:7: ruleQualifiedName
        {
        pushFollow(FOLLOW_54);
        ruleQualifiedName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:6728:5: ( ( ruleXJArrayDimension ) )
        // InternalEketal.g:6729:6: ( ruleXJArrayDimension )
        {
        // InternalEketal.g:6729:6: ( ruleXJArrayDimension )
        // InternalEketal.g:6730:7: ruleXJArrayDimension
        {
        pushFollow(FOLLOW_2);
        ruleXJArrayDimension();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred41_InternalEketal

    // $ANTLR start synpred42_InternalEketal
    public final void synpred42_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7113:6: ( ( '>' '>' ) )
        // InternalEketal.g:7113:7: ( '>' '>' )
        {
        // InternalEketal.g:7113:7: ( '>' '>' )
        // InternalEketal.g:7114:7: '>' '>'
        {
        match(input,67,FOLLOW_87); if (state.failed) return ;
        match(input,67,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalEketal

    // $ANTLR start synpred43_InternalEketal
    public final void synpred43_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7174:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalEketal.g:7174:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalEketal.g:7174:6: ( () ( ( ruleOpAnd ) ) )
        // InternalEketal.g:7175:6: () ( ( ruleOpAnd ) )
        {
        // InternalEketal.g:7175:6: ()
        // InternalEketal.g:7176:6: 
        {
        }

        // InternalEketal.g:7177:6: ( ( ruleOpAnd ) )
        // InternalEketal.g:7178:7: ( ruleOpAnd )
        {
        // InternalEketal.g:7178:7: ( ruleOpAnd )
        // InternalEketal.g:7179:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred43_InternalEketal

    // $ANTLR start synpred44_InternalEketal
    public final void synpred44_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7259:5: ( ( () ( ( ruleOpInclusiveOr ) ) ) )
        // InternalEketal.g:7259:6: ( () ( ( ruleOpInclusiveOr ) ) )
        {
        // InternalEketal.g:7259:6: ( () ( ( ruleOpInclusiveOr ) ) )
        // InternalEketal.g:7260:6: () ( ( ruleOpInclusiveOr ) )
        {
        // InternalEketal.g:7260:6: ()
        // InternalEketal.g:7261:6: 
        {
        }

        // InternalEketal.g:7262:6: ( ( ruleOpInclusiveOr ) )
        // InternalEketal.g:7263:7: ( ruleOpInclusiveOr )
        {
        // InternalEketal.g:7263:7: ( ruleOpInclusiveOr )
        // InternalEketal.g:7264:8: ruleOpInclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpInclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred44_InternalEketal

    // $ANTLR start synpred45_InternalEketal
    public final void synpred45_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7366:5: ( ( () ( ( ruleOpExclusiveOr ) ) ) )
        // InternalEketal.g:7366:6: ( () ( ( ruleOpExclusiveOr ) ) )
        {
        // InternalEketal.g:7366:6: ( () ( ( ruleOpExclusiveOr ) ) )
        // InternalEketal.g:7367:6: () ( ( ruleOpExclusiveOr ) )
        {
        // InternalEketal.g:7367:6: ()
        // InternalEketal.g:7368:6: 
        {
        }

        // InternalEketal.g:7369:6: ( ( ruleOpExclusiveOr ) )
        // InternalEketal.g:7370:7: ( ruleOpExclusiveOr )
        {
        // InternalEketal.g:7370:7: ( ruleOpExclusiveOr )
        // InternalEketal.g:7371:8: ruleOpExclusiveOr
        {
        pushFollow(FOLLOW_2);
        ruleOpExclusiveOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred45_InternalEketal

    // $ANTLR start synpred46_InternalEketal
    public final void synpred46_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7473:5: ( ( () ( ( ruleOpBitwiseAnd ) ) ) )
        // InternalEketal.g:7473:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        {
        // InternalEketal.g:7473:6: ( () ( ( ruleOpBitwiseAnd ) ) )
        // InternalEketal.g:7474:6: () ( ( ruleOpBitwiseAnd ) )
        {
        // InternalEketal.g:7474:6: ()
        // InternalEketal.g:7475:6: 
        {
        }

        // InternalEketal.g:7476:6: ( ( ruleOpBitwiseAnd ) )
        // InternalEketal.g:7477:7: ( ruleOpBitwiseAnd )
        {
        // InternalEketal.g:7477:7: ( ruleOpBitwiseAnd )
        // InternalEketal.g:7478:8: ruleOpBitwiseAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpBitwiseAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred46_InternalEketal

    // $ANTLR start synpred47_InternalEketal
    public final void synpred47_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7614:5: ( ( () '{' ) )
        // InternalEketal.g:7614:6: ( () '{' )
        {
        // InternalEketal.g:7614:6: ( () '{' )
        // InternalEketal.g:7615:6: () '{'
        {
        // InternalEketal.g:7615:6: ()
        // InternalEketal.g:7616:6: 
        {
        }

        match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalEketal

    // $ANTLR start synpred48_InternalEketal
    public final void synpred48_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7715:5: ( ( () '{' ) )
        // InternalEketal.g:7715:6: ( () '{' )
        {
        // InternalEketal.g:7715:6: ( () '{' )
        // InternalEketal.g:7716:6: () '{'
        {
        // InternalEketal.g:7716:6: ()
        // InternalEketal.g:7717:6: 
        {
        }

        match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalEketal

    // $ANTLR start synpred49_InternalEketal
    public final void synpred49_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7843:5: ( '(' )
        // InternalEketal.g:7843:6: '('
        {
        match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_InternalEketal

    // $ANTLR start synpred50_InternalEketal
    public final void synpred50_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:7852:7: ( ( ( ( ruleValidID ) ) '=' ) )
        // InternalEketal.g:7852:8: ( ( ( ruleValidID ) ) '=' )
        {
        // InternalEketal.g:7852:8: ( ( ( ruleValidID ) ) '=' )
        // InternalEketal.g:7853:8: ( ( ruleValidID ) ) '='
        {
        // InternalEketal.g:7853:8: ( ( ruleValidID ) )
        // InternalEketal.g:7854:9: ( ruleValidID )
        {
        // InternalEketal.g:7854:9: ( ruleValidID )
        // InternalEketal.g:7855:10: ruleValidID
        {
        pushFollow(FOLLOW_8);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalEketal

    // $ANTLR start synpred53_InternalEketal
    public final void synpred53_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8123:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalEketal.g:8123:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalEketal.g:8123:6: ( () ( ( ruleOpOr ) ) )
        // InternalEketal.g:8124:6: () ( ( ruleOpOr ) )
        {
        // InternalEketal.g:8124:6: ()
        // InternalEketal.g:8125:6: 
        {
        }

        // InternalEketal.g:8126:6: ( ( ruleOpOr ) )
        // InternalEketal.g:8127:7: ( ruleOpOr )
        {
        // InternalEketal.g:8127:7: ( ruleOpOr )
        // InternalEketal.g:8128:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred53_InternalEketal

    // $ANTLR start synpred54_InternalEketal
    public final void synpred54_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8252:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalEketal.g:8252:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalEketal.g:8252:6: ( () ( ( ruleOpEquality ) ) )
        // InternalEketal.g:8253:6: () ( ( ruleOpEquality ) )
        {
        // InternalEketal.g:8253:6: ()
        // InternalEketal.g:8254:6: 
        {
        }

        // InternalEketal.g:8255:6: ( ( ruleOpEquality ) )
        // InternalEketal.g:8256:7: ( ruleOpEquality )
        {
        // InternalEketal.g:8256:7: ( ruleOpEquality )
        // InternalEketal.g:8257:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred54_InternalEketal

    // $ANTLR start synpred55_InternalEketal
    public final void synpred55_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8338:6: ( ( () 'instanceof' ) )
        // InternalEketal.g:8338:7: ( () 'instanceof' )
        {
        // InternalEketal.g:8338:7: ( () 'instanceof' )
        // InternalEketal.g:8339:7: () 'instanceof'
        {
        // InternalEketal.g:8339:7: ()
        // InternalEketal.g:8340:7: 
        {
        }

        match(input,93,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalEketal

    // $ANTLR start synpred56_InternalEketal
    public final void synpred56_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8381:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalEketal.g:8381:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalEketal.g:8381:7: ( () ( ( ruleOpCompare ) ) )
        // InternalEketal.g:8382:7: () ( ( ruleOpCompare ) )
        {
        // InternalEketal.g:8382:7: ()
        // InternalEketal.g:8383:7: 
        {
        }

        // InternalEketal.g:8384:7: ( ( ruleOpCompare ) )
        // InternalEketal.g:8385:8: ( ruleOpCompare )
        {
        // InternalEketal.g:8385:8: ( ruleOpCompare )
        // InternalEketal.g:8386:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred56_InternalEketal

    // $ANTLR start synpred57_InternalEketal
    public final void synpred57_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8516:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalEketal.g:8516:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalEketal.g:8516:6: ( () ( ( ruleOpOther ) ) )
        // InternalEketal.g:8517:6: () ( ( ruleOpOther ) )
        {
        // InternalEketal.g:8517:6: ()
        // InternalEketal.g:8518:6: 
        {
        }

        // InternalEketal.g:8519:6: ( ( ruleOpOther ) )
        // InternalEketal.g:8520:7: ( ruleOpOther )
        {
        // InternalEketal.g:8520:7: ( ruleOpOther )
        // InternalEketal.g:8521:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred57_InternalEketal

    // $ANTLR start synpred58_InternalEketal
    public final void synpred58_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8601:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalEketal.g:8601:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalEketal.g:8601:6: ( () ( ( ruleOpAdd ) ) )
        // InternalEketal.g:8602:6: () ( ( ruleOpAdd ) )
        {
        // InternalEketal.g:8602:6: ()
        // InternalEketal.g:8603:6: 
        {
        }

        // InternalEketal.g:8604:6: ( ( ruleOpAdd ) )
        // InternalEketal.g:8605:7: ( ruleOpAdd )
        {
        // InternalEketal.g:8605:7: ( ruleOpAdd )
        // InternalEketal.g:8606:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred58_InternalEketal

    // $ANTLR start synpred59_InternalEketal
    public final void synpred59_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:8716:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalEketal.g:8716:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalEketal.g:8716:6: ( () ( ( ruleOpMulti ) ) )
        // InternalEketal.g:8717:6: () ( ( ruleOpMulti ) )
        {
        // InternalEketal.g:8717:6: ()
        // InternalEketal.g:8718:6: 
        {
        }

        // InternalEketal.g:8719:6: ( ( ruleOpMulti ) )
        // InternalEketal.g:8720:7: ( ruleOpMulti )
        {
        // InternalEketal.g:8720:7: ( ruleOpMulti )
        // InternalEketal.g:8721:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred59_InternalEketal

    // $ANTLR start synpred60_InternalEketal
    public final void synpred60_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9150:4: ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalEketal.g:9150:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalEketal.g:9150:5: ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalEketal.g:9151:5: () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalEketal.g:9151:5: ()
        // InternalEketal.g:9152:5: 
        {
        }

        // InternalEketal.g:9153:5: ( ( 'final' ) )?
        int alt180=2;
        int LA180_0 = input.LA(1);

        if ( (LA180_0==53) ) {
            alt180=1;
        }
        switch (alt180) {
            case 1 :
                // InternalEketal.g:9154:6: ( 'final' )
                {
                // InternalEketal.g:9154:6: ( 'final' )
                // InternalEketal.g:9155:7: 'final'
                {
                match(input,53,FOLLOW_3); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalEketal.g:9158:5: ( ( ruleJvmTypeReference ) )
        // InternalEketal.g:9159:6: ( ruleJvmTypeReference )
        {
        // InternalEketal.g:9159:6: ( ruleJvmTypeReference )
        // InternalEketal.g:9160:7: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_3);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalEketal.g:9163:5: ( ( ruleValidID ) )
        // InternalEketal.g:9164:6: ( ruleValidID )
        {
        // InternalEketal.g:9164:6: ( ruleValidID )
        // InternalEketal.g:9165:7: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred60_InternalEketal

    // $ANTLR start synpred61_InternalEketal
    public final void synpred61_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9535:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )
        // InternalEketal.g:
        {
        if ( (input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING)||(input.LA(1)>=RULE_INT && input.LA(1)<=RULE_DECIMAL)||input.LA(1)==21||input.LA(1)==25||input.LA(1)==31||input.LA(1)==40||(input.LA(1)>=51 && input.LA(1)<=52)||input.LA(1)==69||(input.LA(1)>=90 && input.LA(1)<=91)||(input.LA(1)>=94 && input.LA(1)<=95)||(input.LA(1)>=97 && input.LA(1)<=102) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred61_InternalEketal

    // $ANTLR start synpred62_InternalEketal
    public final void synpred62_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9585:5: ( '.' )
        // InternalEketal.g:9585:6: '.'
        {
        match(input,38,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalEketal

    // $ANTLR start synpred63_InternalEketal
    public final void synpred63_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9748:5: ( '<' )
        // InternalEketal.g:9748:6: '<'
        {
        match(input,66,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalEketal

    // $ANTLR start synpred64_InternalEketal
    public final void synpred64_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9804:6: ( ( () '.' ) )
        // InternalEketal.g:9804:7: ( () '.' )
        {
        // InternalEketal.g:9804:7: ( () '.' )
        // InternalEketal.g:9805:7: () '.'
        {
        // InternalEketal.g:9805:7: ()
        // InternalEketal.g:9806:7: 
        {
        }

        match(input,38,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred64_InternalEketal

    // $ANTLR start synpred65_InternalEketal
    public final void synpred65_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:9842:7: ( '<' )
        // InternalEketal.g:9842:8: '<'
        {
        match(input,66,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalEketal

    // $ANTLR start synpred66_InternalEketal
    public final void synpred66_InternalEketal_fragment() throws RecognitionException {   
        // InternalEketal.g:10298:3: ( 'import' )
        // InternalEketal.g:10298:4: 'import'
        {
        match(input,51,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred66_InternalEketal

    // Delegated rules

    public final boolean synpred13_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalEketal() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalEketal_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA21 dfa21 = new DFA21(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA162 dfa162 = new DFA162(this);
    static final String dfa_1s = "\6\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\4\1\uffff\1\4";
    static final String dfa_3s = "\1\6\1\uffff\1\102\1\4\1\uffff\1\102";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\2\1\uffff";
    static final String dfa_5s = "\6\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\uffff\1\1",
            "",
            "\1\1\24\uffff\1\4\14\uffff\1\3\1\1\32\uffff\1\1",
            "\1\5",
            "",
            "\1\1\24\uffff\1\4\14\uffff\1\3\1\1\32\uffff\1\1"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1147:3: ( (lv_returndef_2_0= ruleTypeReturn ) )?";
        }
    }
    static final String dfa_7s = "\46\uffff";
    static final String dfa_8s = "\1\4\1\0\44\uffff";
    static final String dfa_9s = "\1\150\1\0\44\uffff";
    static final String dfa_10s = "\2\uffff\1\2\42\uffff\1\1";
    static final String dfa_11s = "\1\uffff\1\0\44\uffff}>";
    static final String[] dfa_12s = {
            "\2\2\1\uffff\4\2\5\uffff\1\2\4\uffff\1\1\3\uffff\1\2\5\uffff\1\2\2\uffff\1\2\5\uffff\1\2\12\uffff\3\2\1\uffff\2\2\14\uffff\1\2\1\uffff\1\2\1\uffff\3\2\2\uffff\1\2\2\uffff\1\2\10\uffff\2\2\2\uffff\2\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2748:2: ( ( ( ruleXBlockExpression )=>this_XBlockExpression_0= ruleXBlockExpression ) | this_XJSingleStatement_1= ruleXJSingleStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\7\uffff";
    static final String dfa_14s = "\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_15s = "\1\4\1\uffff\1\20\1\4\1\uffff\1\20\1\uffff";
    static final String dfa_16s = "\1\64\1\uffff\1\63\1\6\1\uffff\1\63\1\uffff";
    static final String dfa_17s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\3";
    static final String dfa_18s = "\7\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\57\uffff\1\1",
            "",
            "\2\4\24\uffff\1\3\14\uffff\1\4",
            "\1\5\1\uffff\1\6",
            "",
            "\2\4\24\uffff\1\3\14\uffff\1\4",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2795:3: ( ( ( (lv_static_1_0= 'static' ) ) ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_3_0= '*' ) ) | ( (lv_memberName_4_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_6_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
    static final String dfa_20s = "\51\uffff";
    static final String dfa_21s = "\1\4\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_22s = "\1\150\37\uffff\1\0\1\uffff\1\0\6\uffff";
    static final String dfa_23s = "\1\uffff\1\1\34\uffff\1\2\1\3\1\uffff\1\6\1\uffff\1\11\1\12\1\4\1\5\1\7\1\10";
    static final String dfa_24s = "\1\0\37\uffff\1\1\1\uffff\1\2\6\uffff}>";
    static final String[] dfa_25s = {
            "\2\1\1\uffff\4\1\5\uffff\1\44\4\uffff\1\1\3\uffff\1\1\5\uffff\1\1\2\uffff\1\37\5\uffff\1\1\12\uffff\3\1\1\uffff\2\1\14\uffff\1\1\1\uffff\1\40\1\uffff\1\41\1\1\1\36\2\uffff\1\42\2\uffff\1\43\10\uffff\2\1\2\uffff\2\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "3070:2: (this_XJSemicolonStatement_0= ruleXJSemicolonStatement | this_XSwitchExpression_1= ruleXSwitchExpression | this_XIfExpression_2= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleFullJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_3= ruleXForLoopExpression ) | this_XBasicForLoopExpression_4= ruleXBasicForLoopExpression | this_XWhileExpression_5= ruleXWhileExpression | ( ( ( () 'try' ( ( '(' ) ) ) )=>this_XJTryWithResourcesStatement_6= ruleXJTryWithResourcesStatement ) | this_XTryCatchFinallyExpression_7= ruleXTryCatchFinallyExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_8= ruleXSynchronizedExpression ) | this_XJEmptyStatement_9= ruleXJEmptyStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_0 = input.LA(1);

                         
                        int index55_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((LA55_0>=RULE_ID && LA55_0<=RULE_STRING)||(LA55_0>=RULE_INT && LA55_0<=RULE_DECIMAL)||LA55_0==21||LA55_0==25||LA55_0==31||LA55_0==40||(LA55_0>=51 && LA55_0<=53)||(LA55_0>=55 && LA55_0<=56)||LA55_0==69||LA55_0==74||(LA55_0>=90 && LA55_0<=91)||(LA55_0>=94 && LA55_0<=95)||(LA55_0>=97 && LA55_0<=104)) ) {s = 1;}

                        else if ( (LA55_0==75) ) {s = 30;}

                        else if ( (LA55_0==34) ) {s = 31;}

                        else if ( (LA55_0==71) ) {s = 32;}

                        else if ( (LA55_0==73) ) {s = 33;}

                        else if ( (LA55_0==78) ) {s = 34;}

                        else if ( (LA55_0==81) && (synpred8_InternalEketal())) {s = 35;}

                        else if ( (LA55_0==16) ) {s = 36;}

                         
                        input.seek(index55_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_32 = input.LA(1);

                         
                        int index55_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalEketal()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index55_32);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_34 = input.LA(1);

                         
                        int index55_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalEketal()) ) {s = 39;}

                        else if ( (true) ) {s = 40;}

                         
                        input.seek(index55_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\32\uffff";
    static final String dfa_27s = "\1\4\5\0\24\uffff";
    static final String dfa_28s = "\1\146\5\0\24\uffff";
    static final String dfa_29s = "\6\uffff\1\3\21\uffff\1\1\1\2";
    static final String dfa_30s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\24\uffff}>";
    static final String[] dfa_31s = {
            "\1\1\1\6\1\uffff\4\6\12\uffff\1\6\3\uffff\1\6\5\uffff\1\6\10\uffff\1\6\12\uffff\1\4\1\3\20\uffff\1\6\24\uffff\2\6\2\uffff\2\6\1\uffff\1\2\1\5\4\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "3705:2: ( ( ( ( ( () ( ( ruleFeatureCallID ) ) '[' ( ( ruleXExpression ) ) ']' ( '[' ( ( ruleXExpression ) ) ']' )* ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' (otherlv_5= '[' ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ruleOpSingleAssign ) ) ( (lv_value_9_0= ruleXAssignment ) ) ) | ( ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_13_0= ruleXAssignment ) ) ) | (this_XOrExpression_14= ruleXOrExpression ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_5 = input.LA(1);

                         
                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalEketal()) ) {s = 24;}

                        else if ( (synpred13_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\17\uffff";
    static final String dfa_33s = "\1\14\16\uffff";
    static final String dfa_34s = "\1\4\13\0\3\uffff";
    static final String dfa_35s = "\1\150\13\0\3\uffff";
    static final String dfa_36s = "\14\uffff\1\3\1\1\1\2";
    static final String dfa_37s = "\1\uffff\1\1\1\2\1\6\1\3\1\7\1\4\1\10\1\5\1\11\1\0\1\12\3\uffff}>";
    static final String[] dfa_38s = {
            "\7\14\5\uffff\1\14\4\uffff\3\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\14\3\uffff\4\14\11\uffff\3\14\1\uffff\2\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\2\14\1\uffff\10\14\2\uffff\13\14\1\uffff\3\14\1\uffff\10\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3921:4: ( ( ( ( ( () '?' ) )=> ( () otherlv_16= '?' ) ) ( (lv_then_17_0= ruleXExpression ) ) otherlv_18= ':' ( (lv_else_19_0= ruleXExpression ) ) ) | ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_22_0= ruleXAssignment ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalEketal()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_2 = input.LA(1);

                         
                        int index65_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_4 = input.LA(1);

                         
                        int index65_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_6 = input.LA(1);

                         
                        int index65_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_8 = input.LA(1);

                         
                        int index65_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA65_3 = input.LA(1);

                         
                        int index65_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_3);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA65_5 = input.LA(1);

                         
                        int index65_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_5);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA65_7 = input.LA(1);

                         
                        int index65_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_7);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred15_InternalEketal()) ) {s = 14;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\111\uffff";
    static final String dfa_40s = "\1\2\110\uffff";
    static final String dfa_41s = "\1\4\1\0\107\uffff";
    static final String dfa_42s = "\1\150\1\0\107\uffff";
    static final String dfa_43s = "\2\uffff\1\2\105\uffff\1\1";
    static final String dfa_44s = "\1\uffff\1\0\107\uffff}>";
    static final String[] dfa_45s = {
            "\7\2\5\uffff\1\2\4\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\1\2\1\1\2\2\11\uffff\3\2\1\uffff\17\2\1\uffff\10\2\2\uffff\13\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4179:3: ( ( ( () '[' ( ( ruleXExpression ) ) ']' ( ( ( '[' )=> '[' ) ( ( ruleXExpression ) ) ']' )* ) )=> ( () otherlv_2= '[' ( (lv_indexes_3_0= ruleXExpression ) ) otherlv_4= ']' ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\1\110\uffff";
    static final String dfa_47s = "\1\4\1\uffff\1\0\106\uffff";
    static final String dfa_48s = "\1\150\1\uffff\1\0\106\uffff";
    static final String dfa_49s = "\1\uffff\1\2\106\uffff\1\1";
    static final String dfa_50s = "\2\uffff\1\0\106\uffff}>";
    static final String[] dfa_51s = {
            "\7\1\5\uffff\1\1\4\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\1\2\2\1\11\uffff\3\1\1\uffff\17\1\1\uffff\10\1\2\uffff\13\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 4239:5: ( ( ( '[' )=>otherlv_5= '[' ) ( (lv_indexes_6_0= ruleXExpression ) ) otherlv_7= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_52s = {
            "\7\2\5\uffff\1\2\4\uffff\3\2\1\uffff\1\1\2\2\1\uffff\3\2\2\uffff\1\2\3\uffff\4\2\11\uffff\3\2\1\uffff\17\2\1\uffff\10\2\2\uffff\13\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "4315:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_2_0= '(' ) ) ( ( (lv_featureCallArguments_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_featureCallArguments_5_0= ruleXExpression ) ) )* )? otherlv_6= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_53s = {
            "\7\2\5\uffff\1\2\4\uffff\3\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\4\2\11\uffff\3\2\1\uffff\13\2\1\1\3\2\1\uffff\10\2\2\uffff\13\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "4431:3: ( ( ( ( '<' ) )=> (lv_explicitTypeArguments_3_0= '<' ) ) ( ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* )? otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "4501:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( (lv_arguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_arguments_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\1\4\2\uffff\1\0\105\uffff";
    static final String dfa_55s = "\1\150\2\uffff\1\0\105\uffff";
    static final String dfa_56s = "\3\uffff\1\0\105\uffff}>";
    static final String[] dfa_57s = {
            "\7\1\5\uffff\1\1\4\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\1\3\2\1\11\uffff\3\1\1\uffff\17\1\1\uffff\10\1\2\uffff\13\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_49;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "()* loopback of 4679:3: ( ( ( ( ruleXJArrayDimension ) )=> (lv_dimensions_6_0= ruleXJArrayDimension ) ) ( (lv_indexes_7_0= ruleXExpression ) )? otherlv_8= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_3 = input.LA(1);

                         
                        int index82_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index82_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_58s = {
            "\7\2\5\uffff\1\2\4\uffff\1\1\2\2\1\uffff\3\2\1\uffff\3\2\2\uffff\1\2\3\uffff\4\2\11\uffff\3\2\1\uffff\17\2\1\uffff\10\2\2\uffff\13\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "4727:3: ( ( ( ruleXJArrayLiteral ) )=> (lv_arrayLiteral_9_0= ruleXJArrayLiteral ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_1 = input.LA(1);

                         
                        int index83_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index83_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\25\uffff";
    static final String dfa_60s = "\1\4\1\0\23\uffff";
    static final String dfa_61s = "\1\146\1\0\23\uffff";
    static final String dfa_62s = "\2\uffff\1\2\21\uffff\1\1";
    static final String dfa_63s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_64s = {
            "\2\2\1\uffff\4\2\12\uffff\1\2\3\uffff\1\1\31\uffff\2\2\20\uffff\1\2\30\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "4798:2: ( ( ( ( () '(' ( ( ruleJvmTypeReference ) ) ')' ( ( ruleXExpression ) ) ) )=> ( () otherlv_1= '(' ( (lv_type_2_0= ruleJvmTypeReference ) ) otherlv_3= ')' ( (lv_target_4_0= ruleXExpression ) ) ) ) | this_XPostfixOperation_5= ruleXPostfixOperation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_1 = input.LA(1);

                         
                        int index84_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_InternalEketal()) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index84_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\1\4\35\uffff\1\0\52\uffff";
    static final String dfa_66s = "\1\150\35\uffff\1\0\52\uffff";
    static final String dfa_67s = "\36\uffff\1\0\52\uffff}>";
    static final String[] dfa_68s = {
            "\7\1\5\uffff\1\1\4\uffff\3\1\1\uffff\3\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\1\36\2\1\11\uffff\3\1\1\uffff\17\1\1\uffff\10\1\2\uffff\13\1\1\uffff\3\1\1\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_49;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "()* loopback of 5068:7: ( ( ( '[' )=>otherlv_10= '[' ) ( (lv_indexes_11_0= ruleXExpression ) ) otherlv_12= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_30 = input.LA(1);

                         
                        int index85_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index85_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "5293:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_13_0= '(' ) ) ( ( (lv_memberCallArguments_14_0= ruleXExpression ) ) (otherlv_15= ',' ( (lv_memberCallArguments_16_0= ruleXExpression ) ) )* )? otherlv_17= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_1 = input.LA(1);

                         
                        int index91_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEketal()) ) {s = 72;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index91_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\24\uffff";
    static final String dfa_70s = "\1\4\1\0\22\uffff";
    static final String dfa_71s = "\1\146\1\0\22\uffff";
    static final String dfa_72s = "\2\uffff\1\3\5\uffff\1\4\10\uffff\1\5\1\1\1\2";
    static final String dfa_73s = "\1\uffff\1\0\22\uffff}>";
    static final String[] dfa_74s = {
            "\1\2\1\10\1\uffff\4\10\12\uffff\1\10\3\uffff\1\21\31\uffff\2\2\20\uffff\1\1\33\uffff\3\2\3\10",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "6717:2: ( ( ( ( () 'new' ( ( ruleQualifiedName ) ) ( ( ruleXJArrayDimension ) ) ) )=>this_XJArrayConstructorCall_0= ruleXJArrayConstructorCall ) | this_XConstructorCall_1= ruleXConstructorCall | this_XJFeatureCallWithArrayAccess_2= ruleXJFeatureCallWithArrayAccess | this_XLiteral_3= ruleXLiteral | this_XParenthesizedExpression_4= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalEketal()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\4\1\0\30\uffff";
    static final String dfa_76s = "\1\146\1\0\30\uffff";
    static final String dfa_77s = "\2\uffff\1\2\26\uffff\1\1";
    static final String dfa_78s = "\1\uffff\1\0\30\uffff}>";
    static final String[] dfa_79s = {
            "\2\2\1\uffff\4\2\12\uffff\1\1\3\uffff\1\2\5\uffff\1\2\10\uffff\1\2\12\uffff\2\2\20\uffff\1\2\24\uffff\3\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "7611:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_1 = input.LA(1);

                         
                        int index125_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index125_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "7712:2: ( ( ( ( ( () '{' ) )=> ( () otherlv_1= '{' ) ) ( ( (lv_elements_2_0= ruleXAnnotationOrExpression ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_5= '}' ) | this_XAnnotationOrExpression_6= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalEketal()) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\33\uffff";
    static final String dfa_81s = "\1\4\1\0\31\uffff";
    static final String dfa_82s = "\1\146\1\0\31\uffff";
    static final String dfa_83s = "\2\uffff\1\2\26\uffff\1\3\1\1";
    static final String dfa_84s = "\1\uffff\1\0\31\uffff}>";
    static final String[] dfa_85s = {
            "\1\1\1\2\1\uffff\4\2\12\uffff\1\2\3\uffff\1\2\1\uffff\1\31\3\uffff\1\2\10\uffff\1\2\12\uffff\2\2\20\uffff\1\2\24\uffff\3\2\1\uffff\2\2\1\uffff\6\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "7849:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalEketal()) ) {s = 26;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\31\uffff";
    static final String dfa_87s = "\1\4\1\uffff\1\0\26\uffff";
    static final String dfa_88s = "\1\146\1\uffff\1\0\26\uffff";
    static final String dfa_89s = "\1\uffff\1\1\1\uffff\1\2\25\uffff";
    static final String dfa_90s = "\1\0\1\uffff\1\1\26\uffff}>";
    static final String[] dfa_91s = {
            "\1\2\1\3\1\uffff\4\3\12\uffff\1\3\3\uffff\1\3\5\uffff\1\3\10\uffff\1\3\12\uffff\2\3\1\1\17\uffff\1\3\24\uffff\2\3\2\uffff\2\3\1\uffff\6\3",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "9148:2: ( ( ( ( () ( ( 'final' ) )? ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=>this_XVariableDeclaration_0= ruleXVariableDeclaration ) | this_XExpression_1= ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_0 = input.LA(1);

                         
                        int index149_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA149_0==53) && (synpred60_InternalEketal())) {s = 1;}

                        else if ( (LA149_0==RULE_ID) ) {s = 2;}

                        else if ( (LA149_0==RULE_STRING||(LA149_0>=RULE_INT && LA149_0<=RULE_DECIMAL)||LA149_0==21||LA149_0==25||LA149_0==31||LA149_0==40||(LA149_0>=51 && LA149_0<=52)||LA149_0==69||(LA149_0>=90 && LA149_0<=91)||(LA149_0>=94 && LA149_0<=95)||(LA149_0>=97 && LA149_0<=102)) ) {s = 3;}

                         
                        input.seek(index149_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_2 = input.LA(1);

                         
                        int index149_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalEketal()) ) {s = 1;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index149_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\53\uffff";
    static final String dfa_93s = "\1\30\52\uffff";
    static final String dfa_94s = "\1\4\27\0\23\uffff";
    static final String dfa_95s = "\1\150\27\0\23\uffff";
    static final String dfa_96s = "\30\uffff\1\2\21\uffff\1\1";
    static final String dfa_97s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\23\uffff}>";
    static final String[] dfa_98s = {
            "\1\1\1\26\1\uffff\1\22\1\25\1\21\1\23\5\uffff\1\30\4\uffff\1\27\1\30\2\uffff\1\12\5\uffff\1\6\2\uffff\1\30\5\uffff\1\7\12\uffff\1\4\1\3\1\30\1\uffff\2\30\14\uffff\1\15\1\uffff\10\30\2\uffff\1\30\10\uffff\1\10\1\11\2\uffff\1\13\1\14\1\uffff\1\2\1\5\1\16\1\17\1\20\1\24\2\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_92;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "9534:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | '~' | '(' | '++' | '--' | 'new' | 'super' | 'false' | 'true' | 'null' | '{' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_CHARACTER | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_3 = input.LA(1);

                         
                        int index154_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_4 = input.LA(1);

                         
                        int index154_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_5 = input.LA(1);

                         
                        int index154_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_6 = input.LA(1);

                         
                        int index154_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_7 = input.LA(1);

                         
                        int index154_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_8 = input.LA(1);

                         
                        int index154_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_9 = input.LA(1);

                         
                        int index154_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_10 = input.LA(1);

                         
                        int index154_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_11 = input.LA(1);

                         
                        int index154_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA154_12 = input.LA(1);

                         
                        int index154_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA154_13 = input.LA(1);

                         
                        int index154_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA154_14 = input.LA(1);

                         
                        int index154_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA154_15 = input.LA(1);

                         
                        int index154_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA154_16 = input.LA(1);

                         
                        int index154_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA154_17 = input.LA(1);

                         
                        int index154_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA154_18 = input.LA(1);

                         
                        int index154_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA154_19 = input.LA(1);

                         
                        int index154_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA154_20 = input.LA(1);

                         
                        int index154_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA154_21 = input.LA(1);

                         
                        int index154_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA154_22 = input.LA(1);

                         
                        int index154_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA154_23 = input.LA(1);

                         
                        int index154_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_InternalEketal()) ) {s = 42;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index154_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\121\uffff";
    static final String dfa_100s = "\1\2\120\uffff";
    static final String dfa_101s = "\1\4\1\0\117\uffff";
    static final String dfa_102s = "\1\150\1\0\117\uffff";
    static final String dfa_103s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_104s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_105s = {
            "\7\2\5\uffff\1\2\4\uffff\13\2\2\uffff\2\2\2\uffff\5\2\1\uffff\1\2\4\uffff\21\2\1\1\3\2\1\uffff\10\2\2\uffff\13\2\1\uffff\3\2\1\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_99;
            this.eof = dfa_100;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "9746:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalEketal()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_99;
            this.eof = dfa_100;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "9840:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalEketal()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0008000000030002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0008000000020002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000340000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x00000E0000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0006140811400010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0020000008000010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x000000000C000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0020000000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000A00000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000782010000L,0x0000300000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000782000000L,0x0000300000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000702000000L,0x0000300000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x000000B0004000D0L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000080000000C0L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000400010L,0x0001C00000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000810000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000020010000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001C00082000010L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000002000010L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x000E000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000000000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0040000000000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x01B8010482E107B0L,0x000001FECC024EA0L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000004080002L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x00380100822007B0L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000008000080000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0xFE00000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x003801008A2007B0L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0200000000000010L,0x0000000000000008L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000004000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0200000000000010L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x00380300822007B0L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00000080002007A2L,0x0000007000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000008000000002L,0x00000000C0000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x000000C000000002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x000000C000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0018000000000010L,0x0000000600000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0018000000000010L,0x0000000E00000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x000000C002000002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x01B8010482A107B0L,0x000001FECC024EA0L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00380100822107B0L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000004010000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000400000L,0x0000000000003000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x01B8010482A107B2L,0x000001FECC024EA0L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000000000018000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000018000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x00380100826007B0L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000004400000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x00380100826007B0L,0x0000007EDC000020L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x00380100822007B0L,0x0000007EDC000020L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x003801008A2007B0L,0x0000007EDC000020L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x00000000000C0000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x000000002000001CL});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400008L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000010000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000042L,0x0000000000300000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000020004000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x00380100822107B2L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x00380100822007B2L,0x0000007ECC000020L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000480L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000004000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000A00000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000012L});

}